[{"author":null,"categories":["Tech","Open Source"],"content":"","date":1716163200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1716163200,"objectID":"b73bce5080ee89af5b28ba92de8118e1","permalink":"http://localhost:1313/post/2024-05-17-client-ip-en/","publishdate":"2024-05-20T00:00:00Z","readingtime":14,"relpermalink":"/post/2024-05-17-client-ip-en/","section":"post","summary":"Just as a river flows from its source through various bends before reaching the sea, a typical HTTP request travels from a client across multiple network hops until it reaches its destination server.\nDuring this journey, the request’s original IP address is lost as it moves through multiple network infrastructures such as proxy servers and load balancers. This happens because some of these hops terminate the TCP connection and create a new TCP connection with the next hop.","tags":["Envoy","Envoy Gateway","X-Forwarded-For","Proxy Protocol"],"title":"How to Get the Client’s “Real” IP Address with Envoy Gateway ?","type":"post","url":"/post/2024-05-17-client-ip-en/","weight":0,"wordcount":2771},{"author":null,"categories":["Tech","Open Source"],"content":"本文将介绍使用 X-Forwarded-For Header、自定义 HTTP Header 和代理协议这些方法来获取客户端真实地址的原理，以及如何采用 Envoy Gateway 来方便地获取到客户端的真实 IP 地址，并基于客户端 IP 地址进行对请求进行访问控制、限流等操作，以提高应用的安全性和可用性。","date":1716163200,"description":"本文将介绍使用 X-Forwarded-For Header、自定义 HTTP Header 和代理协议这些方法来获取客户端真实地址的原理，以及如何采用 Envoy Gateway 来方便地获取到客户端的真实 IP 地址，并基于客户端 IP 地址进行对请求进行访问控制、限流等操作，以提高应用的安全性和可用性。","dir":"post\\","excerpt_html":"本文将介绍使用 X-Forwarded-For Header、自定义 HTTP Header 和代理协议这些方法来获取客户端真实地址的原理，以及如何采用 Envoy Gateway 来方便地获取到客户端的真实 IP 地址，并基于客户端 IP 地址进行对请求进行访问控制、限流等操作，以提高应用的安全性和可用性。","excerpt_text":"本文将介绍使用 X-Forwarded-For Header、自定义 HTTP Header 和代理协议这些方法来获取客户端真实地址的原理，以及如何采用 Envoy Gateway 来方便地获取到客户端的真实 IP 地址，并基于客户端 IP 地址进行对请求进行访问控制、限流等操作，以提高应用的安全性和可用性。","expirydate":-62135596800,"fuzzywordcount":5300,"html":"本文将介绍使用 X-Forwarded-For Header、自定义 HTTP Header 和代理协议这些方法来获取客户端真实地址的原理，以及如何采用 Envoy Gateway 来方便地获取到客户端的真实 IP 地址，并基于客户端 IP 地址进行对请求进行访问控制、限流等操作，以提高应用的安全性和可用性。","keywords":null,"kind":"page","lang":"en","lastmod":1716163200,"objectID":"c543bd2dca616a52c42f5e2d6cb4cfb7","permalink":"http://localhost:1313/post/2024-05-17-client-ip/","publishdate":"2024-05-20T00:00:00Z","readingtime":11,"relpermalink":"/post/2024-05-17-client-ip/","section":"post","summary":"前言 河水出昆仑，东流经玉门，环绝壁，历五山，南至积石，东流入海。其流也，或曲或直，时急时缓，遇山则环，逢谷则奔。渐行渐远，百折千回，至于中原","tags":["Envoy","Envoy Gateway","X-Forwarded-For","Proxy Protocol"],"title":"如何通过 Envoy Gateway 得到客户端的真实 IP 地址？","type":"post","url":"/post/2024-05-17-client-ip/","weight":0,"wordcount":5286},{"author":null,"categories":null,"content":"硅谷，计算机从业者的圣殿，全球高科技创新的摇篮。硅谷神秘面纱下的工作和生活到底是怎样的？本文将以我自己 — 一个普通“码农”的视角来记录在硅谷日常生活的一些点点滴滴。","date":1714262400,"description":"硅谷，计算机从业者的圣殿，全球高科技创新的摇篮。硅谷神秘面纱下的工作和生活到底是怎样的？本文将以我自己 — 一个普通“码农”的视角来记录在硅谷日常生活的一些点点滴滴。","dir":"post\\","excerpt_html":"硅谷，计算机从业者的圣殿，全球高科技创新的摇篮。硅谷神秘面纱下的工作和生活到底是怎样的？本文将以我自己 — 一个普通“码农”的视角来记录在硅谷日常生活的一些点点滴滴。","excerpt_text":"硅谷，计算机从业者的圣殿，全球高科技创新的摇篮。硅谷神秘面纱下的工作和生活到底是怎样的？本文将以我自己 — 一个普通“码农”的视角来记录在硅谷日常生活的一些点点滴滴。","expirydate":-62135596800,"fuzzywordcount":3700,"html":"硅谷，计算机从业者的圣殿，全球高科技创新的摇篮。硅谷神秘面纱下的工作和生活到底是怎样的？本文将以我自己 — 一个普通“码农”的视角来记录在硅谷日常生活的一些点点滴滴。","keywords":null,"kind":"page","lang":"en","lastmod":1714262400,"objectID":"fe0b6baa6f803d843f797c691b3a75e5","permalink":"http://localhost:1313/post/2024-04-28-silicon-valley/","publishdate":"2024-04-28T00:00:00Z","readingtime":8,"relpermalink":"/post/2024-04-28-silicon-valley/","section":"post","summary":"硅谷，计算机从业者的圣殿，全球高科技创新的摇篮。硅谷神秘面纱下的工作和生活到底是怎样的？ 本文将以我自己 \u0026mdash; 一个普通“码农”的视角来记录在硅谷日","tags":null,"title":"码农漫游记：硅谷探秘","type":"post","url":"/post/2024-04-28-silicon-valley/","weight":0,"wordcount":3688},{"author":null,"categories":["Tech"],"content":"在讨论可用性和弹性时，我们通常是从基础设施和服务的角度来探讨的。那么有没有办法在不修改服务的情况下在客户端提高服务的“实际感知可用性”呢？","date":1712448000,"description":"在讨论可用性和弹性时，我们通常是从基础设施和服务的角度来探讨的。那么有没有办法在不修改服务的情况下在客户端提高服务的“实际感知可用性”呢？","dir":"post\\","excerpt_html":"在讨论可用性和弹性时，我们通常是从基础设施和服务的角度来探讨的。那么有没有办法在不修改服务的情况下在客户端提高服务的“实际感知可用性”呢？","excerpt_text":"在讨论可用性和弹性时，我们通常是从基础设施和服务的角度来探讨的。那么有没有办法在不修改服务的情况下在客户端提高服务的“实际感知可用性”呢？","expirydate":-62135596800,"fuzzywordcount":3300,"html":"在讨论可用性和弹性时，我们通常是从基础设施和服务的角度来探讨的。那么有没有办法在不修改服务的情况下在客户端提高服务的“实际感知可用性”呢？","keywords":null,"kind":"page","lang":"en","lastmod":1712448000,"objectID":"1e0bcda652154abb88edaa0f8a24d6ac","permalink":"http://localhost:1313/post/2024-04-07-client-side-availability-and-resiliency/","publishdate":"2024-04-07T00:00:00Z","readingtime":7,"relpermalink":"/post/2024-04-07-client-side-availability-and-resiliency/","section":"post","summary":"如何从客户端角度思考服务的可用性和弹性 这是一系列关于 Envoy Gateway 价值的文章之一，该网关已经达到了 1.0 版本的发布里程碑，可以投入生产使用。 在讨论可用性和","tags":["Envoy Gateway","Envoy","Service Mesh"],"title":"使用服务网格和 Envoy Gateway 构建客户端的可用性和弹性","type":"post","url":"/post/2024-04-07-client-side-availability-and-resiliency/","weight":0,"wordcount":3246},{"author":null,"categories":["Tech","Open Source"],"content":"对于开发者来说，提交 PR（Pull Reques）是参与开源项目的主要方式。不管是修复一个故障，添加一个新功能，还是改进文档，我们都需要通过提交 PR 的方式将其合入到项目的主分支中。那么，我们提交的 PR 如何才能尽快地被项目接受呢？","date":1711324800,"description":"对于开发者来说，提交 PR（Pull Reques）是参与开源项目的主要方式。不管是修复一个故障，添加一个新功能，还是改进文档，我们都需要通过提交 PR 的方式将其合入到项目的主分支中。那么，我们提交的 PR 如何才能尽快地被项目接受呢？","dir":"post\\","excerpt_html":"对于开发者来说，提交 PR（Pull Reques）是参与开源项目的主要方式。不管是修复一个故障，添加一个新功能，还是改进文档，我们都需要通过提交 PR 的方式将其合入到项目的主分支中。那么，我们提交的 PR 如何才能尽快地被项目接受呢？","excerpt_text":"对于开发者来说，提交 PR（Pull Reques）是参与开源项目的主要方式。不管是修复一个故障，添加一个新功能，还是改进文档，我们都需要通过提交 PR 的方式将其合入到项目的主分支中。那么，我们提交的 PR 如何才能尽快地被项目接受呢？","expirydate":-62135596800,"fuzzywordcount":5700,"html":"对于开发者来说，提交 PR（Pull Reques）是参与开源项目的主要方式。不管是修复一个故障，添加一个新功能，还是改进文档，我们都需要通过提交 PR 的方式将其合入到项目的主分支中。那么，我们提交的 PR 如何才能尽快地被项目接受呢？","keywords":null,"kind":"page","lang":"en","lastmod":1711324800,"objectID":"dd371107e8b171323f685a968839993b","permalink":"http://localhost:1313/post/2024-03-20-how-to-create-a-pull-request/","publishdate":"2024-03-25T00:00:00Z","readingtime":12,"relpermalink":"/post/2024-03-20-how-to-create-a-pull-request/","section":"post","summary":"我提交的 PR 为何还没能合入？如何才能更快地合入我的 PR ？ 相信这是很多参与开源项目的开发者常常遇到的疑问。 对于开发者来说，提交 PR（Pull Req","tags":null,"title":"我提交的 PR 为何还没能合入？","type":"post","url":"/post/2024-03-20-how-to-create-a-pull-request/","weight":0,"wordcount":5615},{"author":null,"categories":["Tech","Open Source"],"content":"。","date":1710460800,"description":"。","dir":"post\\","excerpt_html":"。","excerpt_text":"。","expirydate":-62135596800,"fuzzywordcount":1300,"html":"。","keywords":null,"kind":"page","lang":"en","lastmod":1710460800,"objectID":"7bd434635c29edcd11fe327e0dd3ea3c","permalink":"http://localhost:1313/post/2024-03-05-envoy-gateway-ga/","publishdate":"2024-03-15T00:00:00Z","readingtime":3,"relpermalink":"/post/2024-03-05-envoy-gateway-ga/","section":"post","summary":"作者 Envoy Gateway 社区：Alice Wasko (Ambassador Labs), Arko Dasgupta (Tetrate), Congqi Zhu (CECloud), Guy Daich (SAP), Huabing Zhao (Tetrate), Jianpeng He (Tetrate), Xunzhuo Liu (Tencent) 今天，我们非常高兴地宣布 Envoy Gateway (EG) 1.0 版本现已面向 Kubernetes 发布。这是一个成熟的版本，已","tags":["Envoy Gateway"],"title":"Envoy Gateway 发布通用可用版本 1.0.0 ！","type":"post","url":"/post/2024-03-05-envoy-gateway-ga/","weight":0,"wordcount":1289},{"author":null,"categories":["Tech","Open Source"],"content":"单点登录（SSO）简化了用户体验，使用户能够在访问多个应用时只需一次登录。Envoy Gateway 在最新版本中的安全策略中提供了 OpenID Connect (OIDC) 的能力，采用 Envoy Gateway，无需对应用做任何修改，即可立刻实现基于 OIDC 的单点登录。","date":1701907200,"description":"单点登录（SSO）简化了用户体验，使用户能够在访问多个应用时只需一次登录。Envoy Gateway 在最新版本中的安全策略中提供了 OpenID Connect (OIDC) 的能力，采用 Envoy Gateway，无需对应用做任何修改，即可立刻实现基于 OIDC 的单点登录。","dir":"post\\","excerpt_html":"单点登录（SSO）简化了用户体验，使用户能够在访问多个应用时只需一次登录。Envoy Gateway 在最新版本中的安全策略中提供了 OpenID Connect (OIDC) 的能力，采用 Envoy Gateway，无需对应用做任何修改，即可立刻实现基于 OIDC 的单点登录。","excerpt_text":"单点登录（SSO）简化了用户体验，使用户能够在访问多个应用时只需一次登录。Envoy Gateway 在最新版本中的安全策略中提供了 OpenID Connect (OIDC) 的能力，采用 Envoy Gateway，无需对应用做任何修改，即可立刻实现基于 OIDC 的单点登录。","expirydate":-62135596800,"fuzzywordcount":3200,"html":"单点登录（SSO）简化了用户体验，使用户能够在访问多个应用时只需一次登录。Envoy Gateway 在最新版本中的安全策略中提供了 OpenID Connect (OIDC) 的能力，采用 Envoy Gateway，无需对应用做任何修改，即可立刻实现基于 OIDC 的单点登录。","keywords":null,"kind":"page","lang":"en","lastmod":1701907200,"objectID":"9feeb4b8e62e724c140e2fb8dc7cfd22","permalink":"http://localhost:1313/post/2023-12-07-envoy-gateway-security-policy-oidc/","publishdate":"2023-12-07T00:00:00Z","readingtime":7,"relpermalink":"/post/2023-12-07-envoy-gateway-security-policy-oidc/","section":"post","summary":"单点登录（SSO）简化了用户体验，使用户能够在访问多个应用时只需一次登录。这提高了用户满意度，减少了密码遗忘的风险，同时增强了安全性。但是，","tags":["Envoy Gateway"],"title":"Envoy Gateway：十分钟搞定单点登录（SSO）！","type":"post","url":"/post/2023-12-07-envoy-gateway-security-policy-oidc/","weight":0,"wordcount":3157},{"author":null,"categories":["Tech","Open Source"],"content":"","date":1701216000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1701216000,"objectID":"ae6d8f8a947aec2a442f1faf249f78eb","permalink":"http://localhost:1313/post/2023-11-29-envoy-gateway-security-policy-basic-auth/","publishdate":"2023-11-29T00:00:00Z","readingtime":4,"relpermalink":"/post/2023-11-29-envoy-gateway-security-policy-basic-auth/","section":"post","summary":"什么是 Envoy Gateway 安全策略？ Envoy Gateway 中的安全策略 (SecurityPolicy) 是 Envoy Gateway 对 Kubernetes Gateway API 的一个扩展资源。SecurityPolicy 采用了 Gateway API 的 Policy Attachment 机制来对 Gateway API 进行扩展，为 Envoy Gateway","tags":["Envoy Gateway"],"title":"Envoy Gateway 安全策略介绍: HTTP Basic Authentication","type":"post","url":"/post/2023-11-29-envoy-gateway-security-policy-basic-auth/","weight":0,"wordcount":1671},{"author":null,"categories":["Tech","Open Source","Presentations"],"content":"我在 KubeCon NA 上分享了基于 Envoy 的通用七层协议代理框架 MetaProtocol Proxy","date":1700092800,"description":"我在 KubeCon NA 上分享了基于 Envoy 的通用七层协议代理框架 MetaProtocol Proxy","dir":"post\\","excerpt_html":"我在 KubeCon NA 上分享了基于 Envoy 的通用七层协议代理框架 MetaProtocol Proxy","excerpt_text":"我在 KubeCon NA 上分享了基于 Envoy 的通用七层协议代理框架 MetaProtocol Proxy","expirydate":-62135596800,"fuzzywordcount":100,"html":"我在 KubeCon NA 上分享了基于 Envoy 的通用七层协议代理框架 MetaProtocol Proxy","keywords":null,"kind":"page","lang":"en","lastmod":1700092800,"objectID":"ee36a032c12dc37597881d09d0f45320","permalink":"http://localhost:1313/post/2023-11-16-kubecon-na-metaprotocol/","publishdate":"2023-11-16T00:00:00Z","readingtime":1,"relpermalink":"/post/2023-11-16-kubecon-na-metaprotocol/","section":"post","summary":"Even with Envoy\u0026rsquo;s powerful filter extension mechanism, writing a proxy for none-http protocols from scratch can be challenging. MetaProtocol Proxy solves this by abstracting layer-7 proxy with a concept called metadata and providing a “batteries included” framework that includes common traffic management capabilities: load balancing, circuit breaker, routing, rate limiting, fault injection, observability,","tags":["KubeCon","Envoy","MetaProtocol"],"title":"KubeCon NA - Introduce MetaProtocol Proxy: A Layer-7 Proxy Framework Powered by Envoy","type":"post","url":"/post/2023-11-16-kubecon-na-metaprotocol/","weight":0,"wordcount":95},{"author":null,"categories":["Tech","Open Source"],"content":"Envoy Gateway 项目 Maintainer Alice Wasko 谈 Envoy Gateway 项目的起源与未来","date":1700092800,"description":"Envoy Gateway 项目 Maintainer Alice Wasko 谈 Envoy Gateway 项目的起源与未来","dir":"post\\","excerpt_html":"Envoy Gateway 项目 Maintainer Alice Wasko 谈 Envoy Gateway 项目的起源与未来","excerpt_text":"Envoy Gateway 项目 Maintainer Alice Wasko 谈 Envoy Gateway 项目的起源与未来","expirydate":-62135596800,"fuzzywordcount":1900,"html":"Envoy Gateway 项目 Maintainer Alice Wasko 谈 Envoy Gateway 项目的起源与未来","keywords":null,"kind":"page","lang":"en","lastmod":1700092800,"objectID":"0fde1e7cba179c276c09fc83ad7e8721","permalink":"http://localhost:1313/post/2023-11-16-kubecon-na-lin-alice-wasko/","publishdate":"2023-11-16T00:00:00Z","readingtime":4,"relpermalink":"/post/2023-11-16-kubecon-na-lin-alice-wasko/","section":"post","summary":"Videos Bilibili YouTube 采访内容(待整理): Huabing: I will introduce this interview first in Chinese, because the audience are from China. Envoy Gateway 社区的朋友大家好，我们今天有幸邀请到了 Envoy Gateway 的维护者，来自 Emissary 的 Alice。 Alice 从 Envoy Gateway","tags":["KubeCon","Istio"],"title":"KubeCon 芝加哥现场报道 - Envoy Gateway Maintainer Alice Wasko","type":"post","url":"/post/2023-11-16-kubecon-na-lin-alice-wasko/","weight":0,"wordcount":1894},{"author":null,"categories":["Tech","Open Source"],"content":"前 Goole 产品经理, 硅谷初创企业 Tetrate.io CEO, Istio 创始人 Varun Talwar 解密 Istio 开源背后的故事","date":1700092800,"description":"前 Goole 产品经理, 硅谷初创企业 Tetrate.io CEO, Istio 创始人 Varun Talwar 解密 Istio 开源背后的故事","dir":"post\\","excerpt_html":"前 Goole 产品经理, 硅谷初创企业 Tetrate.io CEO, Istio 创始人 Varun Talwar 解密 Istio 开源背后的故事","excerpt_text":"前 Goole 产品经理, 硅谷初创企业 Tetrate.io CEO, Istio 创始人 Varun Talwar 解密 Istio 开源背后的故事","expirydate":-62135596800,"fuzzywordcount":6300,"html":"前 Goole 产品经理, 硅谷初创企业 Tetrate.io CEO, Istio 创始人 Varun Talwar 解密 Istio 开源背后的故事","keywords":null,"kind":"page","lang":"en","lastmod":1700092800,"objectID":"58454693b6161834c3fce7ceea6e4177","permalink":"http://localhost:1313/post/2023-11-16-kubecon-na-varun-talwar-interview/","publishdate":"2023-11-16T00:00:00Z","readingtime":13,"relpermalink":"/post/2023-11-16-kubecon-na-varun-talwar-interview/","section":"post","summary":"Videos Bilibili YouTube 采访内容(译文): Huabing：你好， Varun，感谢你接受我们的采访。Varun Talwar 是著名开源项目 Istio 的创始人之一，也是硅谷科技初创公","tags":["KubeCon","Istio"],"title":"KubeCon 芝加哥现场报道 - Istio 创始人 Varun Talwar 解密 Istio 开源背后的故事","type":"post","url":"/post/2023-11-16-kubecon-na-varun-talwar-interview/","weight":0,"wordcount":6260},{"author":null,"categories":["Tech","Open Source"],"content":"Istio 技术指导委员会成员, 来自 Solo.io 的 Lin Sun 和我们分享 Isito 项目历史与未来展望","date":1700092800,"description":"Istio 技术指导委员会成员, 来自 Solo.io 的 Lin Sun 和我们分享 Isito 项目历史与未来展望","dir":"post\\","excerpt_html":"Istio 技术指导委员会成员, 来自 Solo.io 的 Lin Sun 和我们分享 Isito 项目历史与未来展望","excerpt_text":"Istio 技术指导委员会成员, 来自 Solo.io 的 Lin Sun 和我们分享 Isito 项目历史与未来展望","expirydate":-62135596800,"fuzzywordcount":2200,"html":"Istio 技术指导委员会成员, 来自 Solo.io 的 Lin Sun 和我们分享 Isito 项目历史与未来展望","keywords":null,"kind":"page","lang":"en","lastmod":1700092800,"objectID":"d04d55dceb77278cbe24aab684bc9d90","permalink":"http://localhost:1313/post/2023-11-16-kubecon-na-lin-sun-interview/","publishdate":"2023-11-16T00:00:00Z","readingtime":5,"relpermalink":"/post/2023-11-16-kubecon-na-lin-sun-interview/","section":"post","summary":"Videos Bilibili YouTube 采访内容(待整理): Um OK. Let\u0026rsquo;s just switch the image. OK. Um I think you already give us a little bit of background and interaction on yourself. So I, I think it\u0026rsquo;s fair to say you are one of the founder, etcetera. So uh maybe tell us um what give you involved in Mr Smith first. Um What inspired you","tags":["KubeCon","Istio"],"title":"KubeCon 芝加哥现场报道 - Istio 技术指导委员会成员 Lin Sun 分享 Istio 项目历史与未来展望","type":"post","url":"/post/2023-11-16-kubecon-na-lin-sun-interview/","weight":0,"wordcount":2110},{"author":null,"categories":["Tech","Open Source"],"content":"Istio 社区核心维护者, 来自 Google 的 John Howard 分享他高效的秘诀","date":1700092800,"description":"Istio 社区核心维护者, 来自 Google 的 John Howard 分享他高效的秘诀","dir":"post\\","excerpt_html":"Istio 社区核心维护者, 来自 Google 的 John Howard 分享他高效的秘诀","excerpt_text":"Istio 社区核心维护者, 来自 Google 的 John Howard 分享他高效的秘诀","expirydate":-62135596800,"fuzzywordcount":3000,"html":"Istio 社区核心维护者, 来自 Google 的 John Howard 分享他高效的秘诀","keywords":null,"kind":"page","lang":"en","lastmod":1700092800,"objectID":"ca097765d890aff4d4749d6da17c397d","permalink":"http://localhost:1313/post/2023-11-16-kubecon-na-john-howard-interview/","publishdate":"2023-11-16T00:00:00Z","readingtime":6,"relpermalink":"/post/2023-11-16-kubecon-na-john-howard-interview/","section":"post","summary":"Videos Bilibili YouTube 采访内容(待整理): Huabing: OK, let\u0026rsquo;s welcome our superstar from Istio community. John Howard, Is my pronunciation correct? John: Yeah, John Howard, I\u0026rsquo;m John. I\u0026rsquo;m a software engineer at Google. I\u0026rsquo;ve been involved with the Istio community for about the last five years now, kind of all sorts of different roles. I started out mostly working in the networking area","tags":["KubeCon","Istio"],"title":"KubeCon 芝加哥现场报道 - Istio 社区核心维护者 John Howard 分享他高效的秘诀","type":"post","url":"/post/2023-11-16-kubecon-na-john-howard-interview/","weight":0,"wordcount":2939},{"author":null,"categories":["Tech","Open Source","Presentations"],"content":"KubeCon 分享：为什么 Envoy Gateway 是云原生时代的 API 网关？","date":1698796800,"description":"KubeCon 分享：为什么 Envoy Gateway 是云原生时代的 API 网关？","dir":"post\\","excerpt_html":"KubeCon 分享：为什么 Envoy Gateway 是云原生时代的 API 网关？","excerpt_text":"KubeCon 分享：为什么 Envoy Gateway 是云原生时代的 API 网关？","expirydate":-62135596800,"fuzzywordcount":300,"html":"KubeCon 分享：为什么 Envoy Gateway 是云原生时代的 API 网关？","keywords":null,"kind":"page","lang":"en","lastmod":1698796800,"objectID":"4044428414038cc4e8d87421e9888f58","permalink":"http://localhost:1313/post/2023-11-01-kubecon-shanghai-2023-envoy-gateway-the-api-gateway-in-the-cloud-native-era/","publishdate":"2023-11-01T00:00:00Z","readingtime":1,"relpermalink":"/post/2023-11-01-kubecon-shanghai-2023-envoy-gateway-the-api-gateway-in-the-cloud-native-era/","section":"post","summary":"EnvoyProx 是云原生时代的代理之一，也是CNCF下的毕业项目之一。Envoy Gateway 是由 EnvoyProxy 的创始人 Matt Klein 发起的 API 网关项目。由我所在公司（Tetrate.io）","tags":["Envoy","Envoy Gateway","API Gateway"],"title":"KubeCon 上海分享: Envoy Gateway - The API Gateway in the Cloud Native Era","type":"post","url":"/post/2023-11-01-kubecon-shanghai-2023-envoy-gateway-the-api-gateway-in-the-cloud-native-era/","weight":0,"wordcount":272},{"author":null,"categories":null,"content":"","date":1695686400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1695686400,"objectID":"5dba08a10dd2e51445e7749d9bba0ba3","permalink":"http://localhost:1313/post/digital-nomad-draft/","publishdate":"2023-09-26T00:00:00Z","readingtime":1,"relpermalink":"/post/digital-nomad-draft/","section":"post","summary":"远程工作的一个好处是你可以在任何地点上班。我有时候会到西村奈雪的茶点一杯咖啡，然后在其临街的座位上坐上一个上午。上午通常是处理邮件，Gith","tags":null,"title":"","type":"post","url":"/post/digital-nomad-draft/","weight":0,"wordcount":217},{"author":null,"categories":null,"content":"","date":1695686400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1695686400,"objectID":"0c57d4f7d5ad682dd9224814b1bbe159","permalink":"http://localhost:1313/post/envoy-thread-local--storage/","publishdate":"2023-09-26T00:00:00Z","readingtime":1,"relpermalink":"/post/envoy-thread-local--storage/","section":"post","summary":"@startuml SlotAllocator \u0026lt;|-- Instance TypedSlot o-- Slot Slot : bool currentThreadRegistered() Slot : void set(InitializeCb cb) Slot : ThreadLocalObjectSharedPtr get() TypedSlot : bool currentThreadRegistered() TypedSlot : void set(InitializeCb cb) TypedSlot : ThreadLocalObjectSharedPtr get() TypedSlot : void runOnAllThreads(const UpdateCb\u0026amp; cb) SlotAllocator : SlotPtr allocateSlot() Instance : void registerThread(Event::Dispatcher\u0026amp; dispatcher, bool main_thread) Instance : void shutdownGlobalThreading() Instance : void shutdownThread() Instance : Event::Dispatcher\u0026amp; dispatcher() Instance : bool isShutdown() @enduml","tags":null,"title":"","type":"post","url":"/post/envoy-thread-local--storage/","weight":0,"wordcount":67},{"author":null,"categories":null,"content":"","date":1695686400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1695686400,"objectID":"b779886fe255b2f012a64c2b45387569","permalink":"http://localhost:1313/post/2023-09-26-istiocon-china/","publishdate":"2023-09-26T00:00:00Z","readingtime":5,"relpermalink":"/post/2023-09-26-istiocon-china/","section":"post","summary":"Istio Ambient Mesh as Managed Infrastructure 这个演讲是 Google 的 Sponsored Keynote，从中可以非常清晰地看到 Google 在 Istio 社区中推动 Ambient 模式的思路：通过在 Istio 中提供 Ambient 模式，可以使得数据面的组件也","tags":null,"title":"IstioCon 2023 要点总结","type":"post","url":"/post/2023-09-26-istiocon-china/","weight":0,"wordcount":2050},{"author":null,"categories":["Tech"],"content":"Aeraki Mesh 于 2023 年 8 月 13 日发布 1.4.0 版本（版本代号：Heshun），本次发布的最主要的特性是支持了 Istio 1.18.x 系列版本。","date":1691884800,"description":"Aeraki Mesh 于 2023 年 8 月 13 日发布 1.4.0 版本（版本代号：Heshun），本次发布的最主要的特性是支持了 Istio 1.18.x 系列版本。","dir":"post\\","excerpt_html":"Aeraki Mesh 于 2023 年 8 月 13 日发布 1.4.0 版本（版本代号：Heshun），本次发布的最主要的特性是支持了 Istio 1.18.x 系列版本。","excerpt_text":"Aeraki Mesh 于 2023 年 8 月 13 日发布 1.4.0 版本（版本代号：Heshun），本次发布的最主要的特性是支持了 Istio 1.18.x 系列版本。","expirydate":-62135596800,"fuzzywordcount":700,"html":"Aeraki Mesh 于 2023 年 8 月 13 日发布 1.4.0 版本（版本代号：Heshun），本次发布的最主要的特性是支持了 Istio 1.18.x 系列版本。","keywords":null,"kind":"page","lang":"en","lastmod":1691884800,"objectID":"26cceff60424796efc55cdca8ca0669e","permalink":"http://localhost:1313/post/2023-06-24-aeraki-1.4.0/","publishdate":"2023-08-13T00:00:00Z","readingtime":2,"relpermalink":"/post/2023-06-24-aeraki-1.4.0/","section":"post","summary":"Aeraki Mesh 于 2023 年 8 月 13 日发布 1.4.0 版本（版本代号：Heshun），本次发布的最主要的特性是支持了 Istio 1.18.x 系列版本。 备注：版本代号来自于这个夏天旅行的一个云","tags":["Aeraki Mesh"],"title":"Aeraki Mesh 发布 1.4.0 版本（代号：Heshun）","type":"post","url":"/post/2023-06-24-aeraki-1.4.0/","weight":0,"wordcount":661},{"author":null,"categories":null,"content":"为期两天的 联友云原生实践训练营 圆满结束。如果大家有相关的培训需求，欢迎和我联系，课程的详细介绍参见内文。","date":1689379200,"description":"为期两天的 联友云原生实践训练营 圆满结束。如果大家有相关的培训需求，欢迎和我联系，课程的详细介绍参见内文。","dir":"post\\","excerpt_html":"为期两天的 联友云原生实践训练营 圆满结束。如果大家有相关的培训需求，欢迎和我联系，课程的详细介绍参见内文。","excerpt_text":"为期两天的 联友云原生实践训练营 圆满结束。如果大家有相关的培训需求，欢迎和我联系，课程的详细介绍参见内文。","expirydate":-62135596800,"fuzzywordcount":900,"html":"为期两天的 联友云原生实践训练营 圆满结束。如果大家有相关的培训需求，欢迎和我联系，课程的详细介绍参见内文。","keywords":null,"kind":"page","lang":"en","lastmod":1689379200,"objectID":"3991fee94bcadf90e7fdfc88f9ece758","permalink":"http://localhost:1313/post/2023-07-15-lanyou/","publishdate":"2023-07-15T00:00:00Z","readingtime":2,"relpermalink":"/post/2023-07-15-lanyou/","section":"post","summary":"为期两天的 联友云原生实践训练营 圆满结束，感谢 联友科技 的课程邀请和 麦思博 的精心组织。在两天的培训过程中为来自深圳、广州、武汉的近四十名联友科技","tags":null,"title":"联友云原生实践训练营圆满结束","type":"post","url":"/post/2023-07-15-lanyou/","weight":0,"wordcount":841},{"author":null,"categories":["Tech"],"content":"Aeraki Mesh 于 2023 年 6 月 24 日发布 1.3.0 版本（版本代号：Dragonboat），该版本包含了对 Istio 1.16.x 系列版本的支持，以及支持多路复用，gateway 支持 MetaProtoco 等一系列重大的新增特性。","date":1687564800,"description":"Aeraki Mesh 于 2023 年 6 月 24 日发布 1.3.0 版本（版本代号：Dragonboat），该版本包含了对 Istio 1.16.x 系列版本的支持，以及支持多路复用，gateway 支持 MetaProtoco 等一系列重大的新增特性。","dir":"post\\","excerpt_html":"Aeraki Mesh 于 2023 年 6 月 24 日发布 1.3.0 版本（版本代号：Dragonboat），该版本包含了对 Istio 1.16.x 系列版本的支持，以及支持多路复用，gateway 支持 MetaProtoco 等一系列重大的新增特性。","excerpt_text":"Aeraki Mesh 于 2023 年 6 月 24 日发布 1.3.0 版本（版本代号：Dragonboat），该版本包含了对 Istio 1.16.x 系列版本的支持，以及支持多路复用，gateway 支持 MetaProtoco 等一系列重大的新增特性。","expirydate":-62135596800,"fuzzywordcount":1900,"html":"Aeraki Mesh 于 2023 年 6 月 24 日发布 1.3.0 版本（版本代号：Dragonboat），该版本包含了对 Istio 1.16.x 系列版本的支持，以及支持多路复用，gateway 支持 MetaProtoco 等一系列重大的新增特性。","keywords":null,"kind":"page","lang":"en","lastmod":1687564800,"objectID":"74b6ce1ee6fe4d64c6c51843edcd1fa0","permalink":"http://localhost:1313/post/2023-06-24-aeraki-1.3.0/","publishdate":"2023-06-24T00:00:00Z","readingtime":4,"relpermalink":"/post/2023-06-24-aeraki-1.3.0/","section":"post","summary":"Aeraki Mesh 于 2023 年 6 月 24 日发布 1.3.0 版本（版本代号：Dragonboat），该版本包含了对 Istio 1.16.x 系列版本的支持，以及支持多路复用，gateway 支持 MetaProtoco 等一","tags":["Aeraki Mesh"],"title":"Aeraki Mesh 发布 1.3.0 版本（代号：Dragonboat）","type":"post","url":"/post/2023-06-24-aeraki-1.3.0/","weight":0,"wordcount":1871},{"author":null,"categories":["Tech"],"content":"Managing a Redis Cluster can be complicated. With the help of Istio and Aeraki, advanced Redis features such as data sharding, prefix routing, read/write separation, traffic mirroring, fault injection can be easily achieved without modifying the applications.","date":1683590400,"description":"Managing a Redis Cluster can be complicated. With the help of Istio and Aeraki, advanced Redis features such as data sharding, prefix routing, read/write separation, traffic mirroring, fault injection can be easily achieved without modifying the applications.","dir":"post\\","excerpt_html":"Managing a Redis Cluster can be complicated. With the help of Istio and Aeraki, advanced Redis features such as data sharding, prefix routing, read/write separation, traffic mirroring, fault injection can be easily achieved without modifying the applications.","excerpt_text":"Managing a Redis Cluster can be complicated. With the help of Istio and Aeraki, advanced Redis features such as data sharding, prefix routing, read/write separation, traffic mirroring, fault injection can be easily achieved without modifying the applications.","expirydate":-62135596800,"fuzzywordcount":3100,"html":"Managing a Redis Cluster can be complicated. With the help of Istio and Aeraki, advanced Redis features such as data sharding, prefix routing, read/write separation, traffic mirroring, fault injection can be easily achieved without modifying the applications.","keywords":null,"kind":"page","lang":"en","lastmod":1683590400,"objectID":"9bc72367f2af2bf61db37fe3b9cbbce2","permalink":"http://localhost:1313/post/2023-05-08-manage-redis-with-aeraki-mes-eng/","publishdate":"2023-05-09T00:00:00Z","readingtime":7,"relpermalink":"/post/2023-05-08-manage-redis-with-aeraki-mes-eng/","section":"post","summary":"Redis is a high-performing key-value database known for its versatility in supporting a diverse range of data structures and operations, including strings, hashes, lists, sets, and sorted sets. Its robust capabilities make it an ideal choice for caching, session storage, message brokers, and other similar applications. Istio is one of the most popular service mesh platforms that provides a unified way to connect, secure, and manage microservices. Aeraki Mesh is","tags":["Aeraki Mesh","Redis"],"title":"Database Mesh: Simplify Redis Cluster with Istio and Aeraki","type":"post","url":"/post/2023-05-08-manage-redis-with-aeraki-mes-eng/","weight":0,"wordcount":3010},{"author":null,"categories":["Tech"],"content":"Aeraki Mesh 提供了对 Redis 的流量管理能力，可以实现客户端无感知的 Redis Cluster 数据分片，按 key 将客户端请求路由到不同的 Redis 服务，读写分离，流量镜像，故障注入等高级流量管理功能。","date":1683590400,"description":"Aeraki Mesh 提供了对 Redis 的流量管理能力，可以实现客户端无感知的 Redis Cluster 数据分片，按 key 将客户端请求路由到不同的 Redis 服务，读写分离，流量镜像，故障注入等高级流量管理功能。","dir":"post\\","excerpt_html":"Aeraki Mesh 提供了对 Redis 的流量管理能力，可以实现客户端无感知的 Redis Cluster 数据分片，按 key 将客户端请求路由到不同的 Redis 服务，读写分离，流量镜像，故障注入等高级流量管理功能。","excerpt_text":"Aeraki Mesh 提供了对 Redis 的流量管理能力，可以实现客户端无感知的 Redis Cluster 数据分片，按 key 将客户端请求路由到不同的 Redis 服务，读写分离，流量镜像，故障注入等高级流量管理功能。","expirydate":-62135596800,"fuzzywordcount":4400,"html":"Aeraki Mesh 提供了对 Redis 的流量管理能力，可以实现客户端无感知的 Redis Cluster 数据分片，按 key 将客户端请求路由到不同的 Redis 服务，读写分离，流量镜像，故障注入等高级流量管理功能。","keywords":null,"kind":"page","lang":"en","lastmod":1683590400,"objectID":"cbc0c889d315a8bc906e8a9a36b6844e","permalink":"http://localhost:1313/post/2023-05-08-manage-redis-with-aeraki-mesh/","publishdate":"2023-05-09T00:00:00Z","readingtime":9,"relpermalink":"/post/2023-05-08-manage-redis-with-aeraki-mesh/","section":"post","summary":"Redis 是一种高性能的键值数据库，支持丰富的数据结构和操作，包括字符串、哈希、列表、集合、有序集合等。由于其强大的能力，Redis 被广泛应用于缓存","tags":["Aeraki Mesh","Redis"],"title":"Database Mesh: 使用 Istio 和 Aeraki 对 Redis 进行流量管理","type":"post","url":"/post/2023-05-08-manage-redis-with-aeraki-mesh/","weight":0,"wordcount":4386},{"author":null,"categories":["Tech"],"content":"今天，我想和大家聊一聊 Envoy 生态中的新成员 Envoy Gateway， 以及为什么我认为 Envoy Gateway 是云原生时代的七层网关。","date":1681171200,"description":"今天，我想和大家聊一聊 Envoy 生态中的新成员 Envoy Gateway， 以及为什么我认为 Envoy Gateway 是云原生时代的七层网关。","dir":"post\\","excerpt_html":"今天，我想和大家聊一聊 Envoy 生态中的新成员 Envoy Gateway， 以及为什么我认为 Envoy Gateway 是云原生时代的七层网关。","excerpt_text":"今天，我想和大家聊一聊 Envoy 生态中的新成员 Envoy Gateway， 以及为什么我认为 Envoy Gateway 是云原生时代的七层网关。","expirydate":-62135596800,"fuzzywordcount":3200,"html":"今天，我想和大家聊一聊 Envoy 生态中的新成员 Envoy Gateway， 以及为什么我认为 Envoy Gateway 是云原生时代的七层网关。","keywords":null,"kind":"page","lang":"en","lastmod":1681171200,"objectID":"6784774d0f3576f084a824bbbe823c89","permalink":"http://localhost:1313/post/2023-04-11-why-eg-is-the-gateway-in-cloud-native-era/","publishdate":"2023-04-11T00:00:00Z","readingtime":7,"relpermalink":"/post/2023-04-11-why-eg-is-the-gateway-in-cloud-native-era/","section":"post","summary":"初识 Envoy 大家好，我叫赵化冰，是 CNCF 云原生基金会大使，也是一个软件行业老兵和云原生从业者。我还记得，当我 2017 年在 Linux 基金会下的一个开源项目中从事微服务","tags":["Kubernetes"],"title":"为什么 Envoy Gateway 是云原生时代的七层网关？","type":"post","url":"/post/2023-04-11-why-eg-is-the-gateway-in-cloud-native-era/","weight":0,"wordcount":3197},{"author":null,"categories":["Tech"],"content":"Kubernetes(简称K8s) 是一套容器编排和管理系统，可以帮助我们部署、扩展和管理容器化应用程序。在 K8s 中，Controller 是一个重要的组件，它可以根据我们的期望状态和实际状态来进行调谐，以确保我们的应用程序始终处于所需的状态。本系列文章将解析 K8s Controller 的实现机制，并介绍如何编写一个 Controller。","date":1680566400,"description":"Kubernetes(简称K8s) 是一套容器编排和管理系统，可以帮助我们部署、扩展和管理容器化应用程序。在 K8s 中，Controller 是一个重要的组件，它可以根据我们的期望状态和实际状态来进行调谐，以确保我们的应用程序始终处于所需的状态。本系列文章将解析 K8s Controller 的实现机制，并介绍如何编写一个 Controller。","dir":"post\\","excerpt_html":"Kubernetes(简称K8s) 是一套容器编排和管理系统，可以帮助我们部署、扩展和管理容器化应用程序。在 K8s 中，Controller 是一个重要的组件，它可以根据我们的期望状态和实际状态来进行调谐，以确保我们的应用程序始终处于所需的状态。本系列文章将解析 K8s Controller 的实现机制，并介绍如何编写一个 Controller。","excerpt_text":"Kubernetes(简称K8s) 是一套容器编排和管理系统，可以帮助我们部署、扩展和管理容器化应用程序。在 K8s 中，Controller 是一个重要的组件，它可以根据我们的期望状态和实际状态来进行调谐，以确保我们的应用程序始终处于所需的状态。本系列文章将解析 K8s Controller 的实现机制，并介绍如何编写一个 Controller。","expirydate":-62135596800,"fuzzywordcount":3000,"html":"Kubernetes(简称K8s) 是一套容器编排和管理系统，可以帮助我们部署、扩展和管理容器化应用程序。在 K8s 中，Controller 是一个重要的组件，它可以根据我们的期望状态和实际状态来进行调谐，以确保我们的应用程序始终处于所需的状态。本系列文章将解析 K8s Controller 的实现机制，并介绍如何编写一个 Controller。","keywords":null,"kind":"page","lang":"en","lastmod":1680566400,"objectID":"7a1c684faa7320359b6f594d8072048c","permalink":"http://localhost:1313/post/2023-04-04-how-to-create-a-k8s-controller-2/","publishdate":"2023-04-04T00:00:00Z","readingtime":6,"relpermalink":"/post/2023-04-04-how-to-create-a-k8s-controller-2/","section":"post","summary":"在上一篇文章 Kubernetes Controller 机制详解（一）中，我们学习了 Kubernetes API List/Watch 机制，以及如何采用 Kubernetes client-go 中的 Informer 机制来创建 Controller。该方法需要用户了解 Kubernetes client-go 的实现原","tags":["Kubernetes"],"title":"Kubernetes Controller 机制详解（二）","type":"post","url":"/post/2023-04-04-how-to-create-a-k8s-controller-2/","weight":0,"wordcount":2929},{"author":null,"categories":["Tech"],"content":"Kubernetes(简称K8s) 是一套容器编排和管理系统，可以帮助我们部署、扩展和管理容器化应用程序。在 K8s 中，Controller 是一个重要的组件，它可以根据我们的期望状态和实际状态来进行调谐，以确保我们的应用程序始终处于所需的状态。本系列文章将解析 K8s Controller 的实现机制，并介绍如何编写一个 Controller。","date":1678320000,"description":"Kubernetes(简称K8s) 是一套容器编排和管理系统，可以帮助我们部署、扩展和管理容器化应用程序。在 K8s 中，Controller 是一个重要的组件，它可以根据我们的期望状态和实际状态来进行调谐，以确保我们的应用程序始终处于所需的状态。本系列文章将解析 K8s Controller 的实现机制，并介绍如何编写一个 Controller。","dir":"post\\","excerpt_html":"Kubernetes(简称K8s) 是一套容器编排和管理系统，可以帮助我们部署、扩展和管理容器化应用程序。在 K8s 中，Controller 是一个重要的组件，它可以根据我们的期望状态和实际状态来进行调谐，以确保我们的应用程序始终处于所需的状态。本系列文章将解析 K8s Controller 的实现机制，并介绍如何编写一个 Controller。","excerpt_text":"Kubernetes(简称K8s) 是一套容器编排和管理系统，可以帮助我们部署、扩展和管理容器化应用程序。在 K8s 中，Controller 是一个重要的组件，它可以根据我们的期望状态和实际状态来进行调谐，以确保我们的应用程序始终处于所需的状态。本系列文章将解析 K8s Controller 的实现机制，并介绍如何编写一个 Controller。","expirydate":-62135596800,"fuzzywordcount":10200,"html":"Kubernetes(简称K8s) 是一套容器编排和管理系统，可以帮助我们部署、扩展和管理容器化应用程序。在 K8s 中，Controller 是一个重要的组件，它可以根据我们的期望状态和实际状态来进行调谐，以确保我们的应用程序始终处于所需的状态。本系列文章将解析 K8s Controller 的实现机制，并介绍如何编写一个 Controller。","keywords":null,"kind":"page","lang":"en","lastmod":1678320000,"objectID":"ce8d6db2a61d03bfebab4ede1628df58","permalink":"http://localhost:1313/post/2023-03-09-how-to-create-a-k8s-controller/","publishdate":"2023-03-09T00:00:00Z","readingtime":21,"relpermalink":"/post/2023-03-09-how-to-create-a-k8s-controller/","section":"post","summary":"Kubernetes(简称K8s) 是一套容器编排和管理系统，可以帮助我们部署、扩展和管理容器化应用程序。在 K8s 中，Controller 是一个重","tags":["Kubernetes"],"title":"Kubernetes Controller 机制详解（一）","type":"post","url":"/post/2023-03-09-how-to-create-a-k8s-controller/","weight":0,"wordcount":10136},{"author":null,"categories":["Tech","Open Source"],"content":"During this community meeting, we introduced Aeraki Mesh’s newly released Access Log and Service Metrics features. We also invited experts from Boss Zhipin and Shopline to share hands-on examples of Dubbo based on Aeraki Mesh. Furthermore, we introduced the new features of multiplexing and Gateway support for the MetaProtocol application protocol, which are being contributed by the Tencent Games project and Boss Zhipin.","date":1677196800,"description":"During this community meeting, we introduced Aeraki Mesh’s newly released Access Log and Service Metrics features. We also invited experts from Boss Zhipin and Shopline to share hands-on examples of Dubbo based on Aeraki Mesh. Furthermore, we introduced the new features of multiplexing and Gateway support for the MetaProtocol application protocol, which are being contributed by the Tencent Games project and Boss Zhipin.","dir":"post\\","excerpt_html":"During this community meeting, we introduced Aeraki Mesh’s newly released Access Log and Service Metrics features. We also invited experts from Boss Zhipin and Shopline to share hands-on examples of Dubbo based on Aeraki Mesh. Furthermore, we introduced the new features of multiplexing and Gateway support for the MetaProtocol application protocol, which are being contributed by the Tencent Games project and Boss Zhipin.","excerpt_text":"During this community meeting, we introduced Aeraki Mesh’s newly released Access Log and Service Metrics features. We also invited experts from Boss Zhipin and Shopline to share hands-on examples of Dubbo based on Aeraki Mesh. Furthermore, we introduced the new features of multiplexing and Gateway support for the MetaProtocol application protocol, which are being contributed by the Tencent Games project and Boss Zhipin.","expirydate":-62135596800,"fuzzywordcount":300,"html":"During this community meeting, we introduced Aeraki Mesh’s newly released Access Log and Service Metrics features. We also invited experts from Boss Zhipin and Shopline to share hands-on examples of Dubbo based on Aeraki Mesh. Furthermore, we introduced the new features of multiplexing and Gateway support for the MetaProtocol application protocol, which are being contributed by the Tencent Games project and Boss Zhipin.","keywords":null,"kind":"page","lang":"en","lastmod":1677196800,"objectID":"7c648a5ec25afc38be3cbd9908b4562b","permalink":"http://localhost:1313/post/2023-02-24-aeraki-mesh-community-meeting/","publishdate":"2023-02-24T00:00:00Z","readingtime":1,"relpermalink":"/post/2023-02-24-aeraki-mesh-community-meeting/","section":"post","summary":"During this community meeting, we introduced Aeraki Mesh’s newly released Access Log and Service Metrics features. We also invited experts from Boss Zhipin and Shopline to share hands-on examples of Dubbo based on Aeraki Mesh. Furthermore, we introduced the new features of multiplexing and Gateway support for the MetaProtocol application protocol, which are being contributed by the Tencent Games project and Boss Zhipin. The Access","tags":["Istio","Envoy","Service Mesh","Aeraki Mesh","Dubbo","MetaProtocol"],"title":"Aeraki Mesh Community Meeting - February 23rd, 2023","type":"post","url":"/post/2023-02-24-aeraki-mesh-community-meeting/","weight":0,"wordcount":234},{"author":null,"categories":["Tech","Open Source"],"content":"本次社区会议介绍了 Aeraki Mesh 最新发布的 Access Log，Sevice Metrics 功能，并邀请了来自 Boss 直聘，Shopline 的专家分享基于 Aeraki Mesh 的 Dubbo 实操案例。此外，还介绍了来着腾讯游戏项目和 Boss 直聘正在贡献的多路复用和 Gateway 支持 MetaProtocol 应用协议的新特性。","date":1677196800,"description":"本次社区会议介绍了 Aeraki Mesh 最新发布的 Access Log，Sevice Metrics 功能，并邀请了来自 Boss 直聘，Shopline 的专家分享基于 Aeraki Mesh 的 Dubbo 实操案例。此外，还介绍了来着腾讯游戏项目和 Boss 直聘正在贡献的多路复用和 Gateway 支持 MetaProtocol 应用协议的新特性。","dir":"post\\","excerpt_html":"本次社区会议介绍了 Aeraki Mesh 最新发布的 Access Log，Sevice Metrics 功能，并邀请了来自 Boss 直聘，Shopline 的专家分享基于 Aeraki Mesh 的 Dubbo 实操案例。此外，还介绍了来着腾讯游戏项目和 Boss 直聘正在贡献的多路复用和 Gateway 支持 MetaProtocol 应用协议的新特性。","excerpt_text":"本次社区会议介绍了 Aeraki Mesh 最新发布的 Access Log，Sevice Metrics 功能，并邀请了来自 Boss 直聘，Shopline 的专家分享基于 Aeraki Mesh 的 Dubbo 实操案例。此外，还介绍了来着腾讯游戏项目和 Boss 直聘正在贡献的多路复用和 Gateway 支持 MetaProtocol 应用协议的新特性。","expirydate":-62135596800,"fuzzywordcount":200,"html":"本次社区会议介绍了 Aeraki Mesh 最新发布的 Access Log，Sevice Metrics 功能，并邀请了来自 Boss 直聘，Shopline 的专家分享基于 Aeraki Mesh 的 Dubbo 实操案例。此外，还介绍了来着腾讯游戏项目和 Boss 直聘正在贡献的多路复用和 Gateway 支持 MetaProtocol 应用协议的新特性。","keywords":null,"kind":"page","lang":"en","lastmod":1677196800,"objectID":"3006d7ddcaa1035fb09ad6c4dd56709d","permalink":"http://localhost:1313/post/2023-02-24-aeraki-mesh-community-meeting-en/","publishdate":"2023-02-24T00:00:00Z","readingtime":1,"relpermalink":"/post/2023-02-24-aeraki-mesh-community-meeting-en/","section":"post","summary":"本次社区会议介绍了 Aeraki Mesh 最新发布的 Access Log，Sevice Metrics 功能，并邀请了来自 Boss 直聘，Shopline 的专家分享基于 Aeraki Mesh 的 Dubbo 实操案例。此外，还介","tags":["Istio","Envoy","Service Mesh","Aeraki Mesh","Dubbo","MetaProtocol"],"title":"Aeraki Mesh 社区例会 - 2023-02-23","type":"post","url":"/post/2023-02-24-aeraki-mesh-community-meeting-en/","weight":0,"wordcount":117},{"author":null,"categories":["Tech"],"content":"Istio 为 Service Mesh 中的微服务提供了非常丰富的统计指标（Metrics），这些指标可以让运维人员随时监控应用程序中服务的健康状况，在系统出现线上故障之前就发现潜在问题并进行处理。本文将介绍 Istio Metrics 的实现机制，以帮助读者深入了解其原理。。","date":1676332800,"description":"Istio 为 Service Mesh 中的微服务提供了非常丰富的统计指标（Metrics），这些指标可以让运维人员随时监控应用程序中服务的健康状况，在系统出现线上故障之前就发现潜在问题并进行处理。本文将介绍 Istio Metrics 的实现机制，以帮助读者深入了解其原理。。","dir":"post\\","excerpt_html":"Istio 为 Service Mesh 中的微服务提供了非常丰富的统计指标（Metrics），这些指标可以让运维人员随时监控应用程序中服务的健康状况，在系统出现线上故障之前就发现潜在问题并进行处理。本文将介绍 Istio Metrics 的实现机制，以帮助读者深入了解其原理。。","excerpt_text":"Istio 为 Service Mesh 中的微服务提供了非常丰富的统计指标（Metrics），这些指标可以让运维人员随时监控应用程序中服务的健康状况，在系统出现线上故障之前就发现潜在问题并进行处理。本文将介绍 Istio Metrics 的实现机制，以帮助读者深入了解其原理。。","expirydate":-62135596800,"fuzzywordcount":4100,"html":"Istio 为 Service Mesh 中的微服务提供了非常丰富的统计指标（Metrics），这些指标可以让运维人员随时监控应用程序中服务的健康状况，在系统出现线上故障之前就发现潜在问题并进行处理。本文将介绍 Istio Metrics 的实现机制，以帮助读者深入了解其原理。。","keywords":null,"kind":"page","lang":"en","lastmod":1676332800,"objectID":"f18fdc80c6ac4a9f75576e7e4a50e752","permalink":"http://localhost:1313/post/2023-02-14-istio-metrics-deep-dive/","publishdate":"2023-02-14T00:00:00Z","readingtime":9,"relpermalink":"/post/2023-02-14-istio-metrics-deep-dive/","section":"post","summary":"Istio 为 Service Mesh 中的微服务提供了非常丰富的统计指标（Metrics），这些指标可以让运维人员随时监控应用程序中服务的健康状况，在系统出现线上故障之前","tags":["Istio","Envoy","Service Mesh","Metrics"],"title":"深入理解 Istio Metrics","type":"post","url":"/post/2023-02-14-istio-metrics-deep-dive/","weight":0,"wordcount":4061},{"author":null,"categories":["Tech"],"content":"在刚刚发布的最新版本 Aeraki Mesh 1.2.2 中 (对应 meta-protocol-proxy:1.2.3) ，Aeraki Mesh 提供了和 Istio 一致的服务级别指标，包括 istio_requests_total，istio_request_duration_milliseconds，istio_request_byte 和 istio_response_byte。标志着 Aeraki Mesh 为非 HTTP 协议提供的服务治理能力和 HTTP 协议完全对齐，完整覆盖了路由，调用跟踪，访问日志，服务指标等所有能力。","date":1675641600,"description":"在刚刚发布的最新版本 Aeraki Mesh 1.2.2 中 (对应 meta-protocol-proxy:1.2.3) ，Aeraki Mesh 提供了和 Istio 一致的服务级别指标，包括 istio_requests_total，istio_request_duration_milliseconds，istio_request_byte 和 istio_response_byte。标志着 Aeraki Mesh 为非 HTTP 协议提供的服务治理能力和 HTTP 协议完全对齐，完整覆盖了路由，调用跟踪，访问日志，服务指标等所有能力。","dir":"post\\","excerpt_html":"在刚刚发布的最新版本 Aeraki Mesh 1.2.2 中 (对应 meta-protocol-proxy:1.2.3) ，Aeraki Mesh 提供了和 Istio 一致的服务级别指标，包括 istio_requests_total，istio_request_duration_milliseconds，istio_request_byte 和 istio_response_byte。标志着 Aeraki Mesh 为非 HTTP 协议提供的服务治理能力和 HTTP 协议完全对齐，完整覆盖了路由，调用跟踪，访问日志，服务指标等所有能力。","excerpt_text":"在刚刚发布的最新版本 Aeraki Mesh 1.2.2 中 (对应 meta-protocol-proxy:1.2.3) ，Aeraki Mesh 提供了和 Istio 一致的服务级别指标，包括 istio_requests_total，istio_request_duration_milliseconds，istio_request_byte 和 istio_response_byte。标志着 Aeraki Mesh 为非 HTTP 协议提供的服务治理能力和 HTTP 协议完全对齐，完整覆盖了路由，调用跟踪，访问日志，服务指标等所有能力。","expirydate":-62135596800,"fuzzywordcount":1000,"html":"在刚刚发布的最新版本 Aeraki Mesh 1.2.2 中 (对应 meta-protocol-proxy:1.2.3) ，Aeraki Mesh 提供了和 Istio 一致的服务级别指标，包括 istio_requests_total，istio_request_duration_milliseconds，istio_request_byte 和 istio_response_byte。标志着 Aeraki Mesh 为非 HTTP 协议提供的服务治理能力和 HTTP 协议完全对齐，完整覆盖了路由，调用跟踪，访问日志，服务指标等所有能力。","keywords":null,"kind":"page","lang":"en","lastmod":1675641600,"objectID":"073d9ba43160bb8a4be59f29a0a9df76","permalink":"http://localhost:1313/post/2023-02-06-aeraki-metrics/","publishdate":"2023-02-06T00:00:00Z","readingtime":2,"relpermalink":"/post/2023-02-06-aeraki-metrics/","section":"post","summary":"在刚刚发布的最新版本 Aeraki Mesh 1.2.2 中 (对应 meta-protocol-proxy:1.2.3) ，Aeraki Mesh 提供了和 Istio 一致的服务级别指标，包括 istio_requests_total，istio_","tags":["Istio","Envoy","Service Mesh","Aeraki","MetaProtocol Proxy"],"title":"Aeraki Mesh 提供服务级别的 Metrics","type":"post","url":"/post/2023-02-06-aeraki-metrics/","weight":0,"wordcount":958},{"author":null,"categories":["Tech","Presentations"],"content":"演示如何利用 Aeraki Mesh 在 Isito 服务网格中对 Dubbo 服务进行服务治理：七层负载均衡、动态路由、本地/全局限流、零代码侵入调用跟踪、查看调用指标等。","date":1668729600,"description":"演示如何利用 Aeraki Mesh 在 Isito 服务网格中对 Dubbo 服务进行服务治理：七层负载均衡、动态路由、本地/全局限流、零代码侵入调用跟踪、查看调用指标等。","dir":"post\\","excerpt_html":"演示如何利用 Aeraki Mesh 在 Isito 服务网格中对 Dubbo 服务进行服务治理：七层负载均衡、动态路由、本地/全局限流、零代码侵入调用跟踪、查看调用指标等。","excerpt_text":"演示如何利用 Aeraki Mesh 在 Isito 服务网格中对 Dubbo 服务进行服务治理：七层负载均衡、动态路由、本地/全局限流、零代码侵入调用跟踪、查看调用指标等。","expirydate":-62135596800,"fuzzywordcount":100,"html":"演示如何利用 Aeraki Mesh 在 Isito 服务网格中对 Dubbo 服务进行服务治理：七层负载均衡、动态路由、本地/全局限流、零代码侵入调用跟踪、查看调用指标等。","keywords":null,"kind":"page","lang":"en","lastmod":1668729600,"objectID":"35c2c36b0e118519868ddaa9d2a585be","permalink":"http://localhost:1313/post/2022-11-18-dubbo-aeraki-mesh-in-5-minutes/","publishdate":"2022-11-18T00:00:00Z","readingtime":1,"relpermalink":"/post/2022-11-18-dubbo-aeraki-mesh-in-5-minutes/","section":"post","summary":"幻灯片 Aeraki Mesh 官网 Dubbo 接入教程 私有协议接入教程 Github","tags":["Istio","Envoy","Service Mesh","Aeraki Mesh","Dubbo","MetaProtocol"],"title":"5分钟内将 Dubbo 服务接入 Istio 服务网格","type":"post","url":"/post/2022-11-18-dubbo-aeraki-mesh-in-5-minutes/","weight":0,"wordcount":21},{"author":null,"categories":["Tech"],"content":"本文将继续介绍 ambient 模式下四层流量处理的实现机制。本文将以 bookinfo 应用中 productpage 访问 reviews 的请求路径为例来分析一个请求从 client 端发出到 server 端处理的四层流量处理流程。","date":1665964800,"description":"本文将继续介绍 ambient 模式下四层流量处理的实现机制。本文将以 bookinfo 应用中 productpage 访问 reviews 的请求路径为例来分析一个请求从 client 端发出到 server 端处理的四层流量处理流程。","dir":"post\\","excerpt_html":"本文将继续介绍 ambient 模式下四层流量处理的实现机制。本文将以 bookinfo 应用中 productpage 访问 reviews 的请求路径为例来分析一个请求从 client 端发出到 server 端处理的四层流量处理流程。","excerpt_text":"本文将继续介绍 ambient 模式下四层流量处理的实现机制。本文将以 bookinfo 应用中 productpage 访问 reviews 的请求路径为例来分析一个请求从 client 端发出到 server 端处理的四层流量处理流程。","expirydate":-62135596800,"fuzzywordcount":3800,"html":"本文将继续介绍 ambient 模式下四层流量处理的实现机制。本文将以 bookinfo 应用中 productpage 访问 reviews 的请求路径为例来分析一个请求从 client 端发出到 server 端处理的四层流量处理流程。","keywords":null,"kind":"page","lang":"en","lastmod":1665964800,"objectID":"50a480559c6096c5f11c756c2d5a56a7","permalink":"http://localhost:1313/post/2022-10-17-ambient-deep-dive-3/","publishdate":"2022-10-17T00:00:00Z","readingtime":8,"relpermalink":"/post/2022-10-17-ambient-deep-dive-3/","section":"post","summary":"本文将继续介绍 ambient 模式下四层流量处理的实现机制。本文将以 bookinfo 应用中 productpage 访问 reviews 的请求路径为例来分析一个请求从 client 端发出到 server 端处理的四层流量处理流程。 reviews","tags":["Istio","Envoy","Service Mesh","Ambient Mesh"],"title":"Istio Ambient 模式流量管理实现机制详解（三）","type":"post","url":"/post/2022-10-17-ambient-deep-dive-3/","weight":0,"wordcount":3741},{"author":null,"categories":["Tech"],"content":"ambient 模式中，应用 pod 通过 ztunnel 之间的安全通道进行通信。要实现这一点，Istio 需要劫持应用 pod 的 outbound 和 inbound 流量，并转发到 ztunnel 进行处理。这是如何实现的呢？","date":1664409600,"description":"ambient 模式中，应用 pod 通过 ztunnel 之间的安全通道进行通信。要实现这一点，Istio 需要劫持应用 pod 的 outbound 和 inbound 流量，并转发到 ztunnel 进行处理。这是如何实现的呢？","dir":"post\\","excerpt_html":"ambient 模式中，应用 pod 通过 ztunnel 之间的安全通道进行通信。要实现这一点，Istio 需要劫持应用 pod 的 outbound 和 inbound 流量，并转发到 ztunnel 进行处理。这是如何实现的呢？","excerpt_text":"ambient 模式中，应用 pod 通过 ztunnel 之间的安全通道进行通信。要实现这一点，Istio 需要劫持应用 pod 的 outbound 和 inbound 流量，并转发到 ztunnel 进行处理。这是如何实现的呢？","expirydate":-62135596800,"fuzzywordcount":3200,"html":"ambient 模式中，应用 pod 通过 ztunnel 之间的安全通道进行通信。要实现这一点，Istio 需要劫持应用 pod 的 outbound 和 inbound 流量，并转发到 ztunnel 进行处理。这是如何实现的呢？","keywords":null,"kind":"page","lang":"en","lastmod":1664409600,"objectID":"edad865ec4ed9d8c610b94d36255322d","permalink":"http://localhost:1313/post/2022-09-11-ambient-deep-dive-2/","publishdate":"2022-09-29T00:00:00Z","readingtime":7,"relpermalink":"/post/2022-09-11-ambient-deep-dive-2/","section":"post","summary":"ambient 模式中，应用 pod 通过 ztunnel 之间的安全通道进行通信。要实现这一点，Istio 需要劫持应用 pod 的 outbound 和 inbound 流量，并转发到 ztunnel 进行处理。这是如何实现的呢？ Istio 采","tags":["Istio","Envoy","Service Mesh","Ambient Mesh"],"title":"Istio Ambient 模式流量管理实现机制详解（二）","type":"post","url":"/post/2022-09-11-ambient-deep-dive-2/","weight":0,"wordcount":3175},{"author":null,"categories":["Tech"],"content":"","date":1664323200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1664323200,"objectID":"e9f2d614a1e7df983305fda4112c1309","permalink":"http://localhost:1313/post/2022-09-11-ambient-deep-dive-1/","publishdate":"2022-09-28T00:00:00Z","readingtime":6,"relpermalink":"/post/2022-09-11-ambient-deep-dive-1/","section":"post","summary":"Istio ambient 模式采用了被称为 HBONE 的方式来连接 ztunnel 和 waypoint proxy。HBONE 是 HTTP-Based Overlay Network Environment 的缩写。虽然该名称是第一次看到，其实 HBONE 并不是 Istio 创建出来的一个新协议，","tags":["Istio","Envoy","Service Mesh","Ambient Mesh"],"title":"Istio Ambient 模式流量管理实现机制详解（一）","type":"post","url":"/post/2022-09-11-ambient-deep-dive-1/","weight":0,"wordcount":2701},{"author":null,"categories":["Tech","Presentations"],"content":"演示如何利用 Aeraki Mesh 在 Isito 服务网格中对 Dubbo 服务进行服务治理：七层负载均衡、动态路由、本地/全局限流、零代码侵入调用跟踪、查看调用指标等。","date":1664236800,"description":"演示如何利用 Aeraki Mesh 在 Isito 服务网格中对 Dubbo 服务进行服务治理：七层负载均衡、动态路由、本地/全局限流、零代码侵入调用跟踪、查看调用指标等。","dir":"post\\","excerpt_html":"演示如何利用 Aeraki Mesh 在 Isito 服务网格中对 Dubbo 服务进行服务治理：七层负载均衡、动态路由、本地/全局限流、零代码侵入调用跟踪、查看调用指标等。","excerpt_text":"演示如何利用 Aeraki Mesh 在 Isito 服务网格中对 Dubbo 服务进行服务治理：七层负载均衡、动态路由、本地/全局限流、零代码侵入调用跟踪、查看调用指标等。","expirydate":-62135596800,"fuzzywordcount":100,"html":"演示如何利用 Aeraki Mesh 在 Isito 服务网格中对 Dubbo 服务进行服务治理：七层负载均衡、动态路由、本地/全局限流、零代码侵入调用跟踪、查看调用指标等。","keywords":null,"kind":"page","lang":"en","lastmod":1664236800,"objectID":"9c77a5c19eaf956b23974c1d0f93f29d","permalink":"http://localhost:1313/post/2022-09-26-servicemesh-summit2022-dubbo-aeraki-mesh/","publishdate":"2022-09-27T00:00:00Z","readingtime":1,"relpermalink":"/post/2022-09-26-servicemesh-summit2022-dubbo-aeraki-mesh/","section":"post","summary":"Aeraki Mesh 官网 Dubbo 接入教程 私有协议接入教程 Github","tags":["Istio","Envoy","Service Mesh","Aeraki Mesh","Dubbo","MetaProtocol"],"title":"Service Mesh Summit 2022 Dubbo Demo","type":"post","url":"/post/2022-09-26-servicemesh-summit2022-dubbo-aeraki-mesh/","weight":0,"wordcount":18},{"author":null,"categories":["Tech"],"content":"脑动极光在 Aeraki Mesh 社区会议上分享的 Dubbo 微服务治理实践。","date":1664150400,"description":"脑动极光在 Aeraki Mesh 社区会议上分享的 Dubbo 微服务治理实践。","dir":"post\\","excerpt_html":"脑动极光在 Aeraki Mesh 社区会议上分享的 Dubbo 微服务治理实践。","excerpt_text":"脑动极光在 Aeraki Mesh 社区会议上分享的 Dubbo 微服务治理实践。","expirydate":-62135596800,"fuzzywordcount":100,"html":"脑动极光在 Aeraki Mesh 社区会议上分享的 Dubbo 微服务治理实践。","keywords":null,"kind":"page","lang":"en","lastmod":1664150400,"objectID":"c5f70a8253be5be06153a5d80131c0dd","permalink":"http://localhost:1313/post/2022-09-27-aeraki-mesh-ngjg-use-case/","publishdate":"2022-09-26T00:00:00Z","readingtime":1,"relpermalink":"/post/2022-09-27-aeraki-mesh-ngjg-use-case/","section":"post","summary":"脑动极光 在 Aeraki Mesh 社区会议上分享的 Dubbo 微服务治理实践。","tags":["Istio","Envoy","Service Mesh","Aeraki Mesh","Dubbo","MetaProtocol"],"title":"脑动极光 Aeraki Mesh Dubbo 架构微服务治理实践应用","type":"post","url":"/post/2022-09-27-aeraki-mesh-ngjg-use-case/","weight":0,"wordcount":24},{"author":null,"categories":["Tech"],"content":"","date":1662768000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662768000,"objectID":"3ecfc356fa3361ab8be2539c176a6432","permalink":"http://localhost:1313/post/2022-09-10-try-istio-ambient-english/","publishdate":"2022-09-10T00:00:00Z","readingtime":4,"relpermalink":"/post/2022-09-10-try-istio-ambient-english/","section":"post","summary":"Ambient is a new data-plane model that Istio has just announced support for. In this post, we will try to install Istio’s ambient model and use the bookinfo demo to experience the L4 and L7 capabilities offered by ambient. Note: L4 refers to the four layers of the OSI standard network model, i.e., TCP layer processing. L7 refers to layer seven of the OSI","tags":["Istio","Envoy","Service Mesh","Ambient Mesh"],"title":"Try out Istio Ambient mode","type":"post","url":"/post/2022-09-10-try-istio-ambient-english/","weight":0,"wordcount":1627},{"author":null,"categories":["Tech"],"content":"","date":1662768000,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662768000,"objectID":"a6112e619c92b757d130de2a73823efd","permalink":"http://localhost:1313/post/2022-09-10-try-istio-ambient/","publishdate":"2022-09-10T00:00:00Z","readingtime":5,"relpermalink":"/post/2022-09-10-try-istio-ambient/","section":"post","summary":"Ambient 是 Istio 刚刚宣布支持的一种新的数据面模式，在本篇文章中，我们将尝试安装 Istio 的 ambient 模式，并采用 bookinfo demo 来体验 ambient 提供的 L4 和 L7 能力。 备注： L4 指 OSI 标准网络模型","tags":["Istio","Envoy","Service Mesh","Ambient Mesh"],"title":"初探 Istio Ambient 模式","type":"post","url":"/post/2022-09-10-try-istio-ambient/","weight":0,"wordcount":2316},{"author":null,"categories":["Tech"],"content":"","date":1662681600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662681600,"objectID":"927d463b4159804a01e1d5bed068bd90","permalink":"http://localhost:1313/post/2022-09-09-ambient-mesh-security-deep-dive/","publishdate":"2022-09-09T00:00:00Z","readingtime":6,"relpermalink":"/post/2022-09-09-ambient-mesh-security-deep-dive/","section":"post","summary":"深入分析刚刚公布的 Istio ambient mesh（Istio 的一个无 sidecar 数据平面）对于服务网格的安全来说意味着什么。 我们最近发布了 Istio ambient mesh，它是 Istio 的一个无 sidecar","tags":["Istio","Envoy","Service Mesh","Ambient Mesh"],"title":"译文：Istio Ambient 模式安全架构深度解析","type":"post","url":"/post/2022-09-09-ambient-mesh-security-deep-dive/","weight":0,"wordcount":2707},{"author":null,"categories":["Tech"],"content":"Istio 于2022年9月7日宣布了一种全新的数据平面模式 “ambient mesh”，简单地讲就是将数据面的代理从应用 pod 中剥离出来独立部署，以彻底解决 mesh 基础设施和应用部署耦合的问题。该变化是 Istio 自创建以来的第二次大的架构变动，也说明 Istio 社区在持续创新，以解决 service mesh 生产中面临的问题。","date":1662595200,"description":"Istio 于2022年9月7日宣布了一种全新的数据平面模式 “ambient mesh”，简单地讲就是将数据面的代理从应用 pod 中剥离出来独立部署，以彻底解决 mesh 基础设施和应用部署耦合的问题。该变化是 Istio 自创建以来的第二次大的架构变动，也说明 Istio 社区在持续创新，以解决 service mesh 生产中面临的问题。","dir":"post\\","excerpt_html":"Istio 于2022年9月7日宣布了一种全新的数据平面模式 “ambient mesh”，简单地讲就是将数据面的代理从应用 pod 中剥离出来独立部署，以彻底解决 mesh 基础设施和应用部署耦合的问题。该变化是 Istio 自创建以来的第二次大的架构变动，也说明 Istio 社区在持续创新，以解决 service mesh 生产中面临的问题。","excerpt_text":"Istio 于2022年9月7日宣布了一种全新的数据平面模式 “ambient mesh”，简单地讲就是将数据面的代理从应用 pod 中剥离出来独立部署，以彻底解决 mesh 基础设施和应用部署耦合的问题。该变化是 Istio 自创建以来的第二次大的架构变动，也说明 Istio 社区在持续创新，以解决 service mesh 生产中面临的问题。","expirydate":-62135596800,"fuzzywordcount":4400,"html":"Istio 于2022年9月7日宣布了一种全新的数据平面模式 “ambient mesh”，简单地讲就是将数据面的代理从应用 pod 中剥离出来独立部署，以彻底解决 mesh 基础设施和应用部署耦合的问题。该变化是 Istio 自创建以来的第二次大的架构变动，也说明 Istio 社区在持续创新，以解决 service mesh 生产中面临的问题。","keywords":null,"kind":"page","lang":"en","lastmod":1662595200,"objectID":"a1af2701b5f300bc89c3b6c95ed08b05","permalink":"http://localhost:1313/post/2022-09-08-introducing-ambient-mesh/","publishdate":"2022-09-08T00:00:00Z","readingtime":9,"relpermalink":"/post/2022-09-08-introducing-ambient-mesh/","section":"post","summary":"译者按：Istio 于2022年9月7日宣布了一种全新的数据平面模式 “ambient mesh”（ambient 意思是“环境的”，这里指 ambient mesh 使用","tags":["Istio","Envoy","Service Mesh","Ambient Mesh"],"title":"译文：重磅消息 - Istio 引入 Ambient Mesh 模式","type":"post","url":"/post/2022-09-08-introducing-ambient-mesh/","weight":0,"wordcount":4341},{"author":null,"categories":["Tech"],"content":"分布式追踪（Distributed Tracing）通过对微服务调用链的跟踪，构建一个从服务请求开始到各个微服务交互的全部调用过程的视图。用户可以从中了解到诸如应用调用经过的服务，每个服务的时延，系统的性能瓶颈等等信息。本篇文章将介绍如何通过 Aeraki Mesh 实现 Dubbo 应用程序的分布式调用跟踪，该过程对应用代码完全零侵入。","date":1662422400,"description":"分布式追踪（Distributed Tracing）通过对微服务调用链的跟踪，构建一个从服务请求开始到各个微服务交互的全部调用过程的视图。用户可以从中了解到诸如应用调用经过的服务，每个服务的时延，系统的性能瓶颈等等信息。本篇文章将介绍如何通过 Aeraki Mesh 实现 Dubbo 应用程序的分布式调用跟踪，该过程对应用代码完全零侵入。","dir":"post\\","excerpt_html":"分布式追踪（Distributed Tracing）通过对微服务调用链的跟踪，构建一个从服务请求开始到各个微服务交互的全部调用过程的视图。用户可以从中了解到诸如应用调用经过的服务，每个服务的时延，系统的性能瓶颈等等信息。本篇文章将介绍如何通过 Aeraki Mesh 实现 Dubbo 应用程序的分布式调用跟踪，该过程对应用代码完全零侵入。","excerpt_text":"分布式追踪（Distributed Tracing）通过对微服务调用链的跟踪，构建一个从服务请求开始到各个微服务交互的全部调用过程的视图。用户可以从中了解到诸如应用调用经过的服务，每个服务的时延，系统的性能瓶颈等等信息。本篇文章将介绍如何通过 Aeraki Mesh 实现 Dubbo 应用程序的分布式调用跟踪，该过程对应用代码完全零侵入。","expirydate":-62135596800,"fuzzywordcount":700,"html":"分布式追踪（Distributed Tracing）通过对微服务调用链的跟踪，构建一个从服务请求开始到各个微服务交互的全部调用过程的视图。用户可以从中了解到诸如应用调用经过的服务，每个服务的时延，系统的性能瓶颈等等信息。本篇文章将介绍如何通过 Aeraki Mesh 实现 Dubbo 应用程序的分布式调用跟踪，该过程对应用代码完全零侵入。","keywords":null,"kind":"page","lang":"en","lastmod":1662422400,"objectID":"e54a53c6259df2051e9c1569545e6e46","permalink":"http://localhost:1313/post/2022-09-06-aeraki-mesh-tracing/","publishdate":"2022-09-06T00:00:00Z","readingtime":2,"relpermalink":"/post/2022-09-06-aeraki-mesh-tracing/","section":"post","summary":"安装示例程序 如果你还没有安装示例程序，请参照 快速开始 安装 Aeraki，Istio 及示例程序。 执行完成后，在 meta-dubbo 这个 NS 中安装了基于 MetaProtocol 实现的 Dubbo 协议","tags":["Envoy","Aeraki","MetaProtocol","Dubbo"],"title":"使用 Aeraki Mesh 实现零代码侵入的 Dubbo 服务调用跟踪","type":"post","url":"/post/2022-09-06-aeraki-mesh-tracing/","weight":0,"wordcount":613},{"author":null,"categories":null,"content":"","date":1660867200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1660867200,"objectID":"a6e62b5b6e7118215354bce7a3840d48","permalink":"http://localhost:1313/post/2022-08-19-summer-trip/","publishdate":"2022-08-19T00:00:00Z","readingtime":1,"relpermalink":"/post/2022-08-19-summer-trip/","section":"post","summary":"自驾线路： 去程：成都 -\u0026gt; 康定 -\u0026gt; 塔公 -\u0026gt; 雅江 -\u0026gt; 新都桥 -\u0026gt; 理塘 -\u0026gt; 稻城 -\u0026gt; 香格里拉镇（亚丁，仙乃日、央迈勇、夏诺多吉 三座神山） 回程：香格里拉镇 -\u0026gt; 稻城 -（石","tags":["Travel"],"title":"2022 暑期稻城亚丁之旅","type":"post","url":"/post/2022-08-19-summer-trip/","weight":0,"wordcount":242},{"author":null,"categories":["Tech"],"content":"","date":1656547200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1656547200,"objectID":"73d84c0db483de9d3369396f2c3a25e2","permalink":"http://localhost:1313/post/2022-06-30-metaprotocol-proxy-connection-manager/","publishdate":"2022-06-30T00:00:00Z","readingtime":4,"relpermalink":"/post/2022-06-30-metaprotocol-proxy-connection-manager/","section":"post","summary":"ConnectionManager 是 MeataProtocol Proxy 的入口类。想要了解 MetaProtocol Proxy 的实现原理，可以从该类着手。 Envoy Network Filter 介绍 MetaProtocol Proxy 框架部分实现为 Envoy 中的一个 Network Filter。Enovy 通过 Listener 接收 Downstream 的连接","tags":["Envoy","Aeraki","MetaProtocol"],"title":"MetaProtocol Proxy 代码解读：Connection Manager","type":"post","url":"/post/2022-06-30-metaprotocol-proxy-connection-manager/","weight":0,"wordcount":1874},{"author":null,"categories":["Tech","Open Source"],"content":"6月15日，我在创建的 [Aeraki Mesh](https://aeraki.net) 项目通过了全球顶级开源基金会云原生计算基金会（CNCF）技术监督委员会评定，正式成为CNCF 沙箱项目！这意味着 Aeraki Mesh 得到了云原生开源社区的认可，而且加入 CNCF 也保证了项目的中立和开源开放，为 Aeraki Mesh 在云原生生态系统的进一步发展迈出了坚定的一步。感谢来着百度、知乎、灵雀云、腾讯音乐、滴滴、政采云等多家合作伙伴的社区同学的贡献与支持！","date":1650931200,"description":"6月15日，我在创建的 [Aeraki Mesh](https://aeraki.net) 项目通过了全球顶级开源基金会云原生计算基金会（CNCF）技术监督委员会评定，正式成为CNCF 沙箱项目！这意味着 Aeraki Mesh 得到了云原生开源社区的认可，而且加入 CNCF 也保证了项目的中立和开源开放，为 Aeraki Mesh 在云原生生态系统的进一步发展迈出了坚定的一步。感谢来着百度、知乎、灵雀云、腾讯音乐、滴滴、政采云等多家合作伙伴的社区同学的贡献与支持！","dir":"post\\","excerpt_html":"6月15日，我在创建的 [Aeraki Mesh](https://aeraki.net) 项目通过了全球顶级开源基金会云原生计算基金会（CNCF）技术监督委员会评定，正式成为CNCF 沙箱项目！这意味着 Aeraki Mesh 得到了云原生开源社区的认可，而且加入 CNCF 也保证了项目的中立和开源开放，为 Aeraki Mesh 在云原生生态系统的进一步发展迈出了坚定的一步。感谢来着百度、知乎、灵雀云、腾讯音乐、滴滴、政采云等多家合作伙伴的社区同学的贡献与支持！","excerpt_text":"6月15日，我在创建的 [Aeraki Mesh](https://aeraki.net) 项目通过了全球顶级开源基金会云原生计算基金会（CNCF）技术监督委员会评定，正式成为CNCF 沙箱项目！这意味着 Aeraki Mesh 得到了云原生开源社区的认可，而且加入 CNCF 也保证了项目的中立和开源开放，为 Aeraki Mesh 在云原生生态系统的进一步发展迈出了坚定的一步。感谢来着百度、知乎、灵雀云、腾讯音乐、滴滴、政采云等多家合作伙伴的社区同学的贡献与支持！","expirydate":-62135596800,"fuzzywordcount":3100,"html":"6月15日，我在创建的 [Aeraki Mesh](https://aeraki.net) 项目通过了全球顶级开源基金会云原生计算基金会（CNCF）技术监督委员会评定，正式成为CNCF 沙箱项目！这意味着 Aeraki Mesh 得到了云原生开源社区的认可，而且加入 CNCF 也保证了项目的中立和开源开放，为 Aeraki Mesh 在云原生生态系统的进一步发展迈出了坚定的一步。感谢来着百度、知乎、灵雀云、腾讯音乐、滴滴、政采云等多家合作伙伴的社区同学的贡献与支持！","keywords":null,"kind":"page","lang":"en","lastmod":1650931200,"objectID":"dc56eb24bb7dcc36e0259c975005c0b3","permalink":"http://localhost:1313/post/2022-06-17-aeraki-mesh-cncf-sandbox/","publishdate":"2022-04-26T00:00:00Z","readingtime":7,"relpermalink":"/post/2022-06-17-aeraki-mesh-cncf-sandbox/","section":"post","summary":"6月15日，我创建的 Aeraki Mesh 项目通过了全球顶级开源基金会云原生计算基金会（CNCF）技术监督委员会评定，正式成为CNCF 沙箱项目！这意味着 Aeraki Mesh 得","tags":["Istio","Envoy","Aeraki","MetaProtocol","Tencent"],"title":"Aeraki Mesh 正式成为 CNCF 沙箱项目","type":"post","url":"/post/2022-06-17-aeraki-mesh-cncf-sandbox/","weight":0,"wordcount":3085},{"author":null,"categories":["Presentations","Tech"],"content":"本场分享将介绍腾讯音乐使用 Istio + Aeraki 的服务网格落地实践，主要包含下述内容：如何利用 Aeraki 来扩展 Istio 的协议扩展能力，Aeraki 和 MetaProtocol Proxy 的原理介绍，腾讯音乐如何使用 Istio + Aeraki 来构建一个管理 HTTP 和私有协议的全功能服务网格。","date":1650931200,"description":"本场分享将介绍腾讯音乐使用 Istio + Aeraki 的服务网格落地实践，主要包含下述内容：如何利用 Aeraki 来扩展 Istio 的协议扩展能力，Aeraki 和 MetaProtocol Proxy 的原理介绍，腾讯音乐如何使用 Istio + Aeraki 来构建一个管理 HTTP 和私有协议的全功能服务网格。","dir":"post\\","excerpt_html":"本场分享将介绍腾讯音乐使用 Istio + Aeraki 的服务网格落地实践，主要包含下述内容：如何利用 Aeraki 来扩展 Istio 的协议扩展能力，Aeraki 和 MetaProtocol Proxy 的原理介绍，腾讯音乐如何使用 Istio + Aeraki 来构建一个管理 HTTP 和私有协议的全功能服务网格。","excerpt_text":"本场分享将介绍腾讯音乐使用 Istio + Aeraki 的服务网格落地实践，主要包含下述内容：如何利用 Aeraki 来扩展 Istio 的协议扩展能力，Aeraki 和 MetaProtocol Proxy 的原理介绍，腾讯音乐如何使用 Istio + Aeraki 来构建一个管理 HTTP 和私有协议的全功能服务网格。","expirydate":-62135596800,"fuzzywordcount":300,"html":"本场分享将介绍腾讯音乐使用 Istio + Aeraki 的服务网格落地实践，主要包含下述内容：如何利用 Aeraki 来扩展 Istio 的协议扩展能力，Aeraki 和 MetaProtocol Proxy 的原理介绍，腾讯音乐如何使用 Istio + Aeraki 来构建一个管理 HTTP 和私有协议的全功能服务网格。","keywords":null,"kind":"page","lang":"en","lastmod":1650931200,"objectID":"ecc57ca22162fbd239a7aad051dbb62d","permalink":"http://localhost:1313/post/2022-04-26-aeraki-tencent-music-istiocon2022/","publishdate":"2022-04-26T00:00:00Z","readingtime":1,"relpermalink":"/post/2022-04-26-aeraki-tencent-music-istiocon2022/","section":"post","summary":"IstioCon 介绍 IstioCon 是 Istio 社区一年一度举行的全球线上峰会，此次峰会包含主题演讲、技术演讲、闪电演讲、研讨会和路线图会议等多种形态，聚焦社区新特性、生产落地","tags":["Istio","Envoy","Aeraki","MetaProtocol","Tencent"],"title":"Istiocon 2022 分享：Tencent Music’s service mesh practice with Istio and Aeraki(Istio + Aeraki 在腾讯音乐的服务网格落地)","type":"post","url":"/post/2022-04-26-aeraki-tencent-music-istiocon2022/","weight":0,"wordcount":277},{"author":null,"categories":["Presentations","Tech"],"content":"本次直播分享主要介绍腾讯云服务网格团队开源的 Aeraki Mesh 项目如何通过扩展 Istio 来支持 Thrift，Dubbo 等开源协议以及私有协议，并分享腾讯融媒体采用 Aeraki Mesh 支撑 2022 冬奥会视频直播的实践经验。","date":1648598400,"description":"本次直播分享主要介绍腾讯云服务网格团队开源的 Aeraki Mesh 项目如何通过扩展 Istio 来支持 Thrift，Dubbo 等开源协议以及私有协议，并分享腾讯融媒体采用 Aeraki Mesh 支撑 2022 冬奥会视频直播的实践经验。","dir":"post\\","excerpt_html":"本次直播分享主要介绍腾讯云服务网格团队开源的 Aeraki Mesh 项目如何通过扩展 Istio 来支持 Thrift，Dubbo 等开源协议以及私有协议，并分享腾讯融媒体采用 Aeraki Mesh 支撑 2022 冬奥会视频直播的实践经验。","excerpt_text":"本次直播分享主要介绍腾讯云服务网格团队开源的 Aeraki Mesh 项目如何通过扩展 Istio 来支持 Thrift，Dubbo 等开源协议以及私有协议，并分享腾讯融媒体采用 Aeraki Mesh 支撑 2022 冬奥会视频直播的实践经验。","expirydate":-62135596800,"fuzzywordcount":400,"html":"本次直播分享主要介绍腾讯云服务网格团队开源的 Aeraki Mesh 项目如何通过扩展 Istio 来支持 Thrift，Dubbo 等开源协议以及私有协议，并分享腾讯融媒体采用 Aeraki Mesh 支撑 2022 冬奥会视频直播的实践经验。","keywords":null,"kind":"page","lang":"en","lastmod":1648598400,"objectID":"983b51fa67f44112d48bf9548f167c37","permalink":"http://localhost:1313/post/2022-03-30-aeraki-mesh-winter-olympics-practice/","publishdate":"2022-03-30T00:00:00Z","readingtime":1,"relpermalink":"/post/2022-03-30-aeraki-mesh-winter-olympics-practice/","section":"post","summary":"主题简介 服务网格已经成为微服务的基础设施，但目前主流的服务网格产品只能处理 HTTP 协议，不支持其他七层协议，是服务网格落地的主要困难之一。本次直播","tags":["Istio","Envoy","Aeraki","MetaProtocol"],"title":"腾讯云原生：Areaki Mesh 在 2022 冬奥会视频直播应用中的服务网格实践","type":"post","url":"/post/2022-03-30-aeraki-mesh-winter-olympics-practice/","weight":0,"wordcount":308},{"author":null,"categories":["Tech"],"content":"近日，Aeraki Mesh 正式进入 CNCF 云原生全景图，位于 Service Mesh 类别下，意味着 Aeraki Mesh 成为了 CNCF 认可的构建云原生最佳实践中的一环。","date":1646179200,"description":"近日，Aeraki Mesh 正式进入 CNCF 云原生全景图，位于 Service Mesh 类别下，意味着 Aeraki Mesh 成为了 CNCF 认可的构建云原生最佳实践中的一环。","dir":"post\\","excerpt_html":"近日，Aeraki Mesh 正式进入 CNCF 云原生全景图，位于 Service Mesh 类别下，意味着 Aeraki Mesh 成为了 CNCF 认可的构建云原生最佳实践中的一环。","excerpt_text":"近日，Aeraki Mesh 正式进入 CNCF 云原生全景图，位于 Service Mesh 类别下，意味着 Aeraki Mesh 成为了 CNCF 认可的构建云原生最佳实践中的一环。","expirydate":-62135596800,"fuzzywordcount":900,"html":"近日，Aeraki Mesh 正式进入 CNCF 云原生全景图，位于 Service Mesh 类别下，意味着 Aeraki Mesh 成为了 CNCF 认可的构建云原生最佳实践中的一环。","keywords":null,"kind":"page","lang":"en","lastmod":1646179200,"objectID":"a39dad076e62a70dd39174739009dc27","permalink":"http://localhost:1313/post/2022-03-02-aeraki-cncf-landscape/","publishdate":"2022-03-02T00:00:00Z","readingtime":2,"relpermalink":"/post/2022-03-02-aeraki-cncf-landscape/","section":"post","summary":"近日，Aeraki Mesh 正式进入 CNCF 云原生全景图，位于 Service Mesh 类别下。CNCF Landscape 在云原生实践过程中的每个环节帮助用户了解有哪些具体的软件和产品选择，A","tags":["Aeraki","CNCF","Istio","Envoy"],"title":"Aeraki Mesh 加入 CNCF 云原生全景图","type":"post","url":"/post/2022-03-02-aeraki-cncf-landscape/","weight":0,"wordcount":860},{"author":null,"categories":["Tech"],"content":"Some useful tips I used to pass the CKA, which may help you as well","date":1644278400,"description":"Some useful tips I used to pass the CKA, which may help you as well","dir":"post\\","excerpt_html":"Some useful tips I used to pass the CKA, which may help you as well","excerpt_text":"Some useful tips I used to pass the CKA, which may help you as well","expirydate":-62135596800,"fuzzywordcount":2500,"html":"Some useful tips I used to pass the CKA, which may help you as well","keywords":null,"kind":"page","lang":"en","lastmod":1644278400,"objectID":"3d4faeca067721ab85ff841ccad2952d","permalink":"http://localhost:1313/post/2022-02-08-how-to-prepare-cka-en/","publishdate":"2022-02-08T00:00:00Z","readingtime":5,"relpermalink":"/post/2022-02-08-how-to-prepare-cka-en/","section":"post","summary":"The CKA exam is not that hard. You can pass the CKA exam in less than 3 months without any stress if you follow the steps in this post to prepare. You have my word. I’ve tried myself and just successfully get my CKA certificate! How much time do I need to prepare for the CKA exam? It depends, an experienced DevOps engineer could spend much less","tags":["CKA","CNCF","Kubernetes"],"title":"How to Pass the Certified Kubernetes Administrator (CKA) Exam Without Any Stress?","type":"post","url":"/post/2022-02-08-how-to-prepare-cka-en/","weight":0,"wordcount":2450},{"author":null,"categories":["Tech"],"content":"帮助你顺利通过 CKA 考试的一些技巧。","date":1644278400,"description":"帮助你顺利通过 CKA 考试的一些技巧。","dir":"post\\","excerpt_html":"帮助你顺利通过 CKA 考试的一些技巧。","excerpt_text":"帮助你顺利通过 CKA 考试的一些技巧。","expirydate":-62135596800,"fuzzywordcount":4300,"html":"帮助你顺利通过 CKA 考试的一些技巧。","keywords":null,"kind":"page","lang":"en","lastmod":1644278400,"objectID":"e4976d3b8de195b3692538334f6692a0","permalink":"http://localhost:1313/post/2022-02-08-how-to-prepare-cka/","publishdate":"2022-02-08T00:00:00Z","readingtime":9,"relpermalink":"/post/2022-02-08-how-to-prepare-cka/","section":"post","summary":"了解 CKA 考察的内容 在开始准备考试前一定要阅读CNCF 官方考试大纲，了解 CKA 考察考生的主要内容，以在备考时做到知己知彼，有的放矢，根据该考试大纲进","tags":["CKA","CNCF","Kubernetes"],"title":"如何成功通过 CKA 考试？","type":"post","url":"/post/2022-02-08-how-to-prepare-cka/","weight":0,"wordcount":4239},{"author":null,"categories":["Tech"],"content":"本文介绍如何基于 MetaProtocol Proxy 快速实现一个自定义协议的七层代理。一般来说，实现一个自定义协议只需要数百行代码。我们还可以通过 Aeraki 在 Isito 服务网格中对使用自定义协议的服务进行管理，为服务提供流量拆分、灰度发布、流量镜像、监控图表等服务治理能力。","date":1642896000,"description":"本文介绍如何基于 MetaProtocol Proxy 快速实现一个自定义协议的七层代理。一般来说，实现一个自定义协议只需要数百行代码。我们还可以通过 Aeraki 在 Isito 服务网格中对使用自定义协议的服务进行管理，为服务提供流量拆分、灰度发布、流量镜像、监控图表等服务治理能力。","dir":"post\\","excerpt_html":"本文介绍如何基于 MetaProtocol Proxy 快速实现一个自定义协议的七层代理。一般来说，实现一个自定义协议只需要数百行代码。我们还可以通过 Aeraki 在 Isito 服务网格中对使用自定义协议的服务进行管理，为服务提供流量拆分、灰度发布、流量镜像、监控图表等服务治理能力。","excerpt_text":"本文介绍如何基于 MetaProtocol Proxy 快速实现一个自定义协议的七层代理。一般来说，实现一个自定义协议只需要数百行代码。我们还可以通过 Aeraki 在 Isito 服务网格中对使用自定义协议的服务进行管理，为服务提供流量拆分、灰度发布、流量镜像、监控图表等服务治理能力。","expirydate":-62135596800,"fuzzywordcount":1400,"html":"本文介绍如何基于 MetaProtocol Proxy 快速实现一个自定义协议的七层代理。一般来说，实现一个自定义协议只需要数百行代码。我们还可以通过 Aeraki 在 Isito 服务网格中对使用自定义协议的服务进行管理，为服务提供流量拆分、灰度发布、流量镜像、监控图表等服务治理能力。","keywords":null,"kind":"page","lang":"en","lastmod":1642896000,"objectID":"16a99650da6d97ef187fa535b8459525","permalink":"http://localhost:1313/post/2022-01-23-aeraki-how-to-implement-a-custom-protocol/","publishdate":"2022-01-23T00:00:00Z","readingtime":3,"relpermalink":"/post/2022-01-23-aeraki-how-to-implement-a-custom-protocol/","section":"post","summary":"MetaProtocol Proxy 提供了一个良好的协议扩展机制，使得我们可以基于 MetaProtocol Proxy 快速实现一个自定义协议的七层代理。 由于 MetaProtocol Proxy 已经实现了一个七层协议代理所需的大部分功能，","tags":["Aeraki","MetaProtocol","Istio","Envoy"],"title":"Aeraki 教程系列：如何开发一个自定义协议？","type":"post","url":"/post/2022-01-23-aeraki-how-to-implement-a-custom-protocol/","weight":0,"wordcount":1360},{"author":null,"categories":["Tech"],"content":"本文介绍 Aeraki 的全局限流规则配置，并解释在哪种场景中使用本地限流，在哪种场景中使用全局限流。","date":1642032000,"description":"本文介绍 Aeraki 的全局限流规则配置，并解释在哪种场景中使用本地限流，在哪种场景中使用全局限流。","dir":"post\\","excerpt_html":"本文介绍 Aeraki 的全局限流规则配置，并解释在哪种场景中使用本地限流，在哪种场景中使用全局限流。","excerpt_text":"本文介绍 Aeraki 的全局限流规则配置，并解释在哪种场景中使用本地限流，在哪种场景中使用全局限流。","expirydate":-62135596800,"fuzzywordcount":1900,"html":"本文介绍 Aeraki 的全局限流规则配置，并解释在哪种场景中使用本地限流，在哪种场景中使用全局限流。","keywords":null,"kind":"page","lang":"en","lastmod":1642032000,"objectID":"884a2ceabbbbe6b2214fcd5768883589","permalink":"http://localhost:1313/post/2022-01-13-aeraki-global-ratelimit/","publishdate":"2022-01-13T00:00:00Z","readingtime":4,"relpermalink":"/post/2022-01-13-aeraki-global-ratelimit/","section":"post","summary":"Aeraki 可以帮助你在服务网格中管理任何七层协议。目前 Aeraki 已经支持了 Dubbo、Thrit、Redis 等开源协议。你还可以使用 Aeraki 的 MetaProtocol 协议扩展框架来管理","tags":["Aeraki","MetaProtocol","Istio","Envoy"],"title":"Aeraki 教程系列：如何设置全局限流规则？","type":"post","url":"/post/2022-01-13-aeraki-global-ratelimit/","weight":0,"wordcount":1862},{"author":null,"categories":["Tech"],"content":"Aeraki 的限流规则设计直观而灵活，既支持对一个服务的所有入向请求进行限流，也支持按照不同的条件对一个服务器的请求进行细粒度的限流控制。","date":1641945600,"description":"Aeraki 的限流规则设计直观而灵活，既支持对一个服务的所有入向请求进行限流，也支持按照不同的条件对一个服务器的请求进行细粒度的限流控制。","dir":"post\\","excerpt_html":"Aeraki 的限流规则设计直观而灵活，既支持对一个服务的所有入向请求进行限流，也支持按照不同的条件对一个服务器的请求进行细粒度的限流控制。","excerpt_text":"Aeraki 的限流规则设计直观而灵活，既支持对一个服务的所有入向请求进行限流，也支持按照不同的条件对一个服务器的请求进行细粒度的限流控制。","expirydate":-62135596800,"fuzzywordcount":1300,"html":"Aeraki 的限流规则设计直观而灵活，既支持对一个服务的所有入向请求进行限流，也支持按照不同的条件对一个服务器的请求进行细粒度的限流控制。","keywords":null,"kind":"page","lang":"en","lastmod":1641945600,"objectID":"4a9fd7e319d37631a411a24e5ca21c5d","permalink":"http://localhost:1313/post/2022-01-12-aeraki-local-ratelimit/","publishdate":"2022-01-12T00:00:00Z","readingtime":3,"relpermalink":"/post/2022-01-12-aeraki-local-ratelimit/","section":"post","summary":"Aeraki 可以帮助你在服务网格中管理任何七层协议。目前 Aeraki 已经支持了 Dubbo、Thrit、Redis 等开源协议。你还可以使用 Aeraki 的 MetaProtocol 协议扩展框架来管理","tags":["Aeraki","MetaProtocol","Istio","Envoy"],"title":"Aeraki 教程系列：如何设置本地限流规则？","type":"post","url":"/post/2022-01-12-aeraki-local-ratelimit/","weight":0,"wordcount":1243},{"author":null,"categories":["Tech"],"content":"本系列教程将介绍如何通过 Aeraki 来在服务网格中为 Dubbo、Thrift 等协议的服务提供七层流量路由、本地限流、全局限流，以及如何基于 Aeraki Protocol 快速开发一个自定义协议，并在 Istio 服务网格中对采用自定义协议的服务进行管理。","date":1641859200,"description":"本系列教程将介绍如何通过 Aeraki 来在服务网格中为 Dubbo、Thrift 等协议的服务提供七层流量路由、本地限流、全局限流，以及如何基于 Aeraki Protocol 快速开发一个自定义协议，并在 Istio 服务网格中对采用自定义协议的服务进行管理。","dir":"post\\","excerpt_html":"本系列教程将介绍如何通过 Aeraki 来在服务网格中为 Dubbo、Thrift 等协议的服务提供七层流量路由、本地限流、全局限流，以及如何基于 Aeraki Protocol 快速开发一个自定义协议，并在 Istio 服务网格中对采用自定义协议的服务进行管理。","excerpt_text":"本系列教程将介绍如何通过 Aeraki 来在服务网格中为 Dubbo、Thrift 等协议的服务提供七层流量路由、本地限流、全局限流，以及如何基于 Aeraki Protocol 快速开发一个自定义协议，并在 Istio 服务网格中对采用自定义协议的服务进行管理。","expirydate":-62135596800,"fuzzywordcount":1500,"html":"本系列教程将介绍如何通过 Aeraki 来在服务网格中为 Dubbo、Thrift 等协议的服务提供七层流量路由、本地限流、全局限流，以及如何基于 Aeraki Protocol 快速开发一个自定义协议，并在 Istio 服务网格中对采用自定义协议的服务进行管理。","keywords":null,"kind":"page","lang":"en","lastmod":1641859200,"objectID":"41fe990658d549d95d69a8d74a07622e","permalink":"http://localhost:1313/post/2022-01-11-aeraki-routing/","publishdate":"2022-01-11T00:00:00Z","readingtime":3,"relpermalink":"/post/2022-01-11-aeraki-routing/","section":"post","summary":"Aeraki 可以帮助你在服务网格中管理任何七层协议。目前 Aeraki 已经支持了 Dubbo、Thrit、Redis 等开源协议。你还可以使用 Aeraki 的 MetaProtocol 协议扩展框架来管理","tags":["Aeraki","MetaProtocol","Istio","Envoy"],"title":"Aeraki 教程系列：如何设置路由规则？","type":"post","url":"/post/2022-01-11-aeraki-routing/","weight":0,"wordcount":1400},{"author":null,"categories":["Tech"],"content":"这篇博客非常清晰地阐述了目前很热的 eBPF 和 Service Mesh 的关系，并分别介绍 Envoy 在几种不同的数据平面架构模型中的位置，以及这几种架构模型各自的优势和权衡。最近我和同事以及社区的同学就引入 eBPF 之后 Service Mesh 的架构演进做了一些讨论，结论和 Solo 的这篇博客中的某些观点类似。作为 Linux 内核的一种扩展能力，eBPF 并不会替换 Envoy 的七层代理能力，而是作为 Service Mesh 数据面的一个增强技术。","date":1639785600,"description":"这篇博客非常清晰地阐述了目前很热的 eBPF 和 Service Mesh 的关系，并分别介绍 Envoy 在几种不同的数据平面架构模型中的位置，以及这几种架构模型各自的优势和权衡。最近我和同事以及社区的同学就引入 eBPF 之后 Service Mesh 的架构演进做了一些讨论，结论和 Solo 的这篇博客中的某些观点类似。作为 Linux 内核的一种扩展能力，eBPF 并不会替换 Envoy 的七层代理能力，而是作为 Service Mesh 数据面的一个增强技术。","dir":"post\\","excerpt_html":"这篇博客非常清晰地阐述了目前很热的 eBPF 和 Service Mesh 的关系，并分别介绍 Envoy 在几种不同的数据平面架构模型中的位置，以及这几种架构模型各自的优势和权衡。最近我和同事以及社区的同学就引入 eBPF 之后 Service Mesh 的架构演进做了一些讨论，结论和 Solo 的这篇博客中的某些观点类似。作为 Linux 内核的一种扩展能力，eBPF 并不会替换 Envoy 的七层代理能力，而是作为 Service Mesh 数据面的一个增强技术。","excerpt_text":"这篇博客非常清晰地阐述了目前很热的 eBPF 和 Service Mesh 的关系，并分别介绍 Envoy 在几种不同的数据平面架构模型中的位置，以及这几种架构模型各自的优势和权衡。最近我和同事以及社区的同学就引入 eBPF 之后 Service Mesh 的架构演进做了一些讨论，结论和 Solo 的这篇博客中的某些观点类似。作为 Linux 内核的一种扩展能力，eBPF 并不会替换 Envoy 的七层代理能力，而是作为 Service Mesh 数据面的一个增强技术。","expirydate":-62135596800,"fuzzywordcount":4000,"html":"这篇博客非常清晰地阐述了目前很热的 eBPF 和 Service Mesh 的关系，并分别介绍 Envoy 在几种不同的数据平面架构模型中的位置，以及这几种架构模型各自的优势和权衡。最近我和同事以及社区的同学就引入 eBPF 之后 Service Mesh 的架构演进做了一些讨论，结论和 Solo 的这篇博客中的某些观点类似。作为 Linux 内核的一种扩展能力，eBPF 并不会替换 Envoy 的七层代理能力，而是作为 Service Mesh 数据面的一个增强技术。","keywords":null,"kind":"page","lang":"en","lastmod":1639785600,"objectID":"7644d007db83deda608747f5169851e5","permalink":"http://localhost:1313/post/2021-12-19-ebpf-for-service-mesh/","publishdate":"2021-12-18T00:00:00Z","readingtime":8,"relpermalink":"/post/2021-12-19-ebpf-for-service-mesh/","section":"post","summary":"译者按：这篇博客非常清晰地阐述了目前很热的 eBPF 和 Service Mesh 的关系，并分别介绍 Envoy 在几种不同的数据平面架构模型中的位置，以及这几种架构模型各自的优势和权","tags":["Istio","Envoy","Service Mesh","eBPF"],"title":"译文：服务网格将使用 eBPF ？是的，但 Envoy 代理将继续存在","type":"post","url":"/post/2021-12-19-ebpf-for-service-mesh/","weight":0,"wordcount":3900},{"author":null,"categories":["Open Source"],"content":"Aeraki [Air-rah-ki] is the Greek word for 'breeze'. While Istio connects microservices in a service mesh, Aeraki provides a framework to allow Istio to support more layer 7 protocols other than just HTTP and gRPC. We hope that this breeze can help Istio sail a little further.","date":1633910400,"description":"Aeraki [Air-rah-ki] is the Greek word for 'breeze'. While Istio connects microservices in a service mesh, Aeraki provides a framework to allow Istio to support more layer 7 protocols other than just HTTP and gRPC. We hope that this breeze can help Istio sail a little further.","dir":"post\\","excerpt_html":"Aeraki [Air-rah-ki] is the Greek word for 'breeze'. While Istio connects microservices in a service mesh, Aeraki provides a framework to allow Istio to support more layer 7 protocols other than just HTTP and gRPC. We hope that this breeze can help Istio sail a little further.","excerpt_text":"Aeraki [Air-rah-ki] is the Greek word for 'breeze'. While Istio connects microservices in a service mesh, Aeraki provides a framework to allow Istio to support more layer 7 protocols other than just HTTP and gRPC. We hope that this breeze can help Istio sail a little further.","expirydate":-62135596800,"fuzzywordcount":1500,"html":"Aeraki [Air-rah-ki] is the Greek word for 'breeze'. While Istio connects microservices in a service mesh, Aeraki provides a framework to allow Istio to support more layer 7 protocols other than just HTTP and gRPC. We hope that this breeze can help Istio sail a little further.","keywords":null,"kind":"page","lang":"en","lastmod":1633910400,"objectID":"9f5f2e39f9081f8a43a231dd4b8cb1cf","permalink":"http://localhost:1313/post/2021-09-27-aeraki/","publishdate":"2021-10-11T00:00:00Z","readingtime":3,"relpermalink":"/post/2021-09-27-aeraki/","section":"post","summary":"Aeraki [Air-rah-ki] Mesh is an open-source service mesh I started about a year ago, and have been working on it till recently. Aeraki is the Greek word for ‘breeze’. While Istio connects microservices in a service mesh, Aeraki Mesh provides a non-intrusive, highly extendable way to allow Istio to support none-HTTP open-source and proprietary protocols. I hope this breeze can help Istio","tags":["Istio","Service Mesh","Envoy","Aeraki"],"title":"Aeraki Mesh","type":"post","url":"/post/2021-09-27-aeraki/","weight":0,"wordcount":1478},{"author":null,"categories":["Books"],"content":"“服务网格”这一基础设施的引入也给整个微服务的运维技术栈带来了新的挑战。对于运维同学来说，Istio 和 Envoy 的运维存在着较陡的学习曲线。腾讯云 TCM（Tencent Cloud Mesh）团队是业内最早一批接触服务网格技术的人员之一，有着大量 Istio/Envoy 故障排查和运维经验。本电子书记录了 TCM 团队从大量实际案例中总结出来的 Istio 运维经验，以及使用 Istio 的最佳实践，希望对大家有所帮助。","date":1633651200,"description":"“服务网格”这一基础设施的引入也给整个微服务的运维技术栈带来了新的挑战。对于运维同学来说，Istio 和 Envoy 的运维存在着较陡的学习曲线。腾讯云 TCM（Tencent Cloud Mesh）团队是业内最早一批接触服务网格技术的人员之一，有着大量 Istio/Envoy 故障排查和运维经验。本电子书记录了 TCM 团队从大量实际案例中总结出来的 Istio 运维经验，以及使用 Istio 的最佳实践，希望对大家有所帮助。","dir":"post\\","excerpt_html":"“服务网格”这一基础设施的引入也给整个微服务的运维技术栈带来了新的挑战。对于运维同学来说，Istio 和 Envoy 的运维存在着较陡的学习曲线。腾讯云 TCM（Tencent Cloud Mesh）团队是业内最早一批接触服务网格技术的人员之一，有着大量 Istio/Envoy 故障排查和运维经验。本电子书记录了 TCM 团队从大量实际案例中总结出来的 Istio 运维经验，以及使用 Istio 的最佳实践，希望对大家有所帮助。","excerpt_text":"“服务网格”这一基础设施的引入也给整个微服务的运维技术栈带来了新的挑战。对于运维同学来说，Istio 和 Envoy 的运维存在着较陡的学习曲线。腾讯云 TCM（Tencent Cloud Mesh）团队是业内最早一批接触服务网格技术的人员之一，有着大量 Istio/Envoy 故障排查和运维经验。本电子书记录了 TCM 团队从大量实际案例中总结出来的 Istio 运维经验，以及使用 Istio 的最佳实践，希望对大家有所帮助。","expirydate":-62135596800,"fuzzywordcount":400,"html":"“服务网格”这一基础设施的引入也给整个微服务的运维技术栈带来了新的挑战。对于运维同学来说，Istio 和 Envoy 的运维存在着较陡的学习曲线。腾讯云 TCM（Tencent Cloud Mesh）团队是业内最早一批接触服务网格技术的人员之一，有着大量 Istio/Envoy 故障排查和运维经验。本电子书记录了 TCM 团队从大量实际案例中总结出来的 Istio 运维经验，以及使用 Istio 的最佳实践，希望对大家有所帮助。","keywords":null,"kind":"page","lang":"en","lastmod":1633651200,"objectID":"2fef0aad97a0c610092014ea62488056","permalink":"http://localhost:1313/post/2021-10-08-istio-operation-bible/","publishdate":"2021-10-08T00:00:00Z","readingtime":1,"relpermalink":"/post/2021-10-08-istio-operation-bible/","section":"post","summary":"Istio 运维实战 通过将微服务中原本在 SDK 中实现的应用流量管理、可见性、通信安全等服务治理能力下放到一个专门的“服务网格”基础设施中，Istio 解开了","tags":["Istio","Envoy","Service Mesh"],"title":"Istio 运维实战（电子书）","type":"post","url":"/post/2021-10-08-istio-operation-bible/","weight":0,"wordcount":394},{"author":null,"categories":["Open Source"],"content":"CleanWhite is a clean, elegant, but fully functional blog theme for Hugo, which I use for my own blog.","date":1632614400,"description":"CleanWhite is a clean, elegant, but fully functional blog theme for Hugo, which I use for my own blog.","dir":"post\\","excerpt_html":"CleanWhite is a clean, elegant, but fully functional blog theme for Hugo, which I use for my own blog.","excerpt_text":"CleanWhite is a clean, elegant, but fully functional blog theme for Hugo, which I use for my own blog.","expirydate":-62135596800,"fuzzywordcount":1200,"html":"CleanWhite is a clean, elegant, but fully functional blog theme for Hugo, which I use for my own blog.","keywords":null,"kind":"page","lang":"en","lastmod":1632614400,"objectID":"f8004657d3aec1f210d1d4003f2a3bc6","permalink":"http://localhost:1313/post/2021-09-26-hugo-theme-clean-white/","publishdate":"2021-09-26T00:00:00Z","readingtime":3,"relpermalink":"/post/2021-09-26-hugo-theme-clean-white/","section":"post","summary":"Clean White Theme for Hugo CleanWhite is a clean, elegant, but fully functional blog theme for Hugo. Here is a live demo site using this theme. It is based on huxblog Jekyll Theme and Clean Blog Jekyll Theme. These two upstream projects have done awesome jobs to create a blog theme, what I\u0026rsquo;m doing here is porting it to Hugo, of which I like the simplicity and the much faster","tags":["Hugo"],"title":"Hugo Theme: CleanWhite","type":"post","url":"/post/2021-09-26-hugo-theme-clean-white/","weight":0,"wordcount":1134},{"author":null,"categories":["Books"],"content":"In this series of liveProjects, you’ll deploy distributed tracing to help an eCommerce company manage its new microservices infrastructure. You’ve just been hired by eShop, a rapidly growing company that adopted microservices due to the flexibility they provide developers. eShop is finding that managing and troubleshooting its ever-increasing number of microservices is a challenge, and so your task is to use distributed tracing to develop a high-level picture of requests across these microservices. You’ll implement distributed tracing using Jaeger, Kubernetes, and Istio. Each liveProject in this series can be tackled individually, or as part of an extended learning experience.","date":1630886400,"description":"In this series of liveProjects, you’ll deploy distributed tracing to help an eCommerce company manage its new microservices infrastructure. You’ve just been hired by eShop, a rapidly growing company that adopted microservices due to the flexibility they provide developers. eShop is finding that managing and troubleshooting its ever-increasing number of microservices is a challenge, and so your task is to use distributed tracing to develop a high-level picture of requests across these microservices. You’ll implement distributed tracing using Jaeger, Kubernetes, and Istio. Each liveProject in this series can be tackled individually, or as part of an extended learning experience.","dir":"post\\","excerpt_html":"In this series of liveProjects, you’ll deploy distributed tracing to help an eCommerce company manage its new microservices infrastructure. You’ve just been hired by eShop, a rapidly growing company that adopted microservices due to the flexibility they provide developers. eShop is finding that managing and troubleshooting its ever-increasing number of microservices is a challenge, and so your task is to use distributed tracing to develop a high-level picture of requests across these microservices. You’ll implement distributed tracing using Jaeger, Kubernetes, and Istio. Each liveProject in this series can be tackled individually, or as part of an extended learning experience.","excerpt_text":"In this series of liveProjects, you’ll deploy distributed tracing to help an eCommerce company manage its new microservices infrastructure. You’ve just been hired by eShop, a rapidly growing company that adopted microservices due to the flexibility they provide developers. eShop is finding that managing and troubleshooting its ever-increasing number of microservices is a challenge, and so your task is to use distributed tracing to develop a high-level picture of requests across these microservices. You’ll implement distributed tracing using Jaeger, Kubernetes, and Istio. Each liveProject in this series can be tackled individually, or as part of an extended learning experience.","expirydate":-62135596800,"fuzzywordcount":100,"html":"In this series of liveProjects, you’ll deploy distributed tracing to help an eCommerce company manage its new microservices infrastructure. You’ve just been hired by eShop, a rapidly growing company that adopted microservices due to the flexibility they provide developers. eShop is finding that managing and troubleshooting its ever-increasing number of microservices is a challenge, and so your task is to use distributed tracing to develop a high-level picture of requests across these microservices. You’ll implement distributed tracing using Jaeger, Kubernetes, and Istio. Each liveProject in this series can be tackled individually, or as part of an extended learning experience.","keywords":null,"kind":"page","lang":"en","lastmod":1630886400,"objectID":"b8ffbdf9d4bad5c67b8a5432517c0e31","permalink":"http://localhost:1313/post/2021-09-08-distributed-tracing-with-jaeger-kubernetes-and-istio/","publishdate":"2021-09-06T00:00:00Z","readingtime":1,"relpermalink":"/post/2021-09-08-distributed-tracing-with-jaeger-kubernetes-and-istio/","section":"post","summary":"30% off 👉👉👉 Get this lesson now with my special discount! 30% off 👉👉👉 Get more Manning books with my special discount! 优惠30% 👉👉👉 采用我的专属折扣链接购买本在线课程！ 优惠30% 👉👉👉 采用我的专属折扣链接","tags":["Istio","Service Mesh","Jaeger","OpenTracing","Distributed Tracing"],"title":"Online Lesson: Distributed Tracing with Jaeger, Kubernetes, and Istio","type":"post","url":"/post/2021-09-08-distributed-tracing-with-jaeger-kubernetes-and-istio/","weight":0,"wordcount":76},{"author":null,"categories":["Books"],"content":"目前市面上可以找到的介绍云计算底层网络技术的最好的中文书籍之一：如果你想要学习或者构建一个现代化的云原生数据中心网络，或者想简单验证一下你对现代云原生数据中心网络的一些想法，那么这本书正是你所需要的。不管你是在搭建一个多租户的私有云，还是一个运行机器学习的网络，或者一个企业数据中心，本书作者都介绍了必要的步骤，以帮助你设计费用合理、高容量、易于管理、敏捷且可靠的数据中心。\n本书是网络架构师、数据中心运营人员，以及网络和容器化应用开发人员的理想之选。书中有机地结合了理论知识与实践操作，介绍了构建和运维一个健壮的、可扩展的网络基础设施所需的架构和协议。本书将以一种厂商中立的方式来介绍网络设计。如果你对开放网络感兴趣，这本书也包含了许多使用FRR和Ansible等开源软件的示例。 ","date":1630022400,"description":"目前市面上可以找到的介绍云计算底层网络技术的最好的中文书籍之一：如果你想要学习或者构建一个现代化的云原生数据中心网络，或者想简单验证一下你对现代云原生数据中心网络的一些想法，那么这本书正是你所需要的。不管你是在搭建一个多租户的私有云，还是一个运行机器学习的网络，或者一个企业数据中心，本书作者都介绍了必要的步骤，以帮助你设计费用合理、高容量、易于管理、敏捷且可靠的数据中心。\n本书是网络架构师、数据中心运营人员，以及网络和容器化应用开发人员的理想之选。书中有机地结合了理论知识与实践操作，介绍了构建和运维一个健壮的、可扩展的网络基础设施所需的架构和协议。本书将以一种厂商中立的方式来介绍网络设计。如果你对开放网络感兴趣，这本书也包含了许多使用FRR和Ansible等开源软件的示例。 ","dir":"post\\","excerpt_html":"目前市面上可以找到的介绍云计算底层网络技术的最好的中文书籍之一：如果你想要学习或者构建一个现代化的云原生数据中心网络，或者想简单验证一下你对现代云原生数据中心网络的一些想法，那么这本书正是你所需要的。不管你是在搭建一个多租户的私有云，还是一个运行机器学习的网络，或者一个企业数据中心，本书作者都介绍了必要的步骤，以帮助你设计费用合理、高容量、易于管理、敏捷且可靠的数据中心。\n本书是网络架构师、数据中心运营人员，以及网络和容器化应用开发人员的理想之选。书中有机地结合了理论知识与实践操作，介绍了构建和运维一个健壮的、可扩展的网络基础设施所需的架构和协议。本书将以一种厂商中立的方式来介绍网络设计。如果你对开放网络感兴趣，这本书也包含了许多使用FRR和Ansible等开源软件的示例。 ","excerpt_text":"目前市面上可以找到的介绍云计算底层网络技术的最好的中文书籍之一：如果你想要学习或者构建一个现代化的云原生数据中心网络，或者想简单验证一下你对现代云原生数据中心网络的一些想法，那么这本书正是你所需要的。不管你是在搭建一个多租户的私有云，还是一个运行机器学习的网络，或者一个企业数据中心，本书作者都介绍了必要的步骤，以帮助你设计费用合理、高容量、易于管理、敏捷且可靠的数据中心。\n本书是网络架构师、数据中心运营人员，以及网络和容器化应用开发人员的理想之选。书中有机地结合了理论知识与实践操作，介绍了构建和运维一个健壮的、可扩展的网络基础设施所需的架构和协议。本书将以一种厂商中立的方式来介绍网络设计。如果你对开放网络感兴趣，这本书也包含了许多使用FRR和Ansible等开源软件的示例。 ","expirydate":-62135596800,"fuzzywordcount":900,"html":"目前市面上可以找到的介绍云计算底层网络技术的最好的中文书籍之一：如果你想要学习或者构建一个现代化的云原生数据中心网络，或者想简单验证一下你对现代云原生数据中心网络的一些想法，那么这本书正是你所需要的。不管你是在搭建一个多租户的私有云，还是一个运行机器学习的网络，或者一个企业数据中心，本书作者都介绍了必要的步骤，以帮助你设计费用合理、高容量、易于管理、敏捷且可靠的数据中心。\n本书是网络架构师、数据中心运营人员，以及网络和容器化应用开发人员的理想之选。书中有机地结合了理论知识与实践操作，介绍了构建和运维一个健壮的、可扩展的网络基础设施所需的架构和协议。本书将以一种厂商中立的方式来介绍网络设计。如果你对开放网络感兴趣，这本书也包含了许多使用FRR和Ansible等开源软件的示例。 ","keywords":null,"kind":"page","lang":"en","lastmod":1630022400,"objectID":"8bd01c43aaa7fa6001bfb678bf944928","permalink":"http://localhost:1313/post/2021-08-27-cloud-native-data-center/","publishdate":"2021-08-27T00:00:00Z","readingtime":2,"relpermalink":"/post/2021-08-27-cloud-native-data-center/","section":"post","summary":"“浮云飘进我的生活,没有带来雨水或迎来风暴,却为落日的天空增添了色彩” — 泰戈尔，飞鸟集 云计算最大的好处是可以按需使用，按量计费，因此也通常被","tags":["Network"],"title":"译著：云原生数据中心网络","type":"post","url":"/post/2021-08-27-cloud-native-data-center/","weight":0,"wordcount":891},{"author":null,"categories":["Books"],"content":"Istio 是由 Google、IBM、Lyft 等共同开源的 Service Mesh（服务网格）框架，于2017年初开始进入大众视野，作为云原生时代下承 Kubernetes、上接 Serverless 架构的重要基础设施层，地位至关重要。ServiceMesher 社区作为中国最早的一批在研究和推广 Service Mesh 技术的开源社区决定整合社区资源，合作撰写一本开源电子书作为服务网格智库。我作为编委会成员和主要作者之一，参与了本书的编写工作。","date":1629936000,"description":"Istio 是由 Google、IBM、Lyft 等共同开源的 Service Mesh（服务网格）框架，于2017年初开始进入大众视野，作为云原生时代下承 Kubernetes、上接 Serverless 架构的重要基础设施层，地位至关重要。ServiceMesher 社区作为中国最早的一批在研究和推广 Service Mesh 技术的开源社区决定整合社区资源，合作撰写一本开源电子书作为服务网格智库。我作为编委会成员和主要作者之一，参与了本书的编写工作。","dir":"post\\","excerpt_html":"Istio 是由 Google、IBM、Lyft 等共同开源的 Service Mesh（服务网格）框架，于2017年初开始进入大众视野，作为云原生时代下承 Kubernetes、上接 Serverless 架构的重要基础设施层，地位至关重要。ServiceMesher 社区作为中国最早的一批在研究和推广 Service Mesh 技术的开源社区决定整合社区资源，合作撰写一本开源电子书作为服务网格智库。我作为编委会成员和主要作者之一，参与了本书的编写工作。","excerpt_text":"Istio 是由 Google、IBM、Lyft 等共同开源的 Service Mesh（服务网格）框架，于2017年初开始进入大众视野，作为云原生时代下承 Kubernetes、上接 Serverless 架构的重要基础设施层，地位至关重要。ServiceMesher 社区作为中国最早的一批在研究和推广 Service Mesh 技术的开源社区决定整合社区资源，合作撰写一本开源电子书作为服务网格智库。我作为编委会成员和主要作者之一，参与了本书的编写工作。","expirydate":-62135596800,"fuzzywordcount":400,"html":"Istio 是由 Google、IBM、Lyft 等共同开源的 Service Mesh（服务网格）框架，于2017年初开始进入大众视野，作为云原生时代下承 Kubernetes、上接 Serverless 架构的重要基础设施层，地位至关重要。ServiceMesher 社区作为中国最早的一批在研究和推广 Service Mesh 技术的开源社区决定整合社区资源，合作撰写一本开源电子书作为服务网格智库。我作为编委会成员和主要作者之一，参与了本书的编写工作。","keywords":null,"kind":"page","lang":"en","lastmod":1629936000,"objectID":"b96c0e5400a790af5f674be94d5599e1","permalink":"http://localhost:1313/post/2021-08-26-istio-handbook/","publishdate":"2021-08-26T00:00:00Z","readingtime":1,"relpermalink":"/post/2021-08-26-istio-handbook/","section":"post","summary":"深入理解 Istio —— 云原生服务网格进阶实战 Istio 是由 Google、IBM、Lyft 等共同开源的 Service Mesh（服务网格）框架，于2017年初开始进入大众视","tags":["Istio","Service Mesh"],"title":"深入理解 Istio —— 云原生服务网格进阶实战","type":"post","url":"/post/2021-08-26-istio-handbook/","weight":0,"wordcount":386},{"author":null,"categories":["Tech"],"content":"最近在实现 MetaProtocol 时阅读了 Envoy 相关的一些源码。这里将一些重要流程的时序图记录下来，以备后续查看。","date":1628640000,"description":"最近在实现 MetaProtocol 时阅读了 Envoy 相关的一些源码。这里将一些重要流程的时序图记录下来，以备后续查看。","dir":"post\\","excerpt_html":"最近在实现 MetaProtocol 时阅读了 Envoy 相关的一些源码。这里将一些重要流程的时序图记录下来，以备后续查看。","excerpt_text":"最近在实现 MetaProtocol 时阅读了 Envoy 相关的一些源码。这里将一些重要流程的时序图记录下来，以备后续查看。","expirydate":-62135596800,"fuzzywordcount":800,"html":"最近在实现 MetaProtocol 时阅读了 Envoy 相关的一些源码。这里将一些重要流程的时序图记录下来，以备后续查看。","keywords":null,"kind":"page","lang":"en","lastmod":1628640000,"objectID":"e92bf2f4f491db186686bc4eb20ad4d6","permalink":"http://localhost:1313/post/2021-08-11-envoy-code/","publishdate":"2021-08-11T00:00:00Z","readingtime":2,"relpermalink":"/post/2021-08-11-envoy-code/","section":"post","summary":"最近在实现 MetaProtocol 时阅读了 Envoy 相关的一些源码。这里将一些重要流程的时序图记录下来，以备后续查看。 TCP Proxy TCP Proxy 时序图 Dubbo Proxy Dubbo Proxy 时序图 RDS RDS（路由发现服务）","tags":["Envoy"],"title":"Envoy 源码流程图","type":"post","url":"/post/2021-08-11-envoy-code/","weight":0,"wordcount":729},{"author":null,"categories":["Presentations","Tech"],"content":"流量管理是 Istio 服务网格的核心能力，然而 Istio 缺省只提供了 HTTP 和 gRPC 两种协议的七层管理能力。对于微服务中常用的其他协议，包括 RPC、Messaging、Cache、Database等，Istio 只支持在四层上对这些协议进行处理。这导致我们将微服务应用迁移到 Istio 服务网格时，无法充分利用服务网格提供的流量管理能力。开源项目 Aeraki 提供了一个第三方协议的扩展框架，支持在 Istio 中对任意七层流量进行管理，提供动态路由、负载均衡、熔断等流量管理能力。本次分享将介绍如何使用 Aeraki 在 Istio 服务网格中管理任何七层协议，包括 Thrift，Dubbo，Redis，以及私有 RPC 协议等，并演示一个使用 Aeraki 管理第三方 RPC 协议的示例。","date":1625875200,"description":"流量管理是 Istio 服务网格的核心能力，然而 Istio 缺省只提供了 HTTP 和 gRPC 两种协议的七层管理能力。对于微服务中常用的其他协议，包括 RPC、Messaging、Cache、Database等，Istio 只支持在四层上对这些协议进行处理。这导致我们将微服务应用迁移到 Istio 服务网格时，无法充分利用服务网格提供的流量管理能力。开源项目 Aeraki 提供了一个第三方协议的扩展框架，支持在 Istio 中对任意七层流量进行管理，提供动态路由、负载均衡、熔断等流量管理能力。本次分享将介绍如何使用 Aeraki 在 Istio 服务网格中管理任何七层协议，包括 Thrift，Dubbo，Redis，以及私有 RPC 协议等，并演示一个使用 Aeraki 管理第三方 RPC 协议的示例。","dir":"post\\","excerpt_html":"流量管理是 Istio 服务网格的核心能力，然而 Istio 缺省只提供了 HTTP 和 gRPC 两种协议的七层管理能力。对于微服务中常用的其他协议，包括 RPC、Messaging、Cache、Database等，Istio 只支持在四层上对这些协议进行处理。这导致我们将微服务应用迁移到 Istio 服务网格时，无法充分利用服务网格提供的流量管理能力。开源项目 Aeraki 提供了一个第三方协议的扩展框架，支持在 Istio 中对任意七层流量进行管理，提供动态路由、负载均衡、熔断等流量管理能力。本次分享将介绍如何使用 Aeraki 在 Istio 服务网格中管理任何七层协议，包括 Thrift，Dubbo，Redis，以及私有 RPC 协议等，并演示一个使用 Aeraki 管理第三方 RPC 协议的示例。","excerpt_text":"流量管理是 Istio 服务网格的核心能力，然而 Istio 缺省只提供了 HTTP 和 gRPC 两种协议的七层管理能力。对于微服务中常用的其他协议，包括 RPC、Messaging、Cache、Database等，Istio 只支持在四层上对这些协议进行处理。这导致我们将微服务应用迁移到 Istio 服务网格时，无法充分利用服务网格提供的流量管理能力。开源项目 Aeraki 提供了一个第三方协议的扩展框架，支持在 Istio 中对任意七层流量进行管理，提供动态路由、负载均衡、熔断等流量管理能力。本次分享将介绍如何使用 Aeraki 在 Istio 服务网格中管理任何七层协议，包括 Thrift，Dubbo，Redis，以及私有 RPC 协议等，并演示一个使用 Aeraki 管理第三方 RPC 协议的示例。","expirydate":-62135596800,"fuzzywordcount":500,"html":"流量管理是 Istio 服务网格的核心能力，然而 Istio 缺省只提供了 HTTP 和 gRPC 两种协议的七层管理能力。对于微服务中常用的其他协议，包括 RPC、Messaging、Cache、Database等，Istio 只支持在四层上对这些协议进行处理。这导致我们将微服务应用迁移到 Istio 服务网格时，无法充分利用服务网格提供的流量管理能力。开源项目 Aeraki 提供了一个第三方协议的扩展框架，支持在 Istio 中对任意七层流量进行管理，提供动态路由、负载均衡、熔断等流量管理能力。本次分享将介绍如何使用 Aeraki 在 Istio 服务网格中管理任何七层协议，包括 Thrift，Dubbo，Redis，以及私有 RPC 协议等，并演示一个使用 Aeraki 管理第三方 RPC 协议的示例。","keywords":null,"kind":"page","lang":"en","lastmod":1625875200,"objectID":"c8f24a3e0f4a864b435e30c3c345fded","permalink":"http://localhost:1313/post/2021-07-10-full-stack-service-mesh/","publishdate":"2021-07-10T00:00:00Z","readingtime":1,"relpermalink":"/post/2021-07-10-full-stack-service-mesh/","section":"post","summary":"主题简介 流量管理是 Istio 服务网格的核心能力，然而 Istio 缺省只提供了 HTTP 和 gRPC 两种协议的七层管理能力。对于微服务中常用的其他协议，包括 RPC、Messag","tags":["Istio","Envoy","Aeraki","MetaProtocol"],"title":"Istio Meetup China：全栈服务网格 - Aeraki 助你在 Istio 服务网格中管理任何七层流量","type":"post","url":"/post/2021-07-10-full-stack-service-mesh/","weight":0,"wordcount":441},{"author":null,"categories":["Tech"],"content":"Istio 相关知识汇总","date":1617321600,"description":"Istio 相关知识汇总","dir":"post\\","excerpt_html":"Istio 相关知识汇总","excerpt_text":"Istio 相关知识汇总","expirydate":-62135596800,"fuzzywordcount":200,"html":"Istio 相关知识汇总","keywords":null,"kind":"page","lang":"en","lastmod":1617321600,"objectID":"d7678ae7a5a6c58dec39ae2eeabf1f15","permalink":"http://localhost:1313/post/2020-04-02-istio-mindmap/","publishdate":"2021-04-02T00:00:00Z","readingtime":1,"relpermalink":"/post/2020-04-02-istio-mindmap/","section":"post","summary":"Mind Map Istio 流量管理 Istio流量管理实现机制深度解析 Istio 流量管理原理与协议扩展 可见性 实现方法级调用跟踪 实现 Kafka 消息调用跟踪 协议扩展 如何在 Isito 中支持 Du","tags":["Kubernetes","Knowledge Graph"],"title":"Istio 知识图谱","type":"post","url":"/post/2020-04-02-istio-mindmap/","weight":0,"wordcount":172},{"author":null,"categories":["Tech"],"content":"在实现 K8s 网络模型时，为了应对不同的使用场景，TKE（Tencent Kubernetes Engine）提供了 Global Router 和 VPC-CNI 两种网络模式。本文中，我们将通过这两种模式下数据包的转发流程来分析这两种模式各自的实现原理。本文还会对比分析不同网络模式下的网络效率和资源使用情况，以便于大家在创建 TKE 集群时根据应用对网络的需求和使用成本选择合适的网络模型。","date":1616544000,"description":"在实现 K8s 网络模型时，为了应对不同的使用场景，TKE（Tencent Kubernetes Engine）提供了 Global Router 和 VPC-CNI 两种网络模式。本文中，我们将通过这两种模式下数据包的转发流程来分析这两种模式各自的实现原理。本文还会对比分析不同网络模式下的网络效率和资源使用情况，以便于大家在创建 TKE 集群时根据应用对网络的需求和使用成本选择合适的网络模型。","dir":"post\\","excerpt_html":"在实现 K8s 网络模型时，为了应对不同的使用场景，TKE（Tencent Kubernetes Engine）提供了 Global Router 和 VPC-CNI 两种网络模式。本文中，我们将通过这两种模式下数据包的转发流程来分析这两种模式各自的实现原理。本文还会对比分析不同网络模式下的网络效率和资源使用情况，以便于大家在创建 TKE 集群时根据应用对网络的需求和使用成本选择合适的网络模型。","excerpt_text":"在实现 K8s 网络模型时，为了应对不同的使用场景，TKE（Tencent Kubernetes Engine）提供了 Global Router 和 VPC-CNI 两种网络模式。本文中，我们将通过这两种模式下数据包的转发流程来分析这两种模式各自的实现原理。本文还会对比分析不同网络模式下的网络效率和资源使用情况，以便于大家在创建 TKE 集群时根据应用对网络的需求和使用成本选择合适的网络模型。","expirydate":-62135596800,"fuzzywordcount":7000,"html":"在实现 K8s 网络模型时，为了应对不同的使用场景，TKE（Tencent Kubernetes Engine）提供了 Global Router 和 VPC-CNI 两种网络模式。本文中，我们将通过这两种模式下数据包的转发流程来分析这两种模式各自的实现原理。本文还会对比分析不同网络模式下的网络效率和资源使用情况，以便于大家在创建 TKE 集群时根据应用对网络的需求和使用成本选择合适的网络模型。","keywords":null,"kind":"page","lang":"en","lastmod":1616544000,"objectID":"a17bf993c4abfad5c414641a8ada52df","permalink":"http://localhost:1313/post/2021-03-24-tke-network-mode/","publishdate":"2021-03-24T00:00:00Z","readingtime":14,"relpermalink":"/post/2021-03-24-tke-network-mode/","section":"post","summary":"K8s 对于集群 Pod 的网络模型只有下面两点简单的要求： 节点上的 Pod 可以不通过 NAT 和其他任何节点上的 Pod 通信 节点上的代理（比如：系统守护进程、kubelet","tags":["Tencent","TKE","Kubernetes","Network"],"title":"腾讯云容器网络介绍","type":"post","url":"/post/2021-03-24-tke-network-mode/","weight":0,"wordcount":6916},{"author":null,"categories":["Presentations","Tech"],"content":"本文根据腾讯云赵化冰和知乎唐阳在 IstioCon 2021 中的演讲 “How to Manage Any Layer-7 Traffic in an Istio Service Mesh?” 整理而成。","date":1614643200,"description":"本文根据腾讯云赵化冰和知乎唐阳在 IstioCon 2021 中的演讲 “How to Manage Any Layer-7 Traffic in an Istio Service Mesh?” 整理而成。","dir":"post\\","excerpt_html":"本文根据腾讯云赵化冰和知乎唐阳在 IstioCon 2021 中的演讲 “How to Manage Any Layer-7 Traffic in an Istio Service Mesh?” 整理而成。","excerpt_text":"本文根据腾讯云赵化冰和知乎唐阳在 IstioCon 2021 中的演讲 “How to Manage Any Layer-7 Traffic in an Istio Service Mesh?” 整理而成。","expirydate":-62135596800,"fuzzywordcount":6700,"html":"本文根据腾讯云赵化冰和知乎唐阳在 IstioCon 2021 中的演讲 “How to Manage Any Layer-7 Traffic in an Istio Service Mesh?” 整理而成。","keywords":null,"kind":"page","lang":"en","lastmod":1614643200,"objectID":"c609f061b422f6a541b5743ba04ea919","permalink":"http://localhost:1313/post/2021-03-02-manage-any-layer-7-traffic-in-istio/","publishdate":"2021-03-02T00:00:00Z","readingtime":14,"relpermalink":"/post/2021-03-02-manage-any-layer-7-traffic-in-istio/","section":"post","summary":"备注：本文根据腾讯云赵化冰和知乎唐阳在 IstioCon 2021 中的演讲 “How to Manage Any Layer-7 Traffic in an Istio Service Mesh?” 整理而成。 大家好，今天我们想和大家分享的主题是如何扩","tags":["Aeraki","Istio","Envoy","Redis","Dubbo","Thrift"],"title":"IstioCon 2021: How to Manage Any Layer-7 Traffic in an Istio Service Mesh?","type":"post","url":"/post/2021-03-02-manage-any-layer-7-traffic-in-istio/","weight":0,"wordcount":6696},{"author":null,"categories":["Presentations","Tech"],"content":"通过本次的分享，听众可以理解Istio流量管理背后的实现原理，包括控制面流量管理模型和数据面流量转发机制。本次分享还将介绍如何对Istio进行扩展，以支持更多地七层协议，如dubbo，thrift，redis等等。","date":1607299200,"description":"通过本次的分享，听众可以理解Istio流量管理背后的实现原理，包括控制面流量管理模型和数据面流量转发机制。本次分享还将介绍如何对Istio进行扩展，以支持更多地七层协议，如dubbo，thrift，redis等等。","dir":"post\\","excerpt_html":"通过本次的分享，听众可以理解Istio流量管理背后的实现原理，包括控制面流量管理模型和数据面流量转发机制。本次分享还将介绍如何对Istio进行扩展，以支持更多地七层协议，如dubbo，thrift，redis等等。","excerpt_text":"通过本次的分享，听众可以理解Istio流量管理背后的实现原理，包括控制面流量管理模型和数据面流量转发机制。本次分享还将介绍如何对Istio进行扩展，以支持更多地七层协议，如dubbo，thrift，redis等等。","expirydate":-62135596800,"fuzzywordcount":500,"html":"通过本次的分享，听众可以理解Istio流量管理背后的实现原理，包括控制面流量管理模型和数据面流量转发机制。本次分享还将介绍如何对Istio进行扩展，以支持更多地七层协议，如dubbo，thrift，redis等等。","keywords":null,"kind":"page","lang":"en","lastmod":1607299200,"objectID":"cd842454fc8294b7cfecc90ded3bd0ab","permalink":"http://localhost:1313/post/2020-12-07-cnbps2020-istio-traffic-management/","publishdate":"2020-12-07T00:00:00Z","readingtime":1,"relpermalink":"/post/2020-12-07-cnbps2020-istio-traffic-management/","section":"post","summary":"通过本次的分享，听众可以理解Istio流量管理背后的实现原理，包括控制面流量管理模型和数据面流量转发机制。本次分享还将介绍如何对Istio进","tags":["Istio","Envoy","Service Mesh","Aeraki"],"title":"CNBPS 2020：Istio 流量管理原理与协议扩展","type":"post","url":"/post/2020-12-07-cnbps2020-istio-traffic-management/","weight":0,"wordcount":414},{"author":null,"categories":["Presentations","Tech"],"content":"","date":1605139200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1605139200,"objectID":"1580cc5893c82c82629f2ae5570920d0","permalink":"http://localhost:1313/post/2020-11-12-cnbps2020/","publishdate":"2020-11-12T00:00:00Z","readingtime":3,"relpermalink":"/post/2020-11-12-cnbps2020/","section":"post","summary":"11月19-21日，CNBPS 2020重磅回归！ 作为一年一度的云原生科技盛会，众多云原生届的“顶流”将在这里聚集，展现云原生世界的科技想象力","tags":["Istio","Envoy","Service Mesh"],"title":"CNBPS 2020：云原生应用架构专场介绍","type":"post","url":"/post/2020-11-12-cnbps2020/","weight":0,"wordcount":1240},{"author":null,"categories":["Tech"],"content":"Redis 是一个高性能的 key-value 存储系统，被广泛用于微服务架构中。本文将介绍如何通过 Istio 和 Envoy 实现客户端无感知的 Redis Cluster 数据分片，并实现读写分离、流量镜像等高级流量管理功能。","date":1602547200,"description":"Redis 是一个高性能的 key-value 存储系统，被广泛用于微服务架构中。本文将介绍如何通过 Istio 和 Envoy 实现客户端无感知的 Redis Cluster 数据分片，并实现读写分离、流量镜像等高级流量管理功能。","dir":"post\\","excerpt_html":"Redis 是一个高性能的 key-value 存储系统，被广泛用于微服务架构中。本文将介绍如何通过 Istio 和 Envoy 实现客户端无感知的 Redis Cluster 数据分片，并实现读写分离、流量镜像等高级流量管理功能。","excerpt_text":"Redis 是一个高性能的 key-value 存储系统，被广泛用于微服务架构中。本文将介绍如何通过 Istio 和 Envoy 实现客户端无感知的 Redis Cluster 数据分片，并实现读写分离、流量镜像等高级流量管理功能。","expirydate":-62135596800,"fuzzywordcount":5100,"html":"Redis 是一个高性能的 key-value 存储系统，被广泛用于微服务架构中。本文将介绍如何通过 Istio 和 Envoy 实现客户端无感知的 Redis Cluster 数据分片，并实现读写分离、流量镜像等高级流量管理功能。","keywords":null,"kind":"page","lang":"en","lastmod":1602547200,"objectID":"e7459cb9680d12cbb7748e50e2156b12","permalink":"http://localhost:1313/post/2020-10-14-redis-cluster-with-istio/","publishdate":"2020-10-13T00:00:00Z","readingtime":10,"relpermalink":"/post/2020-10-14-redis-cluster-with-istio/","section":"post","summary":"Redis 是一个高性能的 key-value 存储系统，被广泛用于微服务架构中。如果我们想要使用 Redis 集群模式提供的高级特性，则需要对客户端代码进行改动，这带来了应用升级和","tags":["Istio","Envoy","Redis"],"title":"在 Istio 中实现 Redis 集群的数据分片、读写分离和流量镜像","type":"post","url":"/post/2020-10-14-redis-cluster-with-istio/","weight":0,"wordcount":5005},{"author":null,"categories":null,"content":"新场古镇一瞥","date":1601251200,"description":"新场古镇一瞥","dir":"post\\","excerpt_html":"新场古镇一瞥","excerpt_text":"新场古镇一瞥","expirydate":-62135596800,"fuzzywordcount":100,"html":"新场古镇一瞥","keywords":null,"kind":"page","lang":"en","lastmod":1601251200,"objectID":"2c3278bd0aac20c02726e7d2c4ac88c1","permalink":"http://localhost:1313/post/2020-09-28-xingchang/","publishdate":"2020-09-28T00:00:00Z","readingtime":1,"relpermalink":"/post/2020-09-28-xingchang/","section":"post","summary":"Img 20200926 114017 Img 20200926 120808 01 Img 20200926 120819 Img 20200926 121439 Img 20200926 121919 Img 20200926 122024 Img 20200926 122104 Img 20200926 122818 Img 20200926 123042 Img 20200926 123140 Img 20200926 124028 Img 20200926 124227 Img 20200926 124303 Img 20200926 124319 Img 20200926 124348","tags":["Photograph","Sichuan"],"title":"大邑新场 --- 被时光遗忘的川西古镇","type":"post","url":"/post/2020-09-28-xingchang/","weight":0,"wordcount":46},{"author":null,"categories":["Tech"],"content":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","date":1600473600,"description":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","dir":"post\\","excerpt_html":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","excerpt_text":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","expirydate":-62135596800,"fuzzywordcount":3800,"html":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","keywords":null,"kind":"page","lang":"en","lastmod":1600473600,"objectID":"f353e549cc43fb0e6322dec739a16c41","permalink":"http://localhost:1313/post/2020-09-19-headless-mtls/","publishdate":"2020-09-19T00:00:00Z","readingtime":8,"relpermalink":"/post/2020-09-19-headless-mtls/","section":"post","summary":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方","tags":["Istio","Envoy"],"title":"Istio 运维实战系列（3）：让人头大的『无头服务』-下","type":"post","url":"/post/2020-09-19-headless-mtls/","weight":0,"wordcount":3779},{"author":null,"categories":["Tech"],"content":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","date":1599782400,"description":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","dir":"post\\","excerpt_html":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","excerpt_text":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","expirydate":-62135596800,"fuzzywordcount":3200,"html":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","keywords":null,"kind":"page","lang":"en","lastmod":1599782400,"objectID":"669d1ada6550009e7a37966b1b4a43ac","permalink":"http://localhost:1313/post/2020-09-11-headless-mtls/","publishdate":"2020-09-11T00:00:00Z","readingtime":7,"relpermalink":"/post/2020-09-11-headless-mtls/","section":"post","summary":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方","tags":["Istio","Envoy"],"title":"Istio 运维实战系列（2）：让人头大的『无头服务』-上","type":"post","url":"/post/2020-09-11-headless-mtls/","weight":0,"wordcount":3123},{"author":null,"categories":["Tech"],"content":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","date":1599264000,"description":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","dir":"post\\","excerpt_html":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","excerpt_text":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","expirydate":-62135596800,"fuzzywordcount":3900,"html":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方法。","keywords":null,"kind":"page","lang":"en","lastmod":1599264000,"objectID":"0106e85873775277d65f68bf81597c3b","permalink":"http://localhost:1313/post/2020-09-05-istio-sidecar-dependency/","publishdate":"2020-09-05T00:00:00Z","readingtime":8,"relpermalink":"/post/2020-09-05-istio-sidecar-dependency/","section":"post","summary":"本系列文章将介绍用户从 Spring Cloud，Dubbo 等传统微服务框架迁移到 Istio 服务网格时的一些经验，以及在使用 Istio 过程中可能遇到的一些常见问题的解决方","tags":["Istio","Envoy"],"title":"Istio 运维实战系列（1）：应用容器对 Envoy Sidecar 的启动依赖问题","type":"post","url":"/post/2020-09-05-istio-sidecar-dependency/","weight":0,"wordcount":3803},{"author":null,"categories":["Tech"],"content":"作为开源 Service Mesh 明星项目 Istio 背后的主要厂商，Google 也在其公有云上推出了 Service Mesh 管理服务。让人迷惑的是 Google Cloud 上有两个 Service Mesh 产品：Traffic Director 与 Anthos Service Mesh。Google 同时推出两个 Servcie Mesh 产品的原因是什么？这两个产品的定位有何不同？","date":1597276800,"description":"作为开源 Service Mesh 明星项目 Istio 背后的主要厂商，Google 也在其公有云上推出了 Service Mesh 管理服务。让人迷惑的是 Google Cloud 上有两个 Service Mesh 产品：Traffic Director 与 Anthos Service Mesh。Google 同时推出两个 Servcie Mesh 产品的原因是什么？这两个产品的定位有何不同？","dir":"post\\","excerpt_html":"作为开源 Service Mesh 明星项目 Istio 背后的主要厂商，Google 也在其公有云上推出了 Service Mesh 管理服务。让人迷惑的是 Google Cloud 上有两个 Service Mesh 产品：Traffic Director 与 Anthos Service Mesh。Google 同时推出两个 Servcie Mesh 产品的原因是什么？这两个产品的定位有何不同？","excerpt_text":"作为开源 Service Mesh 明星项目 Istio 背后的主要厂商，Google 也在其公有云上推出了 Service Mesh 管理服务。让人迷惑的是 Google Cloud 上有两个 Service Mesh 产品：Traffic Director 与 Anthos Service Mesh。Google 同时推出两个 Servcie Mesh 产品的原因是什么？这两个产品的定位有何不同？","expirydate":-62135596800,"fuzzywordcount":6300,"html":"作为开源 Service Mesh 明星项目 Istio 背后的主要厂商，Google 也在其公有云上推出了 Service Mesh 管理服务。让人迷惑的是 Google Cloud 上有两个 Service Mesh 产品：Traffic Director 与 Anthos Service Mesh。Google 同时推出两个 Servcie Mesh 产品的原因是什么？这两个产品的定位有何不同？","keywords":null,"kind":"page","lang":"en","lastmod":1597276800,"objectID":"debb621401b017206940d05f73b74036","permalink":"http://localhost:1313/post/2020-08-13-gcloud-service-mesh/","publishdate":"2020-08-13T00:00:00Z","readingtime":13,"relpermalink":"/post/2020-08-13-gcloud-service-mesh/","section":"post","summary":"作为开源 Service Mesh 明星项目 Istio 背后的主要厂商，Google 也在其公有云上推出了 Service Mesh 管理服务。让人迷惑的是 Google Cloud 上有两个 Service Mesh 产品：Traffic Director 与 Anthos Service","tags":["Istio","Traffic Director","Anthos Mesh","Google Cloud"],"title":"Google Cloud 服务网格：Traffic Director 与 Anthos Service Mesh 的左右互搏","type":"post","url":"/post/2020-08-13-gcloud-service-mesh/","weight":0,"wordcount":6299},{"author":null,"categories":["Tech"],"content":"How can we quickly integrate these existing microservices projects with Istio at minimal modifications? In this post, I will first explain the service registry mechanism of Istio, and then propose several possible options to integrate third-party service discovery with Istio.","date":1591920000,"description":"How can we quickly integrate these existing microservices projects with Istio at minimal modifications? In this post, I will first explain the service registry mechanism of Istio, and then propose several possible options to integrate third-party service discovery with Istio.","dir":"post\\","excerpt_html":"How can we quickly integrate these existing microservices projects with Istio at minimal modifications? In this post, I will first explain the service registry mechanism of Istio, and then propose several possible options to integrate third-party service discovery with Istio.","excerpt_text":"How can we quickly integrate these existing microservices projects with Istio at minimal modifications? In this post, I will first explain the service registry mechanism of Istio, and then propose several possible options to integrate third-party service discovery with Istio.","expirydate":-62135596800,"fuzzywordcount":1300,"html":"How can we quickly integrate these existing microservices projects with Istio at minimal modifications? In this post, I will first explain the service registry mechanism of Istio, and then propose several possible options to integrate third-party service discovery with Istio.","keywords":null,"kind":"page","lang":"en","lastmod":1591920000,"objectID":"815fa51512c1d939195b0d68eeba187b","permalink":"http://localhost:1313/post/2020-06-12-third-party-registry-english/","publishdate":"2020-06-12T00:00:00Z","readingtime":3,"relpermalink":"/post/2020-06-12-third-party-registry-english/","section":"post","summary":"Microservice is a powerful software architecture to escalate innovations, and many businesses have been adopting microservice for a long time. However, the transition from monolith to microservice comes with costs. Fundamentally, microservices are distributed systems, often in large scales, which bring the burden of networking such as service discovery, retry, circuit breaker, as well as the observability such as metrics, logging, and distributed tracing. Istio helps microservices to offloads these","tags":["Istio"],"title":"How to Integrate Your Service Registry with Istio?","type":"post","url":"/post/2020-06-12-third-party-registry-english/","weight":0,"wordcount":1228},{"author":null,"categories":["Tech"],"content":"目前越来越多的微服务项目开始考虑将自己的微服务基础设施向 Istio 进行迁移。然而对于大量使用了 Consul，Eureka 或者自建服务注册中心的项目来说，如何能够以最小的代价快速地将现有微服务项目和 Istio 进行集成，以享受 Istio 提供的各种服务治理能力呢？本文将分析 Istio 服务注册机制的原理，并提出几种 Istio 与第三方服务注册中心集成的可行方案，以供读者参考。","date":1591056000,"description":"目前越来越多的微服务项目开始考虑将自己的微服务基础设施向 Istio 进行迁移。然而对于大量使用了 Consul，Eureka 或者自建服务注册中心的项目来说，如何能够以最小的代价快速地将现有微服务项目和 Istio 进行集成，以享受 Istio 提供的各种服务治理能力呢？本文将分析 Istio 服务注册机制的原理，并提出几种 Istio 与第三方服务注册中心集成的可行方案，以供读者参考。","dir":"post\\","excerpt_html":"目前越来越多的微服务项目开始考虑将自己的微服务基础设施向 Istio 进行迁移。然而对于大量使用了 Consul，Eureka 或者自建服务注册中心的项目来说，如何能够以最小的代价快速地将现有微服务项目和 Istio 进行集成，以享受 Istio 提供的各种服务治理能力呢？本文将分析 Istio 服务注册机制的原理，并提出几种 Istio 与第三方服务注册中心集成的可行方案，以供读者参考。","excerpt_text":"目前越来越多的微服务项目开始考虑将自己的微服务基础设施向 Istio 进行迁移。然而对于大量使用了 Consul，Eureka 或者自建服务注册中心的项目来说，如何能够以最小的代价快速地将现有微服务项目和 Istio 进行集成，以享受 Istio 提供的各种服务治理能力呢？本文将分析 Istio 服务注册机制的原理，并提出几种 Istio 与第三方服务注册中心集成的可行方案，以供读者参考。","expirydate":-62135596800,"fuzzywordcount":3400,"html":"目前越来越多的微服务项目开始考虑将自己的微服务基础设施向 Istio 进行迁移。然而对于大量使用了 Consul，Eureka 或者自建服务注册中心的项目来说，如何能够以最小的代价快速地将现有微服务项目和 Istio 进行集成，以享受 Istio 提供的各种服务治理能力呢？本文将分析 Istio 服务注册机制的原理，并提出几种 Istio 与第三方服务注册中心集成的可行方案，以供读者参考。","keywords":null,"kind":"page","lang":"en","lastmod":1591056000,"objectID":"b2ba4693fc1527f8a5036147230bd3a2","permalink":"http://localhost:1313/post/2020-06-02-third-party-registry/","publishdate":"2020-06-02T00:00:00Z","readingtime":7,"relpermalink":"/post/2020-06-02-third-party-registry/","section":"post","summary":"作为云原生服务网格领域的热门开源项目，Istio 可以为微服务提供无侵入的流量管理、安全通信、服务可见性等服务治理能力。目前越来越多的微服务项","tags":["Istio"],"title":"如何将第三方服务中心注册集成到 Istio ？","type":"post","url":"/post/2020-06-02-third-party-registry/","weight":0,"wordcount":3320},{"author":null,"categories":["Tech"],"content":"Istio 为微服务提供了无侵入，可插拔的安全框架。应用不需要修改代码，就可以利用 Istio 提供的双向 TLS 认证实现服务身份认证，并基于服务身份信息提供细粒度的访问控制。本文将揭秘 Istio 双向 TLS 认证的实现机制。","date":1590364800,"description":"Istio 为微服务提供了无侵入，可插拔的安全框架。应用不需要修改代码，就可以利用 Istio 提供的双向 TLS 认证实现服务身份认证，并基于服务身份信息提供细粒度的访问控制。本文将揭秘 Istio 双向 TLS 认证的实现机制。","dir":"post\\","excerpt_html":"Istio 为微服务提供了无侵入，可插拔的安全框架。应用不需要修改代码，就可以利用 Istio 提供的双向 TLS 认证实现服务身份认证，并基于服务身份信息提供细粒度的访问控制。本文将揭秘 Istio 双向 TLS 认证的实现机制。","excerpt_text":"Istio 为微服务提供了无侵入，可插拔的安全框架。应用不需要修改代码，就可以利用 Istio 提供的双向 TLS 认证实现服务身份认证，并基于服务身份信息提供细粒度的访问控制。本文将揭秘 Istio 双向 TLS 认证的实现机制。","expirydate":-62135596800,"fuzzywordcount":5700,"html":"Istio 为微服务提供了无侵入，可插拔的安全框架。应用不需要修改代码，就可以利用 Istio 提供的双向 TLS 认证实现服务身份认证，并基于服务身份信息提供细粒度的访问控制。本文将揭秘 Istio 双向 TLS 认证的实现机制。","keywords":null,"kind":"page","lang":"en","lastmod":1590364800,"objectID":"fd3efc9857d4a897fc7cb907e9d58e69","permalink":"http://localhost:1313/post/2020-05-25-istio-certificate/","publishdate":"2020-05-25T00:00:00Z","readingtime":12,"relpermalink":"/post/2020-05-25-istio-certificate/","section":"post","summary":"在上一篇文章一文带你彻底厘清 Kubernetes 中的证书工作机制中，我们介绍了 Kubernetes 中证书的工作机制。在这篇文章中，我们继续探讨 Istio 是如何使用证书来实现网格中服务的","tags":["Istio"],"title":"一文带你彻底厘清 Isito 中的证书工作机制","type":"post","url":"/post/2020-05-25-istio-certificate/","weight":0,"wordcount":5647},{"author":null,"categories":["Tech"],"content":"在本文中，我将试图以一种比官方文档更容易理解的方式来说明 Kubernete s中和证书（Certificate）相关的工作机制，如果你也存在这方面的疑惑，希望这篇文章对你有所帮助。","date":1589846400,"description":"在本文中，我将试图以一种比官方文档更容易理解的方式来说明 Kubernete s中和证书（Certificate）相关的工作机制，如果你也存在这方面的疑惑，希望这篇文章对你有所帮助。","dir":"post\\","excerpt_html":"在本文中，我将试图以一种比官方文档更容易理解的方式来说明 Kubernete s中和证书（Certificate）相关的工作机制，如果你也存在这方面的疑惑，希望这篇文章对你有所帮助。","excerpt_text":"在本文中，我将试图以一种比官方文档更容易理解的方式来说明 Kubernete s中和证书（Certificate）相关的工作机制，如果你也存在这方面的疑惑，希望这篇文章对你有所帮助。","expirydate":-62135596800,"fuzzywordcount":5100,"html":"在本文中，我将试图以一种比官方文档更容易理解的方式来说明 Kubernete s中和证书（Certificate）相关的工作机制，如果你也存在这方面的疑惑，希望这篇文章对你有所帮助。","keywords":null,"kind":"page","lang":"en","lastmod":1589846400,"objectID":"5776ceee72021ebc8ddeefc5cd717939","permalink":"http://localhost:1313/post/2020-05-19-k8s-certificate/","publishdate":"2020-05-19T00:00:00Z","readingtime":11,"relpermalink":"/post/2020-05-19-k8s-certificate/","section":"post","summary":"接触 Kubernetes 以来，我经常看到 Kubernetes 在不同的地方使用了证书（Certificate），在 Kubernetes 安装和组件启动参数中也需要配置大量证书相关的参数。但是 Kubernetes 的文档","tags":["kubernetes","security"],"title":"一文带你彻底厘清 Kubernetes 中的证书工作机制","type":"post","url":"/post/2020-05-19-k8s-certificate/","weight":0,"wordcount":5084},{"author":null,"categories":["Tech"],"content":"数字证书相关的技术与原理。","date":1584576000,"description":"数字证书相关的技术与原理。","dir":"post\\","excerpt_html":"数字证书相关的技术与原理。","excerpt_text":"数字证书相关的技术与原理。","expirydate":-62135596800,"fuzzywordcount":8700,"html":"数字证书相关的技术与原理。","keywords":null,"kind":"page","lang":"en","lastmod":1584576000,"objectID":"472912be0e6265049e0ad998c7d3b903","permalink":"http://localhost:1313/post/2020-03-19-pki/","publishdate":"2020-03-19T00:00:00Z","readingtime":18,"relpermalink":"/post/2020-03-19-pki/","section":"post","summary":"非对称加密 在传统的加密算法中，通信的双方会采用一个共享秘钥来对数据进行加密和解密。消息发送方先采用秘钥对明文进行加密然后再进行传送，待接收方","tags":["cryptocurrency"],"title":"数字证书原理","type":"post","url":"/post/2020-03-19-pki/","weight":0,"wordcount":8696},{"author":null,"categories":["Tech"],"content":"介绍Linux的network namespace, veth，bridge与路由。","date":1583971200,"description":"介绍Linux的network namespace, veth，bridge与路由。","dir":"post\\","excerpt_html":"介绍Linux的network namespace, veth，bridge与路由。","excerpt_text":"介绍Linux的network namespace, veth，bridge与路由。","expirydate":-62135596800,"fuzzywordcount":6400,"html":"介绍Linux的network namespace, veth，bridge与路由。","keywords":null,"kind":"page","lang":"en","lastmod":1583971200,"objectID":"954b8ba99b4a7f3740da2c903f481430","permalink":"http://localhost:1313/post/2020-03-12-linux-network-virtualization/","publishdate":"2020-03-12T00:00:00Z","readingtime":13,"relpermalink":"/post/2020-03-12-linux-network-virtualization/","section":"post","summary":"Network Namespace A namespace wraps a global system resource in an abstraction that makes it appear to the processes within the namespace that they have their own isolated instance of the global resource. Changes to the global resource are visible to other processes that are members of the namespace, but are invisible to other processes. One use of namespaces is to implement containers. (摘录自Lin","tags":["Network","Linux"],"title":"Linux network namespace， veth， birdge与路由","type":"post","url":"/post/2020-03-12-linux-network-virtualization/","weight":0,"wordcount":6320},{"author":null,"categories":["Tech"],"content":"在计算机网络中，TUN与TAP是操作系统内核中的虚拟网络设备。不同于普通靠硬件网路板卡实现的设备，这些虚拟的网络设备全部用软件实现，并向运行于操作系统上的软件提供与硬件的网络设备完全相同的功能。","date":1582502400,"description":"在计算机网络中，TUN与TAP是操作系统内核中的虚拟网络设备。不同于普通靠硬件网路板卡实现的设备，这些虚拟的网络设备全部用软件实现，并向运行于操作系统上的软件提供与硬件的网络设备完全相同的功能。","dir":"post\\","excerpt_html":"在计算机网络中，TUN与TAP是操作系统内核中的虚拟网络设备。不同于普通靠硬件网路板卡实现的设备，这些虚拟的网络设备全部用软件实现，并向运行于操作系统上的软件提供与硬件的网络设备完全相同的功能。","excerpt_text":"在计算机网络中，TUN与TAP是操作系统内核中的虚拟网络设备。不同于普通靠硬件网路板卡实现的设备，这些虚拟的网络设备全部用软件实现，并向运行于操作系统上的软件提供与硬件的网络设备完全相同的功能。","expirydate":-62135596800,"fuzzywordcount":2700,"html":"在计算机网络中，TUN与TAP是操作系统内核中的虚拟网络设备。不同于普通靠硬件网路板卡实现的设备，这些虚拟的网络设备全部用软件实现，并向运行于操作系统上的软件提供与硬件的网络设备完全相同的功能。","keywords":null,"kind":"page","lang":"en","lastmod":1582502400,"objectID":"edbb587c6fedeef2c72924f3c3b80178","permalink":"http://localhost:1313/post/2020-02-24-linux-taptun/","publishdate":"2020-02-24T00:00:00Z","readingtime":6,"relpermalink":"/post/2020-02-24-linux-taptun/","section":"post","summary":"什么是Tun/Tap 在计算机网络中，TUN与TAP是操作系统内核中的虚拟网络设备。不同于普通靠硬件网路板卡实现的设备，这些虚拟的网络设备全部","tags":["Linux","Tun/Tap"],"title":"Linux Tun/Tap 介绍","type":"post","url":"/post/2020-02-24-linux-taptun/","weight":0,"wordcount":2633},{"author":null,"categories":["Tech"],"content":"Kubernetes 相关知识汇总","date":1582329600,"description":"Kubernetes 相关知识汇总","dir":"post\\","excerpt_html":"Kubernetes 相关知识汇总","excerpt_text":"Kubernetes 相关知识汇总","expirydate":-62135596800,"fuzzywordcount":1900,"html":"Kubernetes 相关知识汇总","keywords":null,"kind":"page","lang":"en","lastmod":1582329600,"objectID":"8f82e61d42852d95de4a3296110ad423","permalink":"http://localhost:1313/post/2020-02-22-k8s-mindmap/","publishdate":"2020-02-22T00:00:00Z","readingtime":4,"relpermalink":"/post/2020-02-22-k8s-mindmap/","section":"post","summary":"Mind Map Kubernetes 基本理念 自动化部署，缩扩容和管理容器应用 预期状态管理(Desired State Management) Kubernetes API 对象（声明预期状态） Kubernetes Control Plane（确保集群当前状态匹配预","tags":["Kubernetes","Knowledge Graph"],"title":"Kubernetes 知识图谱","type":"post","url":"/post/2020-02-22-k8s-mindmap/","weight":0,"wordcount":1848},{"author":null,"categories":["Tech"],"content":"When hearing about Network Service Mesh for the first time, you probably are as curious as I was:  Does it have anything to do with Service Mesh/Istio? In my opinion, Network Service Mesh could be a turn point for NFV. I'll dive into more details in this post.","date":1582243200,"description":"When hearing about Network Service Mesh for the first time, you probably are as curious as I was:  Does it have anything to do with Service Mesh/Istio? In my opinion, Network Service Mesh could be a turn point for NFV. I'll dive into more details in this post.","dir":"post\\","excerpt_html":"When hearing about Network Service Mesh for the first time, you probably are as curious as I was:  Does it have anything to do with Service Mesh/Istio? In my opinion, Network Service Mesh could be a turn point for NFV. I'll dive into more details in this post.","excerpt_text":"When hearing about Network Service Mesh for the first time, you probably are as curious as I was:  Does it have anything to do with Service Mesh/Istio? In my opinion, Network Service Mesh could be a turn point for NFV. I'll dive into more details in this post.","expirydate":-62135596800,"fuzzywordcount":2500,"html":"When hearing about Network Service Mesh for the first time, you probably are as curious as I was:  Does it have anything to do with Service Mesh/Istio? In my opinion, Network Service Mesh could be a turn point for NFV. I'll dive into more details in this post.","keywords":null,"kind":"page","lang":"en","lastmod":1582243200,"objectID":"d631f41dd357e263010dfdb3a328567f","permalink":"http://localhost:1313/post/2020-02-21-network-service-mesh-english/","publishdate":"2020-02-21T00:00:00Z","readingtime":12,"relpermalink":"/post/2020-02-21-network-service-mesh-english/","section":"post","summary":"When hearing about the term “Network Service Mesh” for the first time, you probably are as curious as I was: What exactly is it behind this fancy name? Does it have anything to do with Service Mesh/Istio? It turns out that Network Service Mesh is a sandbox project in the CNCF (Cloud Native Foundation), and it’s also a new hotspot in the cloud-native area. In this post, I’ll dive into the architecture and technical details of Network Service Mesh, and also explore the relationship between it and some other similar technologies you might get confused with, including Service Mesh, SDN, and NFV.","tags":["Network Service Mesh","Service Mesh","Istio","SDN","NFV"],"title":"Network Service Mesh: A Big Step Toward Cloud-Native NFV","type":"post","url":"/post/2020-02-21-network-service-mesh-english/","weight":0,"wordcount":2474},{"author":null,"categories":["Tech"],"content":"当第一次看到Network Service Mesh这一名词时，你很可能和我一样好奇它到底是什么？是否和Service Mesh有什么关系？Network Service Mesh是云原生领域中一个新的热点，是CNCF（云原生基金会）中的一个沙箱项目。本文将介绍Network Service Mesh的起源和架构，并探讨其与Service Mesh、SDN、NFV等相关技术的区别与联系。","date":1581724800,"description":"当第一次看到Network Service Mesh这一名词时，你很可能和我一样好奇它到底是什么？是否和Service Mesh有什么关系？Network Service Mesh是云原生领域中一个新的热点，是CNCF（云原生基金会）中的一个沙箱项目。本文将介绍Network Service Mesh的起源和架构，并探讨其与Service Mesh、SDN、NFV等相关技术的区别与联系。","dir":"post\\","excerpt_html":"当第一次看到Network Service Mesh这一名词时，你很可能和我一样好奇它到底是什么？是否和Service Mesh有什么关系？Network Service Mesh是云原生领域中一个新的热点，是CNCF（云原生基金会）中的一个沙箱项目。本文将介绍Network Service Mesh的起源和架构，并探讨其与Service Mesh、SDN、NFV等相关技术的区别与联系。","excerpt_text":"当第一次看到Network Service Mesh这一名词时，你很可能和我一样好奇它到底是什么？是否和Service Mesh有什么关系？Network Service Mesh是云原生领域中一个新的热点，是CNCF（云原生基金会）中的一个沙箱项目。本文将介绍Network Service Mesh的起源和架构，并探讨其与Service Mesh、SDN、NFV等相关技术的区别与联系。","expirydate":-62135596800,"fuzzywordcount":6400,"html":"当第一次看到Network Service Mesh这一名词时，你很可能和我一样好奇它到底是什么？是否和Service Mesh有什么关系？Network Service Mesh是云原生领域中一个新的热点，是CNCF（云原生基金会）中的一个沙箱项目。本文将介绍Network Service Mesh的起源和架构，并探讨其与Service Mesh、SDN、NFV等相关技术的区别与联系。","keywords":null,"kind":"page","lang":"en","lastmod":1581724800,"objectID":"21abc6ab782c36bf5ec6aa8fcd4db303","permalink":"http://localhost:1313/post/2020-02-15-network-service-mesh/","publishdate":"2020-02-15T00:00:00Z","readingtime":13,"relpermalink":"/post/2020-02-15-network-service-mesh/","section":"post","summary":"前言 当第一次看到Network Service Mesh这一名词时，你很可能和我一样好奇它到底是什么？是否和Service Mesh有什么关系？Network","tags":["Network Service Mesh","Service Mesh","Istio","SDN","NFV"],"title":"NFV迈向云原生时代：Network Service Mesh项目介绍","type":"post","url":"/post/2020-02-15-network-service-mesh/","weight":0,"wordcount":6365},{"author":null,"categories":["Tech"],"content":" Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的可靠通信。Istio体系中流量管理配置下发以及流量规则如何在数据面生效的机制相对比较复杂，通过官方文档容易管中窥豹，难以了解其实现原理。本文尝试结合系统架构、配置文件和代码对Istio流量管理的架构和实现机制进行分析，以达到从整体上理解Pilot和Envoy的流量管理机制的目的。","date":1576108800,"description":" Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的可靠通信。Istio体系中流量管理配置下发以及流量规则如何在数据面生效的机制相对比较复杂，通过官方文档容易管中窥豹，难以了解其实现原理。本文尝试结合系统架构、配置文件和代码对Istio流量管理的架构和实现机制进行分析，以达到从整体上理解Pilot和Envoy的流量管理机制的目的。","dir":"post\\","excerpt_html":" Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的可靠通信。Istio体系中流量管理配置下发以及流量规则如何在数据面生效的机制相对比较复杂，通过官方文档容易管中窥豹，难以了解其实现原理。本文尝试结合系统架构、配置文件和代码对Istio流量管理的架构和实现机制进行分析，以达到从整体上理解Pilot和Envoy的流量管理机制的目的。","excerpt_text":" Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的可靠通信。Istio体系中流量管理配置下发以及流量规则如何在数据面生效的机制相对比较复杂，通过官方文档容易管中窥豹，难以了解其实现原理。本文尝试结合系统架构、配置文件和代码对Istio流量管理的架构和实现机制进行分析，以达到从整体上理解Pilot和Envoy的流量管理机制的目的。","expirydate":-62135596800,"fuzzywordcount":16600,"html":" Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的可靠通信。Istio体系中流量管理配置下发以及流量规则如何在数据面生效的机制相对比较复杂，通过官方文档容易管中窥豹，难以了解其实现原理。本文尝试结合系统架构、配置文件和代码对Istio流量管理的架构和实现机制进行分析，以达到从整体上理解Pilot和Envoy的流量管理机制的目的。","keywords":null,"kind":"page","lang":"en","lastmod":1576108800,"objectID":"d653b74b4b33a64801cdb292b6cad8dd","permalink":"http://localhost:1313/post/2018-09-25-istio-traffic-management-impl-intro/","publishdate":"2019-12-12T00:00:00Z","readingtime":34,"relpermalink":"/post/2018-09-25-istio-traffic-management-impl-intro/","section":"post","summary":"前言 Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的","tags":["Istio","Pilot","Envoy","Service Mesh"],"title":"Istio流量管理实现机制深度解析","type":"post","url":"/post/2018-09-25-istio-traffic-management-impl-intro/","weight":0,"wordcount":16578},{"author":null,"categories":["Tech"],"content":"VIP即Virtual IP Address，是实现HA（高可用）系统的一种方案，高可用的目的是通过技术手段避免因为系统出现故障而导致停止对外服务，一般实现方式是部署备用服务器，在主服务器出现故障时接管业务。 VIP用于向客户端提供一个固定的“虚拟”访问地址，以避免后端服务器发生切换时对客户端的影响。","date":1574812800,"description":"VIP即Virtual IP Address，是实现HA（高可用）系统的一种方案，高可用的目的是通过技术手段避免因为系统出现故障而导致停止对外服务，一般实现方式是部署备用服务器，在主服务器出现故障时接管业务。 VIP用于向客户端提供一个固定的“虚拟”访问地址，以避免后端服务器发生切换时对客户端的影响。","dir":"post\\","excerpt_html":"VIP即Virtual IP Address，是实现HA（高可用）系统的一种方案，高可用的目的是通过技术手段避免因为系统出现故障而导致停止对外服务，一般实现方式是部署备用服务器，在主服务器出现故障时接管业务。 VIP用于向客户端提供一个固定的“虚拟”访问地址，以避免后端服务器发生切换时对客户端的影响。","excerpt_text":"VIP即Virtual IP Address，是实现HA（高可用）系统的一种方案，高可用的目的是通过技术手段避免因为系统出现故障而导致停止对外服务，一般实现方式是部署备用服务器，在主服务器出现故障时接管业务。 VIP用于向客户端提供一个固定的“虚拟”访问地址，以避免后端服务器发生切换时对客户端的影响。","expirydate":-62135596800,"fuzzywordcount":1800,"html":"VIP即Virtual IP Address，是实现HA（高可用）系统的一种方案，高可用的目的是通过技术手段避免因为系统出现故障而导致停止对外服务，一般实现方式是部署备用服务器，在主服务器出现故障时接管业务。 VIP用于向客户端提供一个固定的“虚拟”访问地址，以避免后端服务器发生切换时对客户端的影响。","keywords":null,"kind":"page","lang":"en","lastmod":1574812800,"objectID":"b6ff2e89fb91ae5388077e8f9004ddc3","permalink":"http://localhost:1313/post/2019-11-27-vip/","publishdate":"2019-11-27T00:00:00Z","readingtime":4,"relpermalink":"/post/2019-11-27-vip/","section":"post","summary":"什么是VIP？ VIP即Virtual IP Address，是实现HA（高可用）系统的一种方案，高可用的目的是通过技术手段避免因为系统出现故障而导","tags":["HA"],"title":"VIP的实现原理","type":"post","url":"/post/2019-11-27-vip/","weight":0,"wordcount":1793},{"author":null,"categories":["Tech"],"content":"what is the relationship between Service Mesh and SDN — Is Service Mesh the next generation of SDN? What can Service Mesh learn from the experience of SDN? I’d like to share some of my own opinions in this article.","date":1574467200,"description":"what is the relationship between Service Mesh and SDN — Is Service Mesh the next generation of SDN? What can Service Mesh learn from the experience of SDN? I’d like to share some of my own opinions in this article.","dir":"post\\","excerpt_html":"what is the relationship between Service Mesh and SDN — Is Service Mesh the next generation of SDN? What can Service Mesh learn from the experience of SDN? I’d like to share some of my own opinions in this article.","excerpt_text":"what is the relationship between Service Mesh and SDN — Is Service Mesh the next generation of SDN? What can Service Mesh learn from the experience of SDN? I’d like to share some of my own opinions in this article.","expirydate":-62135596800,"fuzzywordcount":1800,"html":"what is the relationship between Service Mesh and SDN — Is Service Mesh the next generation of SDN? What can Service Mesh learn from the experience of SDN? I’d like to share some of my own opinions in this article.","keywords":null,"kind":"page","lang":"en","lastmod":1574467200,"objectID":"18e4e28f86d60404f3091111732756b4","permalink":"http://localhost:1313/post/2019-11-23-what-can-service-mesh-learn-from-sdn-english/","publishdate":"2019-11-23T00:00:00Z","readingtime":4,"relpermalink":"/post/2019-11-23-what-can-service-mesh-learn-from-sdn-english/","section":"post","summary":"Service Mesh is yet another emerging fancy tech word in the field of microservices recently. If you have a telecommunication or networking background, you may have already noticed that Service Mesh and SDN (Software Defined Network) look similar. Both of them use a software layer to manage and control the network infrastructure, and they also share the same architecture, which consists of a control plane and a data plane. So","tags":["Service Mesh","Istio","SDN"],"title":"What Can Service Mesh Learn from SDN?","type":"post","url":"/post/2019-11-23-what-can-service-mesh-learn-from-sdn-english/","weight":0,"wordcount":1768},{"author":null,"categories":["Tech"],"content":"在Istio服务网格中，每个Envoy占用的内存也许并不算多，但所有sidecar增加的内存累积起来则是一个不小的数字。在进行商用部署时，我们需要考虑如何优化并减少服务网格带来的额外内存消耗。","date":1573776000,"description":"在Istio服务网格中，每个Envoy占用的内存也许并不算多，但所有sidecar增加的内存累积起来则是一个不小的数字。在进行商用部署时，我们需要考虑如何优化并减少服务网格带来的额外内存消耗。","dir":"post\\","excerpt_html":"在Istio服务网格中，每个Envoy占用的内存也许并不算多，但所有sidecar增加的内存累积起来则是一个不小的数字。在进行商用部署时，我们需要考虑如何优化并减少服务网格带来的额外内存消耗。","excerpt_text":"在Istio服务网格中，每个Envoy占用的内存也许并不算多，但所有sidecar增加的内存累积起来则是一个不小的数字。在进行商用部署时，我们需要考虑如何优化并减少服务网格带来的额外内存消耗。","expirydate":-62135596800,"fuzzywordcount":2500,"html":"在Istio服务网格中，每个Envoy占用的内存也许并不算多，但所有sidecar增加的内存累积起来则是一个不小的数字。在进行商用部署时，我们需要考虑如何优化并减少服务网格带来的额外内存消耗。","keywords":null,"kind":"page","lang":"en","lastmod":1573776000,"objectID":"04a78eb4d6a72de1c00dc4dd954a0721","permalink":"http://localhost:1313/post/2019-11-15-envoy-memory-optimize/","publishdate":"2019-11-15T00:00:00Z","readingtime":5,"relpermalink":"/post/2019-11-15-envoy-memory-optimize/","section":"post","summary":"Envoy的内存占用 在Istio服务网格中，每个Envoy占用的内存也许并不算多，但所有sidecar增加的内存累积起来则是一个不小的数字。","tags":["Service Mesh","Istio","Envoy"],"title":"如何降低Istio服务网格中Envoy的内存开销","type":"post","url":"/post/2019-11-15-envoy-memory-optimize/","weight":0,"wordcount":2494},{"author":null,"categories":["Presentations","Tech"],"content":"Service Mesh和SDN(Software Defined Network) 的架构非常相似，这两者都采用了软件对网络进行管理和控制，也都包含控制面和数据面的概念。那么Service Mesh和SDN有什么关系？Service Mesh是下一代的SDN吗？ Service Mesh可以从SDN的发展历史中借鉴哪些经验？本文将就这些问题进行一一探讨。","date":1572048000,"description":"Service Mesh和SDN(Software Defined Network) 的架构非常相似，这两者都采用了软件对网络进行管理和控制，也都包含控制面和数据面的概念。那么Service Mesh和SDN有什么关系？Service Mesh是下一代的SDN吗？ Service Mesh可以从SDN的发展历史中借鉴哪些经验？本文将就这些问题进行一一探讨。","dir":"post\\","excerpt_html":"Service Mesh和SDN(Software Defined Network) 的架构非常相似，这两者都采用了软件对网络进行管理和控制，也都包含控制面和数据面的概念。那么Service Mesh和SDN有什么关系？Service Mesh是下一代的SDN吗？ Service Mesh可以从SDN的发展历史中借鉴哪些经验？本文将就这些问题进行一一探讨。","excerpt_text":"Service Mesh和SDN(Software Defined Network) 的架构非常相似，这两者都采用了软件对网络进行管理和控制，也都包含控制面和数据面的概念。那么Service Mesh和SDN有什么关系？Service Mesh是下一代的SDN吗？ Service Mesh可以从SDN的发展历史中借鉴哪些经验？本文将就这些问题进行一一探讨。","expirydate":-62135596800,"fuzzywordcount":3900,"html":"Service Mesh和SDN(Software Defined Network) 的架构非常相似，这两者都采用了软件对网络进行管理和控制，也都包含控制面和数据面的概念。那么Service Mesh和SDN有什么关系？Service Mesh是下一代的SDN吗？ Service Mesh可以从SDN的发展历史中借鉴哪些经验？本文将就这些问题进行一一探讨。","keywords":null,"kind":"page","lang":"en","lastmod":1572048000,"objectID":"778481889eb961f1875d4fa7b1a33545","permalink":"http://localhost:1313/post/2019-10-26-what-can-service-mesh-learn-from-sdn/","publishdate":"2019-10-26T00:00:00Z","readingtime":8,"relpermalink":"/post/2019-10-26-what-can-service-mesh-learn-from-sdn/","section":"post","summary":"如果具有通信或者网络行业的知识背景，那么你对SDN(Software Defined Network)一定不会陌生。你也许已经注意到，近来在微服务领域兴起的","tags":["Service Mesh","Istio","SDN"],"title":"Service Mesher Meetup 成都站：Service Mesh是下一代SDN吗？","type":"post","url":"/post/2019-10-26-what-can-service-mesh-learn-from-sdn/","weight":0,"wordcount":3828},{"author":null,"categories":["Tech"],"content":"在Istio架构中，Pilot组件属于最核心的组件，负责了服务网格中的流量管理以及控制面和数据面之间的配置下发。Pilot内部的代码结构比较复杂，本文中我们将通过对Pilot的代码的深入分析来了解Pilot实现原理。","date":1571616000,"description":"在Istio架构中，Pilot组件属于最核心的组件，负责了服务网格中的流量管理以及控制面和数据面之间的配置下发。Pilot内部的代码结构比较复杂，本文中我们将通过对Pilot的代码的深入分析来了解Pilot实现原理。","dir":"post\\","excerpt_html":"在Istio架构中，Pilot组件属于最核心的组件，负责了服务网格中的流量管理以及控制面和数据面之间的配置下发。Pilot内部的代码结构比较复杂，本文中我们将通过对Pilot的代码的深入分析来了解Pilot实现原理。","excerpt_text":"在Istio架构中，Pilot组件属于最核心的组件，负责了服务网格中的流量管理以及控制面和数据面之间的配置下发。Pilot内部的代码结构比较复杂，本文中我们将通过对Pilot的代码的深入分析来了解Pilot实现原理。","expirydate":-62135596800,"fuzzywordcount":4900,"html":"在Istio架构中，Pilot组件属于最核心的组件，负责了服务网格中的流量管理以及控制面和数据面之间的配置下发。Pilot内部的代码结构比较复杂，本文中我们将通过对Pilot的代码的深入分析来了解Pilot实现原理。","keywords":null,"kind":"page","lang":"en","lastmod":1571616000,"objectID":"2f3aa25ae057ba0eea479af2b53b1079","permalink":"http://localhost:1313/post/2019-10-21-pilot-discovery-code-analysis/","publishdate":"2019-10-21T00:00:00Z","readingtime":10,"relpermalink":"/post/2019-10-21-pilot-discovery-code-analysis/","section":"post","summary":"Istio Pilot 组件介绍 在Istio架构中，Pilot组件属于最核心的组件，负责了服务网格中的流量管理以及控制面和数据面之间的配置下发。Pilot内部的","tags":["Service Mesh","Istio"],"title":"Istio Pilot代码深度解析","type":"post","url":"/post/2019-10-21-pilot-discovery-code-analysis/","weight":0,"wordcount":4859},{"author":null,"categories":null,"content":"阿姆斯特丹浮光掠影","date":1570492800,"description":"阿姆斯特丹浮光掠影","dir":"post\\","excerpt_html":"阿姆斯特丹浮光掠影","excerpt_text":"阿姆斯特丹浮光掠影","expirydate":-62135596800,"fuzzywordcount":100,"html":"阿姆斯特丹浮光掠影","keywords":null,"kind":"page","lang":"en","lastmod":1570492800,"objectID":"533609d24e8ca7d6479091475bdcfedc","permalink":"http://localhost:1313/post/2019-10-08-amsterdam/","publishdate":"2019-10-08T00:00:00Z","readingtime":1,"relpermalink":"/post/2019-10-08-amsterdam/","section":"post","summary":"Bike Bike1 Bike2 Boat in the dawn Canal Central station Delft blue House House1 House2 Old catholic church Rijks museum View from the clouds Windmill Windmill1 Windmill3 Windmill4 Wooden shoes","tags":["Travel"],"title":"阿姆斯特丹浮光掠影","type":"post","url":"/post/2019-10-08-amsterdam/","weight":0,"wordcount":30},{"author":null,"categories":["Tech"],"content":"In this post, we will continue to use the eshop demo to explore how asynchronous messaging, specifically Kafka, can be traced in Istio service mesh with the help of Opentracing.","date":1568160000,"description":"In this post, we will continue to use the eshop demo to explore how asynchronous messaging, specifically Kafka, can be traced in Istio service mesh with the help of Opentracing.","dir":"post\\","excerpt_html":"In this post, we will continue to use the eshop demo to explore how asynchronous messaging, specifically Kafka, can be traced in Istio service mesh with the help of Opentracing.","excerpt_text":"In this post, we will continue to use the eshop demo to explore how asynchronous messaging, specifically Kafka, can be traced in Istio service mesh with the help of Opentracing.","expirydate":-62135596800,"fuzzywordcount":1700,"html":"In this post, we will continue to use the eshop demo to explore how asynchronous messaging, specifically Kafka, can be traced in Istio service mesh with the help of Opentracing.","keywords":null,"kind":"page","lang":"en","lastmod":1568160000,"objectID":"3ea9f365bbfc6f77ee71c152d353fb0c","permalink":"http://localhost:1313/post/2019-07-02-using-opentracing-with-istio-english/","publishdate":"2019-09-11T00:00:00Z","readingtime":4,"relpermalink":"/post/2019-07-02-using-opentracing-with-istio-english/","section":"post","summary":"In the previous post, we discussed how to use Opentracing to help Istio Service Mesh to propagate tracing context across process boundaries, and how to enrich Istio/Envoy generated traces with method-level spans to get more fine-grained insights to the services. For now, all that we have been talking is just about synchronous RPC (HTTP/REST), however, we can’t ignore the fact that asynchronous messaging is also widely","tags":["Service Mesh","Istio","Opentracing","Jaeger","Kafka"],"title":"Enhance Istio Distributed Tracing with OpenTracing","type":"post","url":"/post/2019-07-02-using-opentracing-with-istio-english/","weight":0,"wordcount":1625},{"author":null,"categories":["Tech"],"content":"","date":1566604800,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1566604800,"objectID":"99fd9925d222a450ecdb69e482464b8e","permalink":"http://localhost:1313/post/2019-06-22-using-opentracing-with-istio-english/","publishdate":"2019-08-24T00:00:00Z","readingtime":3,"relpermalink":"/post/2019-06-22-using-opentracing-with-istio-english/","section":"post","summary":"While evolving towards a microservices architecture, the biggest change is that the monolith application has been divided into multiple independent processes(or services), as a result, a method call between software modules now becomes a remote procedure call go through multiple services. A client request usually goes through a couple of or even a dozen of services in a complex microservices system, which makes it really hard to figure out w","tags":["Service Mesh","Istio","Opentracing","Jaeger"],"title":"Enhance Istio Distributed Tracing with OpenTracing","type":"post","url":"/post/2019-06-22-using-opentracing-with-istio-english/","weight":0,"wordcount":1481},{"author":null,"categories":["Tech"],"content":"本文将接着上一篇继续介绍如何利用OpenTracing来对Kafka异步消息进行跟踪，并将异步消息的跟踪信息加入Istio/Envoy生成的分布式调用跟踪链中进行统一呈现。","date":1562025600,"description":"本文将接着上一篇继续介绍如何利用OpenTracing来对Kafka异步消息进行跟踪，并将异步消息的跟踪信息加入Istio/Envoy生成的分布式调用跟踪链中进行统一呈现。","dir":"post\\","excerpt_html":"本文将接着上一篇继续介绍如何利用OpenTracing来对Kafka异步消息进行跟踪，并将异步消息的跟踪信息加入Istio/Envoy生成的分布式调用跟踪链中进行统一呈现。","excerpt_text":"本文将接着上一篇继续介绍如何利用OpenTracing来对Kafka异步消息进行跟踪，并将异步消息的跟踪信息加入Istio/Envoy生成的分布式调用跟踪链中进行统一呈现。","expirydate":-62135596800,"fuzzywordcount":3600,"html":"本文将接着上一篇继续介绍如何利用OpenTracing来对Kafka异步消息进行跟踪，并将异步消息的跟踪信息加入Istio/Envoy生成的分布式调用跟踪链中进行统一呈现。","keywords":null,"kind":"page","lang":"en","lastmod":1562025600,"objectID":"e28cfa8b9daa155539fe745b92560cdb","permalink":"http://localhost:1313/post/2019-07-02-using-opentracing-with-istio/","publishdate":"2019-07-02T00:00:00Z","readingtime":8,"relpermalink":"/post/2019-07-02-using-opentracing-with-istio/","section":"post","summary":"在上一篇文章中，我们通过一个网上商店的示例程序学习了如何使用Opentracing在Istio服务网格中传递分布式调用跟踪的上下文，以及如何","tags":["Service Mesh","Istio","Opentracing","Jaeger","Kafka"],"title":"洞若观火：使用OpenTracing增强Istio的调用链跟踪","type":"post","url":"/post/2019-07-02-using-opentracing-with-istio/","weight":0,"wordcount":3510},{"author":null,"categories":["Tech"],"content":"奇妙的 2019 KubeCon + ClondNativeCon + Open Source Summit 大会！在这里，我近距离接触了大神 Linus；见到了来自 ServiceMesher 社区的很多朋友；还遇到了搞 Kubernetes 的恩格斯后人!","date":1561420800,"description":"奇妙的 2019 KubeCon + ClondNativeCon + Open Source Summit 大会！在这里，我近距离接触了大神 Linus；见到了来自 ServiceMesher 社区的很多朋友；还遇到了搞 Kubernetes 的恩格斯后人!","dir":"post\\","excerpt_html":"奇妙的 2019 KubeCon + ClondNativeCon + Open Source Summit 大会！在这里，我近距离接触了大神 Linus；见到了来自 ServiceMesher 社区的很多朋友；还遇到了搞 Kubernetes 的恩格斯后人!","excerpt_text":"奇妙的 2019 KubeCon + ClondNativeCon + Open Source Summit 大会！在这里，我近距离接触了大神 Linus；见到了来自 ServiceMesher 社区的很多朋友；还遇到了搞 Kubernetes 的恩格斯后人!","expirydate":-62135596800,"fuzzywordcount":5400,"html":"奇妙的 2019 KubeCon + ClondNativeCon + Open Source Summit 大会！在这里，我近距离接触了大神 Linus；见到了来自 ServiceMesher 社区的很多朋友；还遇到了搞 Kubernetes 的恩格斯后人!","keywords":null,"kind":"page","lang":"en","lastmod":1561420800,"objectID":"6022756d031da3c459ba875cfaff8ed5","permalink":"http://localhost:1313/post/2019-06-25-kubecon-cncf-oss-2019/","publishdate":"2019-06-25T00:00:00Z","readingtime":11,"relpermalink":"/post/2019-06-25-kubecon-cncf-oss-2019/","section":"post","summary":"大会背景介绍 2019年6月24-26日，KubeCon + CloudNativeCon + Open Source Summit大会在上海世博中心举行。本次大会是由CNCF的LC3和Linux","tags":null,"title":"开源，社区与朋友们","type":"post","url":"/post/2019-06-25-kubecon-cncf-oss-2019/","weight":0,"wordcount":5349},{"author":null,"categories":["Tech"],"content":"本文将介绍如何利用OpenTracing来增强Istio/Envoy缺省的调用链跟踪实现：如何利用Opentracing来实现跨进程边界的分布式调用上下文传递；以及在Istio/Envoy生成的分布式调用跟踪基础上实现方法级的细粒度调用跟踪。","date":1561161600,"description":"本文将介绍如何利用OpenTracing来增强Istio/Envoy缺省的调用链跟踪实现：如何利用Opentracing来实现跨进程边界的分布式调用上下文传递；以及在Istio/Envoy生成的分布式调用跟踪基础上实现方法级的细粒度调用跟踪。","dir":"post\\","excerpt_html":"本文将介绍如何利用OpenTracing来增强Istio/Envoy缺省的调用链跟踪实现：如何利用Opentracing来实现跨进程边界的分布式调用上下文传递；以及在Istio/Envoy生成的分布式调用跟踪基础上实现方法级的细粒度调用跟踪。","excerpt_text":"本文将介绍如何利用OpenTracing来增强Istio/Envoy缺省的调用链跟踪实现：如何利用Opentracing来实现跨进程边界的分布式调用上下文传递；以及在Istio/Envoy生成的分布式调用跟踪基础上实现方法级的细粒度调用跟踪。","expirydate":-62135596800,"fuzzywordcount":6000,"html":"本文将介绍如何利用OpenTracing来增强Istio/Envoy缺省的调用链跟踪实现：如何利用Opentracing来实现跨进程边界的分布式调用上下文传递；以及在Istio/Envoy生成的分布式调用跟踪基础上实现方法级的细粒度调用跟踪。","keywords":null,"kind":"page","lang":"en","lastmod":1561161600,"objectID":"4cf91ee4b7eeecf10e1e957bc2c2059e","permalink":"http://localhost:1313/post/2019-06-22-using-opentracing-with-istio/","publishdate":"2019-06-22T00:00:00Z","readingtime":12,"relpermalink":"/post/2019-06-22-using-opentracing-with-istio/","section":"post","summary":"分布式调用跟踪和Opentracing规范 什么是分布式调用跟踪？ 相比传统的“巨石”应用，微服务的一个主要变化是将应用中的不同模块拆分为了独立","tags":["Service Mesh","Istio","Opentracing","Jaeger"],"title":"洞若观火：使用OpenTracing增强Istio的调用链跟踪","type":"post","url":"/post/2019-06-22-using-opentracing-with-istio/","weight":0,"wordcount":5965},{"author":null,"categories":["Tech"],"content":"By default, in a Kubernetes cluster with the Istio service mesh enabled, services can only be accessed inside the cluster. However, some of the services may need to be exposed to the external network as well. Kubernetes and Istio provide a variety of means to get external traffic into your cluster including NodePort, LoadBalancer, Kubernetes Ingress and Istio Gateway. With all these options, which one should be the right choice for your service mesh running in production?","date":1555372800,"description":"By default, in a Kubernetes cluster with the Istio service mesh enabled, services can only be accessed inside the cluster. However, some of the services may need to be exposed to the external network as well. Kubernetes and Istio provide a variety of means to get external traffic into your cluster including NodePort, LoadBalancer, Kubernetes Ingress and Istio Gateway. With all these options, which one should be the right choice for your service mesh running in production?","dir":"post\\","excerpt_html":"By default, in a Kubernetes cluster with the Istio service mesh enabled, services can only be accessed inside the cluster. However, some of the services may need to be exposed to the external network as well. Kubernetes and Istio provide a variety of means to get external traffic into your cluster including NodePort, LoadBalancer, Kubernetes Ingress and Istio Gateway. With all these options, which one should be the right choice for your service mesh running in production?","excerpt_text":"By default, in a Kubernetes cluster with the Istio service mesh enabled, services can only be accessed inside the cluster. However, some of the services may need to be exposed to the external network as well. Kubernetes and Istio provide a variety of means to get external traffic into your cluster including NodePort, LoadBalancer, Kubernetes Ingress and Istio Gateway. With all these options, which one should be the right choice for your service mesh running in production?","expirydate":-62135596800,"fuzzywordcount":3300,"html":"By default, in a Kubernetes cluster with the Istio service mesh enabled, services can only be accessed inside the cluster. However, some of the services may need to be exposed to the external network as well. Kubernetes and Istio provide a variety of means to get external traffic into your cluster including NodePort, LoadBalancer, Kubernetes Ingress and Istio Gateway. With all these options, which one should be the right choice for your service mesh running in production?","keywords":null,"kind":"page","lang":"en","lastmod":1555372800,"objectID":"fde021cf12ac327a11b70f17719ace46","permalink":"http://localhost:1313/post/2019-04-16-how-to-choose-ingress-for-service-mesh-english/","publishdate":"2019-04-16T00:00:00Z","readingtime":7,"relpermalink":"/post/2019-04-16-how-to-choose-ingress-for-service-mesh-english/","section":"post","summary":"By default, in a Kubernetes cluster with the Istio service mesh enabled, services can only be accessed inside the cluster. However, some of the services may need to be exposed to external networks as well. Kubernetes and Istio provide a variety of means to get external traffic into your cluster including NodePort, LoadBalancer, Kubernetes Ingress and Istio Gateway. With all these options, which one should be the right choice for","tags":["Service Mesh","Istio","Kubernetes","API Gateway","Ingress","NodePort","LoadBalancer"],"title":"Which One is the Right Choice for the Ingress Gateway of Your Service Mesh?","type":"post","url":"/post/2019-04-16-how-to-choose-ingress-for-service-mesh-english/","weight":0,"wordcount":3291},{"author":null,"categories":["Tech"],"content":"在启用了Istio服务网格的Kubernetes集群中，缺省情况下只能在集群内部访问网格中的服务，要如何才能从外部网络访问这些服务呢？ Kubernetes和Istio提供了NodePort，LoadBalancer，Kubernetes Ingress，Istio Gateway等多种外部流量入口的方式，面对这么多种方式，我们在产品部署中应该如何选择？","date":1553817600,"description":"在启用了Istio服务网格的Kubernetes集群中，缺省情况下只能在集群内部访问网格中的服务，要如何才能从外部网络访问这些服务呢？ Kubernetes和Istio提供了NodePort，LoadBalancer，Kubernetes Ingress，Istio Gateway等多种外部流量入口的方式，面对这么多种方式，我们在产品部署中应该如何选择？","dir":"post\\","excerpt_html":"在启用了Istio服务网格的Kubernetes集群中，缺省情况下只能在集群内部访问网格中的服务，要如何才能从外部网络访问这些服务呢？ Kubernetes和Istio提供了NodePort，LoadBalancer，Kubernetes Ingress，Istio Gateway等多种外部流量入口的方式，面对这么多种方式，我们在产品部署中应该如何选择？","excerpt_text":"在启用了Istio服务网格的Kubernetes集群中，缺省情况下只能在集群内部访问网格中的服务，要如何才能从外部网络访问这些服务呢？ Kubernetes和Istio提供了NodePort，LoadBalancer，Kubernetes Ingress，Istio Gateway等多种外部流量入口的方式，面对这么多种方式，我们在产品部署中应该如何选择？","expirydate":-62135596800,"fuzzywordcount":9100,"html":"在启用了Istio服务网格的Kubernetes集群中，缺省情况下只能在集群内部访问网格中的服务，要如何才能从外部网络访问这些服务呢？ Kubernetes和Istio提供了NodePort，LoadBalancer，Kubernetes Ingress，Istio Gateway等多种外部流量入口的方式，面对这么多种方式，我们在产品部署中应该如何选择？","keywords":null,"kind":"page","lang":"en","lastmod":1553817600,"objectID":"3939b6cca08931ec881b9a8f01c7f5fe","permalink":"http://localhost:1313/post/2019-03-29-how-to-choose-ingress-for-service-mesh/","publishdate":"2019-03-29T00:00:00Z","readingtime":19,"relpermalink":"/post/2019-03-29-how-to-choose-ingress-for-service-mesh/","section":"post","summary":"在启用了Istio服务网格的Kubernetes集群中，缺省情况下只能在集群内部访问网格中的服务，要如何才能从外部网络访问这些服务呢？ Kub","tags":["Service Mesh","Istio","Kubernetes","API Gateway","Ingress","NodePort","LoadBalancer"],"title":"如何为服务网格选择入口网关？","type":"post","url":"/post/2019-03-29-how-to-choose-ingress-for-service-mesh/","weight":0,"wordcount":9051},{"author":null,"categories":["Tech"],"content":"本文将从代码出发，对Pilot的服务注册插件机制进行分析。","date":1550448000,"description":"本文将从代码出发，对Pilot的服务注册插件机制进行分析。","dir":"post\\","excerpt_html":"本文将从代码出发，对Pilot的服务注册插件机制进行分析。","excerpt_text":"本文将从代码出发，对Pilot的服务注册插件机制进行分析。","expirydate":-62135596800,"fuzzywordcount":3900,"html":"本文将从代码出发，对Pilot的服务注册插件机制进行分析。","keywords":null,"kind":"page","lang":"en","lastmod":1550448000,"objectID":"a44d6e46ee6caed8dfe67e2b1df60908","permalink":"http://localhost:1313/post/2019-02-18-pilot-service-registry-code-analysis/","publishdate":"2019-02-18T00:00:00Z","readingtime":8,"relpermalink":"/post/2019-02-18-pilot-service-registry-code-analysis/","section":"post","summary":"Istio服务注册插件机制 在Istio架构中，Pilot组件负责维护网格中的标准服务模型，该标准服务模型独立于各种底层平台，Pilot通过适","tags":["Service Mesh","Istio"],"title":"Istio 服务注册插件机制代码解析","type":"post","url":"/post/2019-02-18-pilot-service-registry-code-analysis/","weight":0,"wordcount":3890},{"author":null,"categories":["Tech"],"content":"Git是程序员工作中使用频率非常高的工具，要提高日常的工作效率，就需要熟练掌握Git的使用方法。相对于传统的版本控制系统而言，Git更为强大和灵活，其各种命令和命令参数也非常多，如果不了解Git的内部原理，要把Git使用得顺手的话非常困难。本文将用一个具体的例子来帮助理解Git的内部存储原理,加深对Git的理解，从掌握各种Git命令，以在使用Git进行工作时得心应手。","date":1548028800,"description":"Git是程序员工作中使用频率非常高的工具，要提高日常的工作效率，就需要熟练掌握Git的使用方法。相对于传统的版本控制系统而言，Git更为强大和灵活，其各种命令和命令参数也非常多，如果不了解Git的内部原理，要把Git使用得顺手的话非常困难。本文将用一个具体的例子来帮助理解Git的内部存储原理,加深对Git的理解，从掌握各种Git命令，以在使用Git进行工作时得心应手。","dir":"post\\","excerpt_html":"Git是程序员工作中使用频率非常高的工具，要提高日常的工作效率，就需要熟练掌握Git的使用方法。相对于传统的版本控制系统而言，Git更为强大和灵活，其各种命令和命令参数也非常多，如果不了解Git的内部原理，要把Git使用得顺手的话非常困难。本文将用一个具体的例子来帮助理解Git的内部存储原理,加深对Git的理解，从掌握各种Git命令，以在使用Git进行工作时得心应手。","excerpt_text":"Git是程序员工作中使用频率非常高的工具，要提高日常的工作效率，就需要熟练掌握Git的使用方法。相对于传统的版本控制系统而言，Git更为强大和灵活，其各种命令和命令参数也非常多，如果不了解Git的内部原理，要把Git使用得顺手的话非常困难。本文将用一个具体的例子来帮助理解Git的内部存储原理,加深对Git的理解，从掌握各种Git命令，以在使用Git进行工作时得心应手。","expirydate":-62135596800,"fuzzywordcount":5700,"html":"Git是程序员工作中使用频率非常高的工具，要提高日常的工作效率，就需要熟练掌握Git的使用方法。相对于传统的版本控制系统而言，Git更为强大和灵活，其各种命令和命令参数也非常多，如果不了解Git的内部原理，要把Git使用得顺手的话非常困难。本文将用一个具体的例子来帮助理解Git的内部存储原理,加深对Git的理解，从掌握各种Git命令，以在使用Git进行工作时得心应手。","keywords":null,"kind":"page","lang":"en","lastmod":1548028800,"objectID":"8959c9b4a735f35dcdfe1db4582efd42","permalink":"http://localhost:1313/post/2019-01-21-git/","publishdate":"2019-01-21T00:00:00Z","readingtime":12,"relpermalink":"/post/2019-01-21-git/","section":"post","summary":"Git是程序员工作中使用频率非常高的工具，要提高日常的工作效率，就需要熟练掌握Git的使用方法。相对于传统的版本控制系统而言，Git更为强大","tags":["Git"],"title":"Git内部存储原理","type":"post","url":"/post/2019-01-21-git/","weight":0,"wordcount":5604},{"author":null,"categories":["Tech"],"content":"After its 1.0 release, our team has begun the efforts to integrate Istio into our system. This article tells our findings and thoughts during this adventure.","date":1545868800,"description":"After its 1.0 release, our team has begun the efforts to integrate Istio into our system. This article tells our findings and thoughts during this adventure.","dir":"post\\","excerpt_html":"After its 1.0 release, our team has begun the efforts to integrate Istio into our system. This article tells our findings and thoughts during this adventure.","excerpt_text":"After its 1.0 release, our team has begun the efforts to integrate Istio into our system. This article tells our findings and thoughts during this adventure.","expirydate":-62135596800,"fuzzywordcount":1700,"html":"After its 1.0 release, our team has begun the efforts to integrate Istio into our system. This article tells our findings and thoughts during this adventure.","keywords":null,"kind":"page","lang":"en","lastmod":1545868800,"objectID":"bf0eb88cf28292fa5643afcf3c9037d3","permalink":"http://localhost:1313/post/2018-12-27-the-obstacles-to-put-istio-into-production/","publishdate":"2018-12-27T00:00:00Z","readingtime":4,"relpermalink":"/post/2018-12-27-the-obstacles-to-put-istio-into-production/","section":"post","summary":"What is service mesh? Service mesh is becoming yet another fancy name in the cloud-native world this year. What exactly it is? By definition, service mesh is a dedicated infrastructure layer for handling service-to-service communication. It’s responsible for the reliable delivery of requests through the complex topology of services that comprise a modern, cloud-native application. Besides, it also facilitates the governance of services. What is Istio? Istio","tags":["Service Mesh","Istio","Consul","NFV"],"title":"The obstacles to put Istio into production and how we solve them","type":"post","url":"/post/2018-12-27-the-obstacles-to-put-istio-into-production/","weight":0,"wordcount":1656},{"author":null,"categories":["Tech"],"content":"","date":1545609600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1545609600,"objectID":"ac6932fd220ccff675ac279b5da7666a","permalink":"http://localhost:1313/post/2018-12-24-machine-learningp-introduction/","publishdate":"2018-12-24T00:00:00Z","readingtime":1,"relpermalink":"/post/2018-12-24-machine-learningp-introduction/","section":"post","summary":"What is machine learning? Two definitions of machine learning are offered. Arthur Samuel version: A field of study that gives computers the ability to learn without being explicitly programmed. Tom Mitchell version: A computer program is said to learn from experience E with respect to some task T and some performance measure P, if its performance on T, as measured by P, improves with experience E. Example: playing checkers. E","tags":["Machine Learning","Supervised learning"],"title":"Machine Learning Introduction","type":"post","url":"/post/2018-12-24-machine-learningp-introduction/","weight":0,"wordcount":336},{"author":null,"categories":["Tech"],"content":"Istio1.0版本只支持在单个网络，即Mesh中的服务只能连接在一个网络上。而在电信NFV场景中，多网络平面是一个常见的场景，随着Kubernetes在NFV领域中的逐渐应用，已经出现多个Kubernetes多网络平面解决方案，Istio也需要考虑支持多网络平面，以为5G的微服务化架构提供服务通讯和管控的基础设施。","date":1545177600,"description":"Istio1.0版本只支持在单个网络，即Mesh中的服务只能连接在一个网络上。而在电信NFV场景中，多网络平面是一个常见的场景，随着Kubernetes在NFV领域中的逐渐应用，已经出现多个Kubernetes多网络平面解决方案，Istio也需要考虑支持多网络平面，以为5G的微服务化架构提供服务通讯和管控的基础设施。","dir":"post\\","excerpt_html":"Istio1.0版本只支持在单个网络，即Mesh中的服务只能连接在一个网络上。而在电信NFV场景中，多网络平面是一个常见的场景，随着Kubernetes在NFV领域中的逐渐应用，已经出现多个Kubernetes多网络平面解决方案，Istio也需要考虑支持多网络平面，以为5G的微服务化架构提供服务通讯和管控的基础设施。","excerpt_text":"Istio1.0版本只支持在单个网络，即Mesh中的服务只能连接在一个网络上。而在电信NFV场景中，多网络平面是一个常见的场景，随着Kubernetes在NFV领域中的逐渐应用，已经出现多个Kubernetes多网络平面解决方案，Istio也需要考虑支持多网络平面，以为5G的微服务化架构提供服务通讯和管控的基础设施。","expirydate":-62135596800,"fuzzywordcount":2700,"html":"Istio1.0版本只支持在单个网络，即Mesh中的服务只能连接在一个网络上。而在电信NFV场景中，多网络平面是一个常见的场景，随着Kubernetes在NFV领域中的逐渐应用，已经出现多个Kubernetes多网络平面解决方案，Istio也需要考虑支持多网络平面，以为5G的微服务化架构提供服务通讯和管控的基础设施。","keywords":null,"kind":"page","lang":"en","lastmod":1545177600,"objectID":"26610dbd1e3e52be1022574f54e5281a","permalink":"http://localhost:1313/post/2018-12-19-multi-network-interfaces-for-istio/","publishdate":"2018-12-19T00:00:00Z","readingtime":6,"relpermalink":"/post/2018-12-19-multi-network-interfaces-for-istio/","section":"post","summary":"Istio 1.0版本只支持在单个网络，即Mesh中的服务只能连接在一个网络上。虽然在架构设计上是开放的，但从目前的代码来看，Istio的内部实现还是","tags":["Service Mesh","Istio","NFV","Kubernetes","Knitter"],"title":"拥抱NFV，Istio 1.1 将支持多网络平面","type":"post","url":"/post/2018-12-19-multi-network-interfaces-for-istio/","weight":0,"wordcount":2664},{"author":null,"categories":["Tech"],"content":"Istio由控制面和数据面组成。其中Envoy是Istio在数据面缺省使用的转发代理，Istio利用Envoy的四层和七层代理功能对网格中微服务之间的调用流量进行转发。今天我\u003e们来分析一下Istio 使用到的Envoy构建流程。","date":1540771200,"description":"Istio由控制面和数据面组成。其中Envoy是Istio在数据面缺省使用的转发代理，Istio利用Envoy的四层和七层代理功能对网格中微服务之间的调用流量进行转发。今天我\u003e们来分析一下Istio 使用到的Envoy构建流程。","dir":"post\\","excerpt_html":"Istio由控制面和数据面组成。其中Envoy是Istio在数据面缺省使用的转发代理，Istio利用Envoy的四层和七层代理功能对网格中微服务之间的调用流量进行转发。今天我\u003e们来分析一下Istio 使用到的Envoy构建流程。","excerpt_text":"Istio由控制面和数据面组成。其中Envoy是Istio在数据面缺省使用的转发代理，Istio利用Envoy的四层和七层代理功能对网格中微服务之间的调用流量进行转发。今天我\u003e们来分析一下Istio 使用到的Envoy构建流程。","expirydate":-62135596800,"fuzzywordcount":1900,"html":"Istio由控制面和数据面组成。其中Envoy是Istio在数据面缺省使用的转发代理，Istio利用Envoy的四层和七层代理功能对网格中微服务之间的调用流量进行转发。今天我\u003e们来分析一下Istio 使用到的Envoy构建流程。","keywords":null,"kind":"page","lang":"en","lastmod":1540771200,"objectID":"f8946503a7ed3c9d4addbd95b6056660","permalink":"http://localhost:1313/post/2018-10-29-envoy-build/","publishdate":"2018-10-29T00:00:00Z","readingtime":4,"relpermalink":"/post/2018-10-29-envoy-build/","section":"post","summary":"Istio由控制面和数据面组成。其中Envoy是Istio在数据面缺省使用的转发代理，Istio利用Envoy的四层和七层代理功能对网格中微","tags":["Istio","Envoy","Service Mesh"],"title":"Istio实战系列-Envoy Proxy构建分析","type":"post","url":"/post/2018-10-29-envoy-build/","weight":0,"wordcount":1840},{"author":null,"categories":["Tech"],"content":"Istio发布1.0版本后，其服务发现和路由规则功能已基本具备production能力，我们也开始了Istio和公司内部微服务平台的集成工作，打算以Istio为基础打造一个微服务管控中心，在这里把目前的进展和遇到的坑和大家分享一下。","date":1539820800,"description":"Istio发布1.0版本后，其服务发现和路由规则功能已基本具备production能力，我们也开始了Istio和公司内部微服务平台的集成工作，打算以Istio为基础打造一个微服务管控中心，在这里把目前的进展和遇到的坑和大家分享一下。","dir":"post\\","excerpt_html":"Istio发布1.0版本后，其服务发现和路由规则功能已基本具备production能力，我们也开始了Istio和公司内部微服务平台的集成工作，打算以Istio为基础打造一个微服务管控中心，在这里把目前的进展和遇到的坑和大家分享一下。","excerpt_text":"Istio发布1.0版本后，其服务发现和路由规则功能已基本具备production能力，我们也开始了Istio和公司内部微服务平台的集成工作，打算以Istio为基础打造一个微服务管控中心，在这里把目前的进展和遇到的坑和大家分享一下。","expirydate":-62135596800,"fuzzywordcount":3600,"html":"Istio发布1.0版本后，其服务发现和路由规则功能已基本具备production能力，我们也开始了Istio和公司内部微服务平台的集成工作，打算以Istio为基础打造一个微服务管控中心，在这里把目前的进展和遇到的坑和大家分享一下。","keywords":null,"kind":"page","lang":"en","lastmod":1539820800,"objectID":"ae8f4e756a0ef179fc8ec85ee3d770d7","permalink":"http://localhost:1313/post/2018-10-18-istio-paas-integration/","publishdate":"2018-10-18T00:00:00Z","readingtime":8,"relpermalink":"/post/2018-10-18-istio-paas-integration/","section":"post","summary":"前言 Istio发布1.0版本后，其服务发现和路由规则功能已基本具备production能力，我们也开始了Istio和公司内部微服务平台的集成","tags":["Istio","Pilot","Envoy","Mixer","PaaS","Service Mesh"],"title":"Istio微服务平台集成实践","type":"post","url":"/post/2018-10-18-istio-paas-integration/","weight":0,"wordcount":3558},{"author":null,"categories":["Tech"],"content":" Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的可靠通信。Istio体系中流量管理配置下发以及流量规则如何在数据面生效的机制相对比较复杂，通过官方文档容易管中窥豹，难以了解其实现原理。本文尝试结合系统架构、配置文件和代码对Istio流量管理的架构和实现机制进行分析，以达到从整体上理解Pilot和Envoy的流量管理机制的目的。","date":1537833600,"description":" Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的可靠通信。Istio体系中流量管理配置下发以及流量规则如何在数据面生效的机制相对比较复杂，通过官方文档容易管中窥豹，难以了解其实现原理。本文尝试结合系统架构、配置文件和代码对Istio流量管理的架构和实现机制进行分析，以达到从整体上理解Pilot和Envoy的流量管理机制的目的。","dir":"post\\","excerpt_html":" Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的可靠通信。Istio体系中流量管理配置下发以及流量规则如何在数据面生效的机制相对比较复杂，通过官方文档容易管中窥豹，难以了解其实现原理。本文尝试结合系统架构、配置文件和代码对Istio流量管理的架构和实现机制进行分析，以达到从整体上理解Pilot和Envoy的流量管理机制的目的。","excerpt_text":" Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的可靠通信。Istio体系中流量管理配置下发以及流量规则如何在数据面生效的机制相对比较复杂，通过官方文档容易管中窥豹，难以了解其实现原理。本文尝试结合系统架构、配置文件和代码对Istio流量管理的架构和实现机制进行分析，以达到从整体上理解Pilot和Envoy的流量管理机制的目的。","expirydate":-62135596800,"fuzzywordcount":14800,"html":" Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的可靠通信。Istio体系中流量管理配置下发以及流量规则如何在数据面生效的机制相对比较复杂，通过官方文档容易管中窥豹，难以了解其实现原理。本文尝试结合系统架构、配置文件和代码对Istio流量管理的架构和实现机制进行分析，以达到从整体上理解Pilot和Envoy的流量管理机制的目的。","keywords":null,"kind":"page","lang":"en","lastmod":1537833600,"objectID":"3af98feedc702c4280a25e8b1e67df5f","permalink":"http://localhost:1313/post/2018-09-25-istio-traffic-management-impl-intro/","publishdate":"2018-09-25T00:00:00Z","readingtime":30,"relpermalink":"/post/2018-09-25-istio-traffic-management-impl-intro/","section":"post","summary":"前言 Istio作为一个service mesh开源项目,其中最重要的功能就是对网格中微服务之间的流量进行管理,包括服务发现,请求路由和服务间的","tags":["Istio","Pilot","Envoy","Service Mesh"],"title":"Istio流量管理实现机制深度解析","type":"post","url":"/post/2018-09-25-istio-traffic-management-impl-intro/","weight":0,"wordcount":14779},{"author":null,"categories":null,"content":"","date":1535155200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1535155200,"objectID":"3d5a6302a57d40f77c7aeea835383e6e","permalink":"http://localhost:1313/post/2018-08-28-english-topic-smart-phone/","publishdate":"2018-08-25T00:00:00Z","readingtime":1,"relpermalink":"/post/2018-08-28-english-topic-smart-phone/","section":"post","summary":"Smart phones are significantly changing the way we live and work. I heavily depend on my Android phone in my daily life, I use it to schedule my meetings, receive emails, remind me important dates, learning English, etc. What‘s your opinions about smart phone? Are you addicted to your smart phone? Do you think it\u0026rsquo;s a great invention, or a devil tool of commercial? Let\u0026rsquo;s","tags":["English"],"title":"English Practice Topic: Smart Phone Addiction","type":"post","url":"/post/2018-08-28-english-topic-smart-phone/","weight":0,"wordcount":138},{"author":null,"categories":["Tech"],"content":"","date":1534291200,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1534291200,"objectID":"bff5937de550ab4acbb6580d2f2f14c3","permalink":"http://localhost:1313/post/2018-08-15-manage-onap-with-istio-auth-enabled/","publishdate":"2018-08-15T00:00:00Z","readingtime":6,"relpermalink":"/post/2018-08-15-manage-onap-with-istio-auth-enabled/","section":"post","summary":"In the previous post Manage ONAP Microservices with Istio Service Mesh, we went through the steps of how to install Istio and integrate it with ONAP platform, it’s super simple and has nearly no impact to the existing projects. Now let’s enable Istio auth to secure the inter-service communication inside ONAP, it will need a little bit more efforts, but it’","tags":["Istio","ONAP","Service Mesh"],"title":"Secure ONAP Microservices with Istio Mutual TLS Authentication and RBAC","type":"post","url":"/post/2018-08-15-manage-onap-with-istio-auth-enabled/","weight":0,"wordcount":2659},{"author":null,"categories":["Tech"],"content":"","date":1533081600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1533081600,"objectID":"af2387067ef954074b2c1ca5c274ddd0","permalink":"http://localhost:1313/post/2018-08-01-manage-onap-with-istio/","publishdate":"2018-08-01T00:00:00Z","readingtime":4,"relpermalink":"/post/2018-08-01-manage-onap-with-istio/","section":"post","summary":"In the previous post How service mesh can help during the ONAP Microservice journey, we have discussed why the community wants ONAP to evolve towards Microservice architecture and how service mesh approach could help during the journey. Now it’s time to dip our toe in the water, let’s try out Istio with ONAP by following the below steps. Installation First, download installation scripts","tags":["Istio","ONAP","Service Mesh"],"title":"Manage ONAP Microservices with Istio Service Mesh","type":"post","url":"/post/2018-08-01-manage-onap-with-istio/","weight":0,"wordcount":1510},{"author":null,"categories":["Tech"],"content":"","date":1529625600,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1529625600,"objectID":"eab84aa056d27d6386316b27ac9c29f9","permalink":"http://localhost:1313/post/2018-06-22-onap-with-service-mesh/","publishdate":"2018-06-22T00:00:00Z","readingtime":2,"relpermalink":"/post/2018-06-22-onap-with-service-mesh/","section":"post","summary":"ONAP Beijing is available now! ONAP, as part of LF Networking, now accounts for more than 65% of global subscriber participation through carriers creating a harmonized, de-facto open source platform. While it\u0026rsquo;s so exciting to see that more operators are deploying ONAP in their commercial network, ONAP community realizes that there are still somewhere we can improve to smooth the deployment process. For example, instead of deploying ONAP as a","tags":["Istio","ONAP","Service Mesh"],"title":"How service mesh can help during the ONAP Microservice journey","type":"post","url":"/post/2018-06-22-onap-with-service-mesh/","weight":0,"wordcount":654},{"author":null,"categories":["Tech"],"content":"介绍Istio v1alpha3 routing API及其设计原则","date":1528070400,"description":"介绍Istio v1alpha3 routing API及其设计原则","dir":"post\\","excerpt_html":"介绍Istio v1alpha3 routing API及其设计原则","excerpt_text":"介绍Istio v1alpha3 routing API及其设计原则","expirydate":-62135596800,"fuzzywordcount":5500,"html":"介绍Istio v1alpha3 routing API及其设计原则","keywords":null,"kind":"page","lang":"en","lastmod":1528070400,"objectID":"419548ad13183dac6d96760c9815824b","permalink":"http://localhost:1313/2018/06/04/introducing-the-istio-v1alpha3-routing-api/","publishdate":"2018-06-04T00:00:00Z","readingtime":11,"relpermalink":"/2018/06/04/introducing-the-istio-v1alpha3-routing-api/","section":"post","summary":"\u003cp\u003e到目前为止，Istio提供了一个简单的API来进行流量管理，该API包括了四种资源：RouteRule，DestinationPolicy，EgressRule和Ingress（直接使用了Kubernets的Ingress资源）。借助此API，用户可以轻松管理Istio服务网格中的流量。该API允许用户将请求路由到特定版本的服务，为弹性测试注入延迟和失败，添加超时和断路器等等，所有这些功能都不必更改应用程序本身的代码。\u003c/p\u003e","tags":["Istio"],"title":"Istio v1aplha3 routing API介绍(译文）","type":"post","url":"/2018/06/04/introducing-the-istio-v1alpha3-routing-api/","weight":0,"wordcount":5412},{"author":null,"categories":["Tech"],"content":"Bitcoin Script is using to transfer coins instead of just signature and public key address, which allows more flexibilities for Bitcoin transactions","date":1527984000,"description":"Bitcoin Script is using to transfer coins instead of just signature and public key address, which allows more flexibilities for Bitcoin transactions","dir":"post\\","excerpt_html":"Bitcoin Script is using to transfer coins instead of just signature and public key address, which allows more flexibilities for Bitcoin transactions","excerpt_text":"Bitcoin Script is using to transfer coins instead of just signature and public key address, which allows more flexibilities for Bitcoin transactions","expirydate":-62135596800,"fuzzywordcount":300,"html":"Bitcoin Script is using to transfer coins instead of just signature and public key address, which allows more flexibilities for Bitcoin transactions","keywords":null,"kind":"page","lang":"en","lastmod":1527984000,"objectID":"8146e7f05759b8d47bc03ad042393640","permalink":"http://localhost:1313/2018/06/03/cryptocurrency_week3_bitcoin_script/","publishdate":"2018-06-03T00:00:00Z","readingtime":1,"relpermalink":"/2018/06/03/cryptocurrency_week3_bitcoin_script/","section":"post","summary":"This series of articles are my notes of \u0026ldquo;Bitcoin and Cryptocurrency Technologies\u0026rdquo; online course. Bitcoin Script is using to transfer coins instead of just signature and public key address, which allows more flexibilities for Bitcoin transactions. A Standard Transaction Let\u0026rsquo;s say Alice wants to spend some coins she received from a previous transaction, this is how the procedure looks like. Alice receives some coins from a previous transaction. One of","tags":["Cryptocurrency","Blockchain","Bitcoin","Digital Signature"],"title":"Bitcoin Script","type":"post","url":"/2018/06/03/cryptocurrency_week3_bitcoin_script/","weight":0,"wordcount":290},{"author":null,"categories":["Tech"],"content":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","date":1527897600,"description":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","dir":"post\\","excerpt_html":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","excerpt_text":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","expirydate":-62135596800,"fuzzywordcount":1800,"html":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","keywords":null,"kind":"page","lang":"en","lastmod":1527897600,"objectID":"5419b65011b3dcb9020c0728e6d70695","permalink":"http://localhost:1313/2018/06/02/istio08/","publishdate":"2018-06-02T00:00:00Z","readingtime":4,"relpermalink":"/2018/06/02/istio08/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003e在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["Istio"],"title":"Istio 0.8 Release发布","type":"post","url":"/2018/06/02/istio08/","weight":0,"wordcount":1796},{"author":null,"categories":["Tech"],"content":"How the nodes in the bitcoin network reach consensus on the transactions?","date":1527379200,"description":"How the nodes in the bitcoin network reach consensus on the transactions?","dir":"post\\","excerpt_html":"How the nodes in the bitcoin network reach consensus on the transactions?","excerpt_text":"How the nodes in the bitcoin network reach consensus on the transactions?","expirydate":-62135596800,"fuzzywordcount":600,"html":"How the nodes in the bitcoin network reach consensus on the transactions?","keywords":null,"kind":"page","lang":"en","lastmod":1527379200,"objectID":"c13cc59b3b47595777ead6235a54b91a","permalink":"http://localhost:1313/2018/05/26/cryptocurrency_week2_distributed_consenus/","publishdate":"2018-05-27T00:00:00Z","readingtime":2,"relpermalink":"/2018/05/26/cryptocurrency_week2_distributed_consenus/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003eThis series of articles are my notes of \u0026ldquo;Bitcoin and Cryptocurrency Technologies\u0026rdquo; online course.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["Cryptocurrency","Blockchain","Bitcoin","Digital Signature"],"title":"Distributed Consensus","type":"post","url":"/2018/05/26/cryptocurrency_week2_distributed_consenus/","weight":0,"wordcount":507},{"author":null,"categories":["Tech"],"content":"How bitcoin system implements the mechanism to motivate the participants and how the participants prove their work?","date":1527292800,"description":"How bitcoin system implements the mechanism to motivate the participants and how the participants prove their work?","dir":"post\\","excerpt_html":"How bitcoin system implements the mechanism to motivate the participants and how the participants prove their work?","excerpt_text":"How bitcoin system implements the mechanism to motivate the participants and how the participants prove their work?","expirydate":-62135596800,"fuzzywordcount":500,"html":"How bitcoin system implements the mechanism to motivate the participants and how the participants prove their work?","keywords":null,"kind":"page","lang":"en","lastmod":1527292800,"objectID":"bc4d0398d222a54585952241a5f791a0","permalink":"http://localhost:1313/2018/05/26/cryptocurrency_week2_incentives_and_proof_of_work/","publishdate":"2018-05-26T00:00:00Z","readingtime":1,"relpermalink":"/2018/05/26/cryptocurrency_week2_incentives_and_proof_of_work/","section":"post","summary":"This series of articles are my notes of \u0026ldquo;Bitcoin and Cryptocurrency Technologies\u0026rdquo; online course. Incentive The mechanism to motivate nodes join the Bitcoin network and create blocks. Incentive 1: Block Reward Creator of block gets to include special coin-creation transaction in the block choose reciptient address of this transaction (Of course, it is the miner\u0026rsquo;s address) Explanation: Because the coin-creation transaction is just like other transaction in that block, it","tags":["Cryptocurrency","Blockchain","Bitcoin","Digital Signature"],"title":"Incentives and Proof of Work","type":"post","url":"/2018/05/26/cryptocurrency_week2_incentives_and_proof_of_work/","weight":0,"wordcount":492},{"author":null,"categories":["Tech"],"content":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","date":1527120000,"description":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","dir":"post\\","excerpt_html":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","excerpt_text":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","expirydate":-62135596800,"fuzzywordcount":200,"html":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","keywords":null,"kind":"page","lang":"en","lastmod":1527120000,"objectID":"acef740336515250f115284b46f1f096","permalink":"http://localhost:1313/2018/05/24/set_up_my_ubuntu_desktop/","publishdate":"2018-05-24T00:00:00Z","readingtime":1,"relpermalink":"/2018/05/24/set_up_my_ubuntu_desktop/","section":"post","summary":"Generate SSH Key Pair ssh-keygen -C \u0026#34;zhaohuabing@gmail.com\u0026#34; Shadowsocks Install shadowsokcs sudo apt-get install python3-pip sudo pip3 install shadowsocks Create config at config/shadowsocks.json, with the following content: { \u0026#34;server\u0026#34;:\u0026#34;remote-shadowsocks-server-ip-addr\u0026#34;, \u0026#34;server_port\u0026#34;:443, \u0026#34;local_address\u0026#34;:\u0026#34;127.0.0.1\u0026#34;, \u0026#34;local_port\u0026#34;:1080, \u0026#34;password\u0026#34;:\u0026#34;your-passwd\u0026#34;, \u0026#34;timeout\u0026#34;:300, \u0026#34;method\u0026#34;:\u0026#34;aes-256-cfb\u0026#34;, \u0026#34;fast_open\u0026#34;:false, \u0026#34;workers\u0026#34;:1 } Start a local socks proxy sudo sslocal -c config/shadowsocks.json -d start In case there is an openssl error, modify shadowsocks source file. sudo vi /usr/local/lib/python3.6/dist-packages/shadowsocks/crypto/openssl.py :%s/cleanup/reset/gc Convert shadowsocks socks proxy to http proxy","tags":["ubuntu"],"title":"Everything about Setting Up My Ubuntu Desktop","type":"post","url":"/2018/05/24/set_up_my_ubuntu_desktop/","weight":0,"wordcount":121},{"author":null,"categories":["Tech"],"content":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","date":1527098400,"description":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","dir":"post\\","excerpt_html":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","excerpt_text":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","expirydate":-62135596800,"fuzzywordcount":2400,"html":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","keywords":null,"kind":"page","lang":"en","lastmod":1527098400,"objectID":"bcf92db93ffdd43ba91e4322cf6c6ece","permalink":"http://localhost:1313/2018/05/23/external_system_auth/","publishdate":"2018-05-23T18:00:00Z","readingtime":5,"relpermalink":"/2018/05/23/external_system_auth/","section":"post","summary":"外部系统访问控制 除用户访问和微服务之间的相互访问外，外部的第三方系统也可能需要访问系统内部的微服务。例如在上一篇博客的网上商店例子中，外部的","tags":["Microservice","Security"],"title":"微服务安全沉思录之三","type":"post","url":"/2018/05/23/external_system_auth/","weight":0,"wordcount":2349},{"author":null,"categories":["Tech"],"content":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","date":1527087600,"description":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","dir":"post\\","excerpt_html":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","excerpt_text":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","expirydate":-62135596800,"fuzzywordcount":2000,"html":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","keywords":null,"kind":"page","lang":"en","lastmod":1527087600,"objectID":"d7d93ee7d2a2b13ec20c157389fd7a3a","permalink":"http://localhost:1313/2018/05/23/service_2_service_auth/","publishdate":"2018-05-23T15:00:00Z","readingtime":4,"relpermalink":"/2018/05/23/service_2_service_auth/","section":"post","summary":"\u003ch2 id=\"服务间认证与鉴权\"\u003e服务间认证与鉴权\u003c/h2\u003e\n\u003cp\u003e除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问，包括下述场景：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e用户间接触发的微服务之间的相互访问\u003cBR\u003e\n例如在一个网上商店应用中，用户访问购物车微服务进行结算时，购物车微服务可能需要访问用户评级微服务获取用户的会员级别，以得到用户可以享受购物折扣。\u003c/li\u003e\n\u003cli\u003e非用户触发的微服务之间的相互访问\u003cBR\u003e\n例如数据同步或者后台定时任务导致的微服务之间的相互访问。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e根据应用系统的数据敏感程度的不同，对于系统内微服务的相互访问可能有不同的安全要求。\u003c/p\u003e","tags":["Microservice","Security"],"title":"微服务安全沉思录之二","type":"post","url":"/2018/05/23/service_2_service_auth/","weight":0,"wordcount":1935},{"author":null,"categories":["Tech"],"content":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","date":1527069600,"description":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","dir":"post\\","excerpt_html":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","excerpt_text":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","expirydate":-62135596800,"fuzzywordcount":3100,"html":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","keywords":null,"kind":"page","lang":"en","lastmod":1527069600,"objectID":"3fc17cbcf909103e423326182d72a807","permalink":"http://localhost:1313/2018/05/22/user_authentication_authorization/","publishdate":"2018-05-23T10:00:00Z","readingtime":7,"relpermalink":"/2018/05/22/user_authentication_authorization/","section":"post","summary":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清了在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在","tags":["Microservice","Security"],"title":"微服务安全沉思录之一","type":"post","url":"/2018/05/22/user_authentication_authorization/","weight":0,"wordcount":3087},{"author":null,"categories":["Tech"],"content":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","date":1527033600,"description":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","dir":"post\\","excerpt_html":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","excerpt_text":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","expirydate":-62135596800,"fuzzywordcount":1200,"html":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","keywords":null,"kind":"page","lang":"en","lastmod":1527033600,"objectID":"61cbee2b7380aaa6e9b9f882840da6a0","permalink":"http://localhost:1313/2018/05/23/istio-auto-injection-with-webhook/","publishdate":"2018-05-23T00:00:00Z","readingtime":3,"relpermalink":"/2018/05/23/istio-auto-injection-with-webhook/","section":"post","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003chr\u003e\n\u003cp\u003eKubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。\u003c/p\u003e\n\u003cp\u003e使用webhook的优势是不需要对API Server的源码进行修改和重新编译就可以扩展其功能。插入的逻辑实现为一个独立的web进程，通过参数方式传入到kubernets中，由kubernets在进行自身逻辑处理时对扩展逻辑进行回调。\u003c/p\u003e\n\u003cp\u003eIstio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。\u003c/p\u003e","tags":["Kubernetes","Istio"],"title":"Istio Sidecar自动注入原理","type":"post","url":"/2018/05/23/istio-auto-injection-with-webhook/","weight":0,"wordcount":1133},{"author":null,"categories":["Tech"],"content":null,"date":1526900400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1526900400,"objectID":"bf66956078def1376b24541987e8dd17","permalink":"http://localhost:1313/2018/05/21/algolia-integration-with-jekyll/","publishdate":"2018-05-21T11:00:00Z","readingtime":2,"relpermalink":"/2018/05/21/algolia-integration-with-jekyll/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003eThis series of articles are my notes of \u0026ldquo;Bitcoin and Cryptocurrency Technologies\u0026rdquo; online course.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"table-of-content\"\u003eTable of Content\u003c/h2\u003e\n\u003cp\u003e{:.no_toc}\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTable of Content\n{:toc}\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"scrooge-coin-transaction\"\u003eScrooge Coin Transaction\u003c/h2\u003e\n\u003cp\u003eScrooge Coin programming assignment is a little bit tricky, the video of this lesson hasn\u0026rsquo;t explained some implementation details. To help you understand the transaction data structure used in Scrooge Coin, I draw this diagram:\n\n  \u003cimg src=\"/img//2018-5-20-cryptocurrency_week1_scroogecoin/scroogecoin.png\" alt=\"Scrooge Coin\"\u003e\n\n\u003c/p\u003e","tags":["Jekyll:q","Bitcoin"],"title":"使用Algolia为Gitpage博客提供站内搜索","type":"post","url":"/2018/05/21/algolia-integration-with-jekyll/","weight":0,"wordcount":792},{"author":null,"categories":["Tech"],"content":"Finally, I got to the most exciting part of week 1 lectures-the programming assignment!","date":1526774400,"description":"Finally, I got to the most exciting part of week 1 lectures-the programming assignment!","dir":"post\\","excerpt_html":"Finally, I got to the most exciting part of week 1 lectures-the programming assignment!","excerpt_text":"Finally, I got to the most exciting part of week 1 lectures-the programming assignment!","expirydate":-62135596800,"fuzzywordcount":1000,"html":"Finally, I got to the most exciting part of week 1 lectures-the programming assignment!","keywords":null,"kind":"page","lang":"en","lastmod":1526774400,"objectID":"f9b26a9effdce26ba5277940026b255e","permalink":"http://localhost:1313/2018/05/20/cryptocurrency_week1_scroogecoin/","publishdate":"2018-05-20T00:00:00Z","readingtime":2,"relpermalink":"/2018/05/20/cryptocurrency_week1_scroogecoin/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003eThis series of articles are my notes of \u0026ldquo;Bitcoin and Cryptocurrency Technologies\u0026rdquo; online course.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eFinally, I got to the most exciting part of week 1 lectures-the programming assignment!\u003c/p\u003e","tags":["Cryptocurrency","Bitcoin"],"title":"Programming Assignment: Scrooge Coin","type":"post","url":"/2018/05/20/cryptocurrency_week1_scroogecoin/","weight":0,"wordcount":941},{"author":null,"categories":["Tech"],"content":"Some fundamental cryptographic technologies in Bitcoin: Asymmetic encryption(Public/Private key), Digital Signature, Digital Identity(Public key and Digital Certificate).","date":1526342400,"description":"Some fundamental cryptographic technologies in Bitcoin: Asymmetic encryption(Public/Private key), Digital Signature, Digital Identity(Public key and Digital Certificate).","dir":"post\\","excerpt_html":"Some fundamental cryptographic technologies in Bitcoin: Asymmetic encryption(Public/Private key), Digital Signature, Digital Identity(Public key and Digital Certificate).","excerpt_text":"Some fundamental cryptographic technologies in Bitcoin: Asymmetic encryption(Public/Private key), Digital Signature, Digital Identity(Public key and Digital Certificate).","expirydate":-62135596800,"fuzzywordcount":800,"html":"Some fundamental cryptographic technologies in Bitcoin: Asymmetic encryption(Public/Private key), Digital Signature, Digital Identity(Public key and Digital Certificate).","keywords":null,"kind":"page","lang":"en","lastmod":1526342400,"objectID":"67dd16b8561f559ecc9efc1bf17a7496","permalink":"http://localhost:1313/2018/05/12/cryptocurrency_week1_digital_signature/","publishdate":"2018-05-15T00:00:00Z","readingtime":2,"relpermalink":"/2018/05/12/cryptocurrency_week1_digital_signature/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003eThis series of articles are my notes of \u0026ldquo;Bitcoin and Cryptocurrency Technologies\u0026rdquo; online course.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["Cryptocurrency","Blockchain","Bitcoin","Digital Signature"],"title":"Digital Signature and Public Key as Identities","type":"post","url":"/2018/05/12/cryptocurrency_week1_digital_signature/","weight":0,"wordcount":764},{"author":null,"categories":["Tech"],"content":"Hash pointer is used to bulid some key data structures in cryptocurrency, such as Block chain and Merkel tree.","date":1526083200,"description":"Hash pointer is used to bulid some key data structures in cryptocurrency, such as Block chain and Merkel tree.","dir":"post\\","excerpt_html":"Hash pointer is used to bulid some key data structures in cryptocurrency, such as Block chain and Merkel tree.","excerpt_text":"Hash pointer is used to bulid some key data structures in cryptocurrency, such as Block chain and Merkel tree.","expirydate":-62135596800,"fuzzywordcount":600,"html":"Hash pointer is used to bulid some key data structures in cryptocurrency, such as Block chain and Merkel tree.","keywords":null,"kind":"page","lang":"en","lastmod":1526083200,"objectID":"6e1238dc9b8e0a97b06b794ea5c237b3","permalink":"http://localhost:1313/post/2018-05-12-cryptocurrency_week1_hash_pointer_and_data_structures/","publishdate":"2018-05-12T00:00:00Z","readingtime":2,"relpermalink":"/post/2018-05-12-cryptocurrency_week1_hash_pointer_and_data_structures/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003eThis series of articles are my notes of \u0026ldquo;Bitcoin and Cryptocurrency Technologies\u0026rdquo; online course.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"hash-pointer\"\u003eHash Pointer\u003c/h2\u003e\n\u003cp\u003eHash Pointer is comprised of two parts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePointer to where some information is stored\u003c/li\u003e\n\u003cli\u003eCryptographic hash of that information \u003cbr\u003e\nThe pointer can be used to get the information, the hash can be used to verify that information hasn\u0026rsquo;t been changed \u003cbr\u003e\n\n  \u003cimg src=\"/img//2018-05-12-cryptocurrency_week1_hash_pointer_and_data_structures/hashpointet.png\" alt=\"hashpointer\"\u003e\n\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["Cryptocurrency","Blockchain","Bitcoin"],"title":"Hash Pointers and Data Structures","type":"post","url":"/post/2018-05-12-cryptocurrency_week1_hash_pointer_and_data_structures/","weight":0,"wordcount":506},{"author":null,"categories":["Tech"],"content":"Hash function can produce a fixed lenght digest of any size of data, and the original data can not be found out if it's properly used.","date":1525903200,"description":"Hash function can produce a fixed lenght digest of any size of data, and the original data can not be found out if it's properly used.","dir":"post\\","excerpt_html":"Hash function can produce a fixed lenght digest of any size of data, and the original data can not be found out if it's properly used.","excerpt_text":"Hash function can produce a fixed lenght digest of any size of data, and the original data can not be found out if it's properly used.","expirydate":-62135596800,"fuzzywordcount":1300,"html":"Hash function can produce a fixed lenght digest of any size of data, and the original data can not be found out if it's properly used.","keywords":null,"kind":"page","lang":"en","lastmod":1525903200,"objectID":"0b411c64fc8a58f55dfe5a0fac7c8e73","permalink":"http://localhost:1313/2018/05/07/cryptocurrency_week1_cryptographic_hash_function/","publishdate":"2018-05-09T22:00:00Z","readingtime":3,"relpermalink":"/2018/05/07/cryptocurrency_week1_cryptographic_hash_function/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003eThis series of articles are my notes of \u0026ldquo;Bitcoin and Cryptocurrency Technologies\u0026rdquo; online course.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"hash-function\"\u003eHash Function\u003c/h2\u003e\n\u003cp\u003eHash function is a mathematical function:\u003cem\u003eH(X)=Y\u003c/em\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eH:  A hash function which takes an input value and calculates an output value\u003c/li\u003e\n\u003cli\u003eX: Input of the hash function, it could be any data of any length\u003c/li\u003e\n\u003cli\u003eY: Output of the hash function: a fix-size bit(, it can be 256, 384, 516 \u0026hellip;, Bitcoin uses 256)\u003c/li\u003e\n\u003c/ul\u003e","tags":["Cryptocurrency","Blockchain","Bitcoin"],"title":"Cryptographic Hash Function","type":"post","url":"/2018/05/07/cryptocurrency_week1_cryptographic_hash_function/","weight":0,"wordcount":1212},{"author":null,"categories":["Tech"],"content":"I have noticed the buzzwords “Bitcoin” and “Blockchain” for a while. There are lots of articles, news, and talks around them. It seems that many people believe that cryptocurrency is the future of online payment, some even claim that blockchain would become the fundamental technology of the next generation of the Internet.","date":1525564800,"description":"I have noticed the buzzwords “Bitcoin” and “Blockchain” for a while. There are lots of articles, news, and talks around them. It seems that many people believe that cryptocurrency is the future of online payment, some even claim that blockchain would become the fundamental technology of the next generation of the Internet.","dir":"post\\","excerpt_html":"I have noticed the buzzwords “Bitcoin” and “Blockchain” for a while. There are lots of articles, news, and talks around them. It seems that many people believe that cryptocurrency is the future of online payment, some even claim that blockchain would become the fundamental technology of the next generation of the Internet.","excerpt_text":"I have noticed the buzzwords “Bitcoin” and “Blockchain” for a while. There are lots of articles, news, and talks around them. It seems that many people believe that cryptocurrency is the future of online payment, some even claim that blockchain would become the fundamental technology of the next generation of the Internet.","expirydate":-62135596800,"fuzzywordcount":500,"html":"I have noticed the buzzwords “Bitcoin” and “Blockchain” for a while. There are lots of articles, news, and talks around them. It seems that many people believe that cryptocurrency is the future of online payment, some even claim that blockchain would become the fundamental technology of the next generation of the Internet.","keywords":null,"kind":"page","lang":"en","lastmod":1525564800,"objectID":"5fa65d3b205fe25183555ba9ff29ac5d","permalink":"http://localhost:1313/2018/05/06/cryptocurrency_week1/","publishdate":"2018-05-06T00:00:00Z","readingtime":1,"relpermalink":"/2018/05/06/cryptocurrency_week1/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003eThis series of articles are my notes of \u0026ldquo;Bitcoin and Cryptocurrency Technologies\u0026rdquo; online course.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"how-did-i-get-into-this\"\u003eHow did I get into this?\u003c/h2\u003e\n\u003cp\u003eI have noticed the buzzwords “Bitcoin” and “Blockchain” for a while. There are lots of articles, news, and talks around them. It seems that many people believe that cryptocurrency is the future of online payment, some even claim that blockchain would become the fundamental technology of the next generation of the Internet.\u003c/p\u003e","tags":["Cryptocurrency","Blockchain","Bitcoin"],"title":"Introduction to crypto and cryptocurrencies","type":"post","url":"/2018/05/06/cryptocurrency_week1/","weight":0,"wordcount":431},{"author":null,"categories":null,"content":"五一节前的一周内，几个朋友就纷纷坐不住了，一个二个不再安心上班，开始在微信群里讨论过节要到哪里耍。 大家思来想去，最后决定还是去理县方向。因为根据多年自驾的经验，只要出了汶川，沿途都是风景。","date":1525132800,"description":"五一节前的一周内，几个朋友就纷纷坐不住了，一个二个不再安心上班，开始在微信群里讨论过节要到哪里耍。 大家思来想去，最后决定还是去理县方向。因为根据多年自驾的经验，只要出了汶川，沿途都是风景。","dir":"post\\","excerpt_html":"五一节前的一周内，几个朋友就纷纷坐不住了，一个二个不再安心上班，开始在微信群里讨论过节要到哪里耍。 大家思来想去，最后决定还是去理县方向。因为根据多年自驾的经验，只要出了汶川，沿途都是风景。","excerpt_text":"五一节前的一周内，几个朋友就纷纷坐不住了，一个二个不再安心上班，开始在微信群里讨论过节要到哪里耍。 大家思来想去，最后决定还是去理县方向。因为根据多年自驾的经验，只要出了汶川，沿途都是风景。","expirydate":-62135596800,"fuzzywordcount":3600,"html":"五一节前的一周内，几个朋友就纷纷坐不住了，一个二个不再安心上班，开始在微信群里讨论过节要到哪里耍。 大家思来想去，最后决定还是去理县方向。因为根据多年自驾的经验，只要出了汶川，沿途都是风景。","keywords":null,"kind":"page","lang":"en","lastmod":1525132800,"objectID":"14429f8bcce027e828700689f3857119","permalink":"http://localhost:1313/2018/05/01/may-day-jiulonghu/","publishdate":"2018-05-01T00:00:00Z","readingtime":8,"relpermalink":"/2018/05/01/may-day-jiulonghu/","section":"post","summary":"\u003ch2 id=\"寻浮云牧场不遇\"\u003e寻浮云牧场不遇\u003c/h2\u003e\n\u003cp\u003e五一节前的一周内，几个朋友就纷纷坐不住了，一个二个不再安心上班，开始在微信群里讨论过节要到哪里耍。\n大家思来想去，最后决定还是去理县方向。因为根据多年自驾的经验，只要出了汶川，沿途都是风景。\u003c/p\u003e","tags":["Travel"],"title":"川西秘境探险","type":"post","url":"/2018/05/01/may-day-jiulonghu/","weight":0,"wordcount":3568},{"author":null,"categories":["Tech"],"content":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","date":1523890800,"description":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","dir":"post\\","excerpt_html":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","excerpt_text":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","expirydate":-62135596800,"fuzzywordcount":5000,"html":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","keywords":null,"kind":"page","lang":"en","lastmod":1523890800,"objectID":"8160a1bd8df0fbf81c4f36a3c6e7d3af","permalink":"http://localhost:1313/2018/04/16/using-helm-to-deploy-to-kubernetes/","publishdate":"2018-04-16T15:00:00Z","readingtime":10,"relpermalink":"/2018/04/16/using-helm-to-deploy-to-kubernetes/","section":"post","summary":"前言 Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Hel","tags":["Kubernetes","Helm"],"title":"Helm介绍","type":"post","url":"/2018/04/16/using-helm-to-deploy-to-kubernetes/","weight":0,"wordcount":4996},{"author":null,"categories":["Tech"],"content":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","date":1523439120,"description":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","dir":"post\\","excerpt_html":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","excerpt_text":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","expirydate":-62135596800,"fuzzywordcount":1700,"html":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","keywords":null,"kind":"page","lang":"en","lastmod":1523439120,"objectID":"10512631762a4eb4fe14a47b7cb61d54","permalink":"http://localhost:1313/2018/04/11/service-mesh-vs-api-gateway/","publishdate":"2018-04-11T09:32:00Z","readingtime":4,"relpermalink":"/2018/04/11/service-mesh-vs-api-gateway/","section":"post","summary":"Service Mesh vs API Gateway 在前一篇关于Service Mesh的文章中,我提到了几个关于Service Mesh和API Gateway之间关系的问题，在本篇文章","tags":["Microservice","Service Mesh","API Gateway"],"title":"Service Mesh 和 API Gateway的关系探讨（译文）","type":"post","url":"/2018/04/11/service-mesh-vs-api-gateway/","weight":0,"wordcount":1697},{"author":null,"categories":["Tech"],"content":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","date":1522324800,"description":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","dir":"post\\","excerpt_html":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","excerpt_text":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","expirydate":-62135596800,"fuzzywordcount":8500,"html":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","keywords":null,"kind":"page","lang":"en","lastmod":1522324800,"objectID":"58e1fcbb286268d60015d8695e72e3b4","permalink":"http://localhost:1313/2018/03/29/what-is-service-mesh-and-istio/","publishdate":"2018-03-29T12:00:00Z","readingtime":17,"relpermalink":"/2018/03/29/what-is-service-mesh-and-istio/","section":"post","summary":"\u003ch2 id=\"微服务架构的演进\"\u003e微服务架构的演进\u003c/h2\u003e\n\u003cp\u003e作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。\u003c/p\u003e\n\u003cp\u003e另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性。\u003c/p\u003e","tags":["Microservice","Service Mesh","Istio"],"title":"谈谈微服务架构中的基础设施：Service Mesh与Istio","type":"post","url":"/2018/03/29/what-is-service-mesh-and-istio/","weight":0,"wordcount":8405},{"author":null,"categories":["Tech"],"content":"如何配置docker使用HTTP代理","date":1520964000,"description":"如何配置docker使用HTTP代理","dir":"post\\","excerpt_html":"如何配置docker使用HTTP代理","excerpt_text":"如何配置docker使用HTTP代理","expirydate":-62135596800,"fuzzywordcount":100,"html":"如何配置docker使用HTTP代理","keywords":null,"kind":"page","lang":"en","lastmod":1520964000,"objectID":"98b8057999561a04d562f017fde4df05","permalink":"http://localhost:1313/2018/03/13/use-docker-behind-http-proxy/","publishdate":"2018-03-13T18:00:00Z","readingtime":1,"relpermalink":"/2018/03/13/use-docker-behind-http-proxy/","section":"post","summary":"\u003ch2 id=\"ubuntu\"\u003eUbuntu\u003c/h2\u003e\n\u003ch3 id=\"设置docker使用http-proxy\"\u003e设置docker使用http proxy\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esudo /etc/default/docker\n\nexport http_proxy=\u0026#34;http://127.0.0.1:3128/\u0026#34;\nexport https_proxy=\u0026#34;http://127.0.0.1:3128/\u0026#34;\nexport HTTP_PROXY=\u0026#34;http://127.0.0.1:3128/\u0026#34;\nexport HTTPS_PROXY=\u0026#34;http://127.0.0.1:3128/\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e","tags":["Docker"],"title":"如何配置docker使用HTTP代理","type":"post","url":"/2018/03/13/use-docker-behind-http-proxy/","weight":0,"wordcount":92},{"author":null,"categories":["Tech"],"content":"Vim Tips and tricks","date":1518174000,"description":"Vim Tips and tricks","dir":"post\\","excerpt_html":"Vim Tips and tricks","excerpt_text":"Vim Tips and tricks","expirydate":-62135596800,"fuzzywordcount":200,"html":"Vim Tips and tricks","keywords":null,"kind":"page","lang":"en","lastmod":1518174000,"objectID":"2d0e4272390337188b486ff2335caebb","permalink":"http://localhost:1313/2018/02/09/vim-tips/","publishdate":"2018-02-09T11:00:00Z","readingtime":1,"relpermalink":"/2018/02/09/vim-tips/","section":"post","summary":"\u003ch2 id=\"vim-graphical-cheat-sheet\"\u003evim graphical cheat sheet\u003c/h2\u003e\n\u003cp\u003e\n  \u003cimg src=\"/img/2018-02-09-vim-tips/vi-vim-cheat-sheet.svg\" alt=\"\"\u003e\n\n\u003c/p\u003e","tags":["Vim"],"title":"Vim Tips","type":"post","url":"/2018/02/09/vim-tips/","weight":0,"wordcount":181},{"author":null,"categories":["Tech"],"content":"","date":1518170400,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1518170400,"objectID":"92d7e3e34329f74a5a955e31f5743bae","permalink":"http://localhost:1313/post/2018-02-09-docker-without-sudo/","publishdate":"2018-02-09T10:00:00Z","readingtime":1,"relpermalink":"/post/2018-02-09-docker-without-sudo/","section":"post","summary":"Allow none-root users sudo groupadd docker sudo gpasswd -a $USER docker newgrp docker Solve \u0026ldquo;no space left on device\u0026rdquo; ubuntu sudo vi /etc/docker/daemon.json { \u0026#34;storage-driver\u0026#34;: \u0026#34;devicemapper\u0026#34;, \u0026#34;storage-opts\u0026#34;: [ \u0026#34;dm.basesize=40G\u0026#34; ] } Mac Docker -\u0026gt; settings -\u0026gt; Resources -\u0026gt; Disk Image Size","tags":["Docker"],"title":"Docker Tips","type":"post","url":"/post/2018-02-09-docker-without-sudo/","weight":0,"wordcount":41},{"author":null,"categories":["Tech"],"content":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","date":1517659200,"description":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","dir":"post\\","excerpt_html":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","excerpt_text":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","expirydate":-62135596800,"fuzzywordcount":5600,"html":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","keywords":null,"kind":"page","lang":"en","lastmod":1517659200,"objectID":"c1d32da205ea082b3dd7061c39ea7e8b","permalink":"http://localhost:1313/2018/02/03/authentication-and-authorization-of-microservice/","publishdate":"2018-02-03T12:00:00Z","readingtime":12,"relpermalink":"/2018/02/03/authentication-and-authorization-of-microservice/","section":"post","summary":"前言 微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统","tags":["Microservice","Security"],"title":"如何构建安全的微服务应用？","type":"post","url":"/2018/02/03/authentication-and-authorization-of-microservice/","weight":0,"wordcount":5532},{"author":null,"categories":["Tech"],"content":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","date":1514894400,"description":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","dir":"post\\","excerpt_html":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","excerpt_text":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","expirydate":-62135596800,"fuzzywordcount":2700,"html":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","keywords":null,"kind":"page","lang":"en","lastmod":1514894400,"objectID":"f12f8e4e5417662ca5f2745b62aadb1e","permalink":"http://localhost:1313/2018/01/02/nginmesh-install/","publishdate":"2018-01-02T12:00:00Z","readingtime":6,"relpermalink":"/2018/01/02/nginmesh-install/","section":"post","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003eNginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。\u003c/p\u003e","tags":["Istio","service Mesh","nginmesh"],"title":"Nginx开源Service Mesh组件Nginmesh安装指南","type":"post","url":"/2018/01/02/nginmesh-install/","weight":0,"wordcount":2677},{"author":null,"categories":null,"content":"Cozy apartment for rent, 1 bedroom, next to the UESTC Qingshuihe Campus","date":1514764800,"description":"Cozy apartment for rent, 1 bedroom, next to the UESTC Qingshuihe Campus","dir":"post\\","excerpt_html":"Cozy apartment for rent, 1 bedroom, next to the UESTC Qingshuihe Campus","excerpt_text":"Cozy apartment for rent, 1 bedroom, next to the UESTC Qingshuihe Campus","expirydate":-62135596800,"fuzzywordcount":200,"html":"Cozy apartment for rent, 1 bedroom, next to the UESTC Qingshuihe Campus","keywords":null,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"8d1d6d9d8bb80f966fbe9c2bca5327db","permalink":"http://localhost:1313/post/longfor-apartment/","publishdate":"2018-01-01T00:00:00Z","readingtime":1,"relpermalink":"/post/longfor-apartment/","section":"post","summary":"Overview Hello, this is Zhao, I have a cozy apartment next to UESTC Qingshuihe Campus(University of Electronic Science and Technology of China). It\u0026rsquo;s a one bedroom apartment, fully furnished and has all the necessary facilities a modern apartment should have. This property is developed and managed by Longfor, well-known for its good service.\nProperty Type: Apartment Room: Wardrobe, Private room, Single room,Private bathroom General Description: Furnished, Parking, Electric Heating, WIFI - Internet, Air Conditioning(Cool and warm) The Livingroom: Sofa, Furnished, TV The Kitchen: Kitchen fully equipped, Oven, Fridge, Electric Hob English speaking rental service There\u0026rsquo;s no agency/middleman, so you don\u0026rsquo;t have to pay extra money.","tags":null,"title":"Cozy Apartment for Rent","type":"post","url":"/post/longfor-apartment/","weight":0,"wordcount":197},{"author":null,"categories":["Tech"],"content":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","date":1511870400,"description":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","dir":"post\\","excerpt_html":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","excerpt_text":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","expirydate":-62135596800,"fuzzywordcount":5600,"html":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","keywords":null,"kind":"page","lang":"en","lastmod":1511870400,"objectID":"62314fd01037305fcf6b8c9ad3b3b02d","permalink":"http://localhost:1313/2017/11/28/access-application-from-outside/","publishdate":"2017-11-28T12:00:00Z","readingtime":12,"relpermalink":"/2017/11/28/access-application-from-outside/","section":"post","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003e我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。\u003c/p\u003e","tags":["Kubernetes"],"title":"如何从外部访问Kubernetes集群中的应用？","type":"post","url":"/2017/11/28/access-application-from-outside/","weight":0,"wordcount":5543},{"author":null,"categories":["Tech"],"content":"使用Visual Basic Script脚本和Windows定时任务自动设置windows HTTP 代理服务器。","date":1511395200,"description":"使用Visual Basic Script脚本和Windows定时任务自动设置windows HTTP 代理服务器。","dir":"post\\","excerpt_html":"使用Visual Basic Script脚本和Windows定时任务自动设置windows HTTP 代理服务器。","excerpt_text":"使用Visual Basic Script脚本和Windows定时任务自动设置windows HTTP 代理服务器。","expirydate":-62135596800,"fuzzywordcount":1100,"html":"使用Visual Basic Script脚本和Windows定时任务自动设置windows HTTP 代理服务器。","keywords":null,"kind":"page","lang":"en","lastmod":1511395200,"objectID":"6118c4eaa239ccf4428eb78b24918e73","permalink":"http://localhost:1313/2017/11/23/windows-proxy-scripts/","publishdate":"2017-11-23T00:00:00Z","readingtime":3,"relpermalink":"/2017/11/23/windows-proxy-scripts/","section":"post","summary":"\u003ch2 id=\"问题\"\u003e问题\u003c/h2\u003e\n\u003cp\u003e我非常愿意在日程使用的工作工具上进行投资，好的工具可以提升效率，因为工具的问题导致思维中断非常让人沮丧。我在办公室使用一台ThinkPad笔记本，笔记本是公司发的，我自己花钱升级了SSD，内存，安装的是Win10，秒级启动，安装vagrant和virtualbox后，用Linux虚机进行开发也很顺手。但一个小代理服务器设置的小问题却影响了我使用笔记本处理事务的体验。\u003c/p\u003e","tags":null,"title":"使用脚本和定时任务自动设置windows HTTP 代理服务器","type":"post","url":"/2017/11/23/windows-proxy-scripts/","weight":0,"wordcount":1031},{"author":null,"categories":["Presentations"],"content":"In this session, I'll talk about the MSB Plan for R2 and Beyond. I'll also discuss the OMSA(ONAP Microservice Architecture): the vision of ONAP Microservice Architecture to support Carrier-Grade requirements of ONAP Microservices, which includes Service Orchestration, Service Discovery, Inter-service Communication, Service Governance and Service Monitoring and External API Gateway.","date":1510358400,"description":"In this session, I'll talk about the MSB Plan for R2 and Beyond. I'll also discuss the OMSA(ONAP Microservice Architecture): the vision of ONAP Microservice Architecture to support Carrier-Grade requirements of ONAP Microservices, which includes Service Orchestration, Service Discovery, Inter-service Communication, Service Governance and Service Monitoring and External API Gateway.","dir":"post\\","excerpt_html":"In this session, I'll talk about the MSB Plan for R2 and Beyond. I'll also discuss the OMSA(ONAP Microservice Architecture): the vision of ONAP Microservice Architecture to support Carrier-Grade requirements of ONAP Microservices, which includes Service Orchestration, Service Discovery, Inter-service Communication, Service Governance and Service Monitoring and External API Gateway.","excerpt_text":"In this session, I'll talk about the MSB Plan for R2 and Beyond. I'll also discuss the OMSA(ONAP Microservice Architecture): the vision of ONAP Microservice Architecture to support Carrier-Grade requirements of ONAP Microservices, which includes Service Orchestration, Service Discovery, Inter-service Communication, Service Governance and Service Monitoring and External API Gateway.","expirydate":-62135596800,"fuzzywordcount":200,"html":"In this session, I'll talk about the MSB Plan for R2 and Beyond. I'll also discuss the OMSA(ONAP Microservice Architecture): the vision of ONAP Microservice Architecture to support Carrier-Grade requirements of ONAP Microservices, which includes Service Orchestration, Service Discovery, Inter-service Communication, Service Governance and Service Monitoring and External API Gateway.","keywords":null,"kind":"page","lang":"en","lastmod":1510358400,"objectID":"7cfdfac683204e90d064ae358e726ecb","permalink":"http://localhost:1313/post/2017-11-11-onap-msb-to-support-carrier-grade-onap-microservice-architecture-with-service-mesh/","publishdate":"2017-11-11T00:00:00Z","readingtime":1,"relpermalink":"/post/2017-11-11-onap-msb-to-support-carrier-grade-onap-microservice-architecture-with-service-mesh/","section":"post","summary":"Introduction In this session, I\u0026rsquo;ll talk about the MSB Plan for R2 and Beyond. I\u0026rsquo;ll also discuss the OMSA(ONAP Microservice Architecture): the vision of ONAP Microservice Architecture to support Carrier-Grade requirements of ONAP Microservices, which includes Service Orchestration, Service Discovery, Inter-service Communication, Service Governance and Service Monitoring and External API Gateway. ONAP Architecture Principle: ONAP modules should be designed as microservices: service-based with clear, concise function addressed by each service","tags":["ONAP","Microservice","API Gateway"],"title":"LFN ONAP Beijing Release Developer Forum: MSB to Support Carrier Grade ONAP Microservice Architecture with Service Mesh","type":"post","url":"/post/2017-11-11-onap-msb-to-support-carrier-grade-onap-microservice-architecture-with-service-mesh/","weight":0,"wordcount":127},{"author":null,"categories":["Tech"],"content":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","date":1510153200,"description":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","dir":"post\\","excerpt_html":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","excerpt_text":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","expirydate":-62135596800,"fuzzywordcount":3300,"html":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","keywords":null,"kind":"page","lang":"en","lastmod":1510153200,"objectID":"320d9f0641802d90086c08b5cf554c4d","permalink":"http://localhost:1313/2017/11/08/istio-canary-release/","publishdate":"2017-11-08T15:00:00Z","readingtime":7,"relpermalink":"/2017/11/08/istio-canary-release/","section":"post","summary":"灰度发布（又名金丝雀发布）介绍 当应用上线以后，运维面临的一大挑战是如何能够在不影响已上线业务的情况下进行升级。做过产品的同学都清楚，不管在发","tags":["Istio"],"title":"采用Istio实现灰度发布(金丝雀发布)","type":"post","url":"/2017/11/08/istio-canary-release/","weight":0,"wordcount":3210},{"author":null,"categories":["Tech"],"content":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","date":1510012800,"description":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","dir":"post\\","excerpt_html":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","excerpt_text":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","expirydate":-62135596800,"fuzzywordcount":1400,"html":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","keywords":null,"kind":"page","lang":"en","lastmod":1510012800,"objectID":"5ae8190e8b21dc18fae6ba6a26ad2f8e","permalink":"http://localhost:1313/2017/11/07/istio-traffic-shifting/","publishdate":"2017-11-07T00:00:00Z","readingtime":3,"relpermalink":"/2017/11/07/istio-traffic-shifting/","section":"post","summary":"\u003cp\u003e关于Istio的更多内容请参考\u003ca href=\"http://istio.doczh.cn/\"\u003eistio中文文档\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e原文参见\u003ca href=\"https://istio.io/docs/tasks/traffic-management/traffic-shifting.html\"\u003eTraffic Shifting\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。\u003c/p\u003e","tags":["Istio"],"title":"使用Istio实现应用流量转移","type":"post","url":"/2017/11/07/istio-traffic-shifting/","weight":0,"wordcount":1313},{"author":null,"categories":["Tech"],"content":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","date":1509796800,"description":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","dir":"post\\","excerpt_html":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","excerpt_text":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","expirydate":-62135596800,"fuzzywordcount":5600,"html":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","keywords":null,"kind":"page","lang":"en","lastmod":1509796800,"objectID":"d993f98f09d7341809e97a3c1ba8e960","permalink":"http://localhost:1313/2017/11/04/istio-install_and_example/","publishdate":"2017-11-04T12:00:00Z","readingtime":12,"relpermalink":"/2017/11/04/istio-install_and_example/","section":"post","summary":"\u003ch2 id=\"服务网格简介\"\u003e服务网格简介\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e服务网格\u003c/strong\u003e（Service Mesh）是为解决微服务的通信和治理而出现的一种\u003cstrong\u003e架构模式\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e服务网格将服务间通讯以及与此相关的管理控制功能从业务程序中下移到一个基础设施层，从而彻底隔离了业务逻辑和服务通讯两个关注点。采用服务网格后，应用开发者只需要关注并实现应用业务逻辑。服务之间的通信，包括服务发现，通讯的可靠性，通讯的安全性，服务路由等由服务网格层进行处理，并对应用程序透明。\u003c/p\u003e","tags":["Istio"],"title":"Istio及Bookinfo示例程序安装试用笔记","type":"post","url":"/2017/11/04/istio-install_and_example/","weight":0,"wordcount":5529},{"author":null,"categories":null,"content":null,"date":1509753600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509753600,"objectID":"cf37d97d83d29e7c3f79c50c928a7a4d","permalink":"http://localhost:1313/2017/11/03/hello-world/","publishdate":"2017-11-04T00:00:00Z","readingtime":1,"relpermalink":"/2017/11/03/hello-world/","section":"post","summary":"“Yeah It\u0026rsquo;s on. ” Hello World!","tags":null,"title":"Welcome to Zhaohuabing Blog","type":"post","url":"/2017/11/03/hello-world/","weight":0,"wordcount":10},{"author":null,"categories":["Presentations"],"content":"Microservices Bus(MSB) provide a reliable, resilient and scalable communication and governance infrastructure to support Microservice Architecture including including service registration/discovery, external API gateway, internal API gateway, client SDK.It's a pluggable architecture so it can integrate with auth service provider to provide centralized Authentication \u0026 Authorization. MSB also provides a service portal to manage the REST APIs.","date":1506297600,"description":"Microservices Bus(MSB) provide a reliable, resilient and scalable communication and governance infrastructure to support Microservice Architecture including including service registration/discovery, external API gateway, internal API gateway, client SDK.It's a pluggable architecture so it can integrate with auth service provider to provide centralized Authentication \u0026 Authorization. MSB also provides a service portal to manage the REST APIs.","dir":"post\\","excerpt_html":"Microservices Bus(MSB) provide a reliable, resilient and scalable communication and governance infrastructure to support Microservice Architecture including including service registration/discovery, external API gateway, internal API gateway, client SDK.It's a pluggable architecture so it can integrate with auth service provider to provide centralized Authentication \u0026 Authorization. MSB also provides a service portal to manage the REST APIs.","excerpt_text":"Microservices Bus(MSB) provide a reliable, resilient and scalable communication and governance infrastructure to support Microservice Architecture including including service registration/discovery, external API gateway, internal API gateway, client SDK.It's a pluggable architecture so it can integrate with auth service provider to provide centralized Authentication \u0026 Authorization. MSB also provides a service portal to manage the REST APIs.","expirydate":-62135596800,"fuzzywordcount":100,"html":"Microservices Bus(MSB) provide a reliable, resilient and scalable communication and governance infrastructure to support Microservice Architecture including including service registration/discovery, external API gateway, internal API gateway, client SDK.It's a pluggable architecture so it can integrate with auth service provider to provide centralized Authentication \u0026 Authorization. MSB also provides a service portal to manage the REST APIs.","keywords":null,"kind":"page","lang":"en","lastmod":1506297600,"objectID":"a14be1cde45120db91d605bc685754fc","permalink":"http://localhost:1313/post/2017-09-25-onap-microservice-bus-tutorial-/","publishdate":"2017-09-25T00:00:00Z","readingtime":1,"relpermalink":"/post/2017-09-25-onap-microservice-bus-tutorial-/","section":"post","summary":"Introduction Microservices Bus(MSB) provide a reliable, resilient and scalable communication and governance infrastructure to support Microservice Architecture including including service registration/discovery, external API gateway, internal API gateway, client SDK. It\u0026rsquo;s a pluggable architecture so it can integrate with auth service provider to provide centralized Authentication \u0026amp; Authorization. MSB also provides a service portal to manage the REST APIs. MSB doesn’t depend on a specific","tags":["ONAP","Microservice","API Gateway"],"title":"LFN ONAP Developer Event: Microservice Bus Tutorial ","type":"post","url":"/post/2017-09-25-onap-microservice-bus-tutorial-/","weight":0,"wordcount":94},{"author":null,"categories":["Presentations"],"content":"In this session, I'll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.","date":1492387200,"description":"In this session, I'll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.","dir":"post\\","excerpt_html":"In this session, I'll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.","excerpt_text":"In this session, I'll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.","expirydate":-62135596800,"fuzzywordcount":100,"html":"In this session, I'll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.","keywords":null,"kind":"page","lang":"en","lastmod":1492387200,"objectID":"7102a83b9231c355946965586c3437fe","permalink":"http://localhost:1313/post/2017-04-14-onap-microservice-powered-orchestration-architecture/","publishdate":"2017-04-17T00:00:00Z","readingtime":1,"relpermalink":"/post/2017-04-14-onap-microservice-powered-orchestration-architecture/","section":"post","summary":"Introduction In this session, I\u0026rsquo;ll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications. First, I will start with why we choose Microservice Architecture in OPEN-O. Then, I’d like to talk about the challenges we were facing when we turn to the microservice approach. Finally, How we address these challenges in OPEN-O with the help of Microservice BUS And","tags":["ONAP","Microservice","API Gateway"],"title":"ONS ONAP Minisummit: Microservice Powered Orchestration Architecture","type":"post","url":"/post/2017-04-14-onap-microservice-powered-orchestration-architecture/","weight":0,"wordcount":89},{"author":null,"categories":["Presentations"],"content":"In this session, I'll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.","date":1491091200,"description":"In this session, I'll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.","dir":"post\\","excerpt_html":"In this session, I'll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.","excerpt_text":"In this session, I'll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.","expirydate":-62135596800,"fuzzywordcount":100,"html":"In this session, I'll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.","keywords":null,"kind":"page","lang":"en","lastmod":1491091200,"objectID":"e1d3bbcc5d0e67321efa546893cda812","permalink":"http://localhost:1313/post/2017-04-02-onap-msb-deep-dive/","publishdate":"2017-04-02T00:00:00Z","readingtime":1,"relpermalink":"/post/2017-04-02-onap-msb-deep-dive/","section":"post","summary":"Introduction In this session, I\u0026rsquo;ll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications. First, I will start with why we choose Microservice Architecture in OPEN-O. Then, I’d like to talk about the challenges we were facing when we turn to the microservice approach. Finally, How we address these challenges in OPEN-O with the help of Microservice BUS And","tags":["ONAP","Microservice","API Gateway"],"title":"LFN ONAP Developer Event: MSB Technical Deep Dive and ONAP Use Cases","type":"post","url":"/post/2017-04-02-onap-msb-deep-dive/","weight":0,"wordcount":87},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"about\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"http://localhost:1313/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/about/","section":"","summary":"About Me Hello, I am Huabing Zhao, an engineer at tetrate.io. I have previously worked at Tencent Cloud, ZTE Corporation, and Oracle. My current primary focus is on Envoy, Envoy Gateway, and Istio. I created the open-source project Aeraki Mesh (a CNCF Sandbox project), which allows for the management of traffic in Istio for Dubbo, Thrift, Redis, and any proprietary protocols. You can reach me by: Email zhaohuabing@gmail.com WeChat zhao_huabing","tags":null,"title":"","type":"page","url":"/about/","weight":0,"wordcount":417},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notes\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"1ede8046f9c3a02d422dea7bbf324e64","permalink":"http://localhost:1313/notes/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/notes/","section":"","summary":"Go 语言学习笔记 Envoy 学习笔记 Linux 学习笔记","tags":null,"title":"","type":"page","url":"/notes/","weight":0,"wordcount":17},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"reading\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6da302e29c14c780e10955c05f7c11ad","permalink":"http://localhost:1313/reading/","publishdate":"0001-01-01T00:00:00Z","readingtime":4,"relpermalink":"/reading/","section":"","summary":"尘埃落定 所有曾经被唤醒、被激发的一切，都从升得最高最飘的空中慢慢落下了，落入晦暗的意思深处，重新归入了平静。\u0026mdash; 阿来 在读过这篇小说","tags":null,"title":"","type":"page","url":"/reading/","weight":0,"wordcount":1634},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"http://localhost:1313/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":"Archive of historical posts.","date":-62135596800,"description":"Archive of historical posts.","dir":"archive\\","excerpt_html":"Archive of historical posts.","excerpt_text":"Archive of historical posts.","expirydate":-62135596800,"fuzzywordcount":100,"html":"Archive of historical posts.","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a06e5ce9eca4c3260843078104889780","permalink":"http://localhost:1313/archive/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/archive/","section":"","summary":"","tags":null,"title":"Posts Archive","type":"archive","url":"/archive/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"travel\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f0c10fb0daa3b8dc0c0e33e2f272daa0","permalink":"http://localhost:1313/travel/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/travel/","section":"","summary":"“Do not go gentle into that good night” 尘埃落地之前，去看看这世界。 In-N-Out Burger - Milpitas, USA, 2024.05 In-N-Out 是加州才有的快餐连锁店，加州人对 In-N-Out 有着特殊的感情。在疫情之后，其他的","tags":null,"title":"旅行记录","type":"page","url":"/travel/","weight":0,"wordcount":1399}]